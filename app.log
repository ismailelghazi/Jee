2022-01-14 22:29:42.888 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6366ebe0
2022-01-14 22:29:43.066 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-14 22:29:43.121 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-14 22:29:43.200 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-14 22:29:43.202 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-14 22:29:43.331 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-14 22:29:43.554 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-14 22:29:43.555 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-14 22:29:43.556 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-14 22:29:43.576 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/hp/Desktop/tp8/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ibtihal
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-14 22:29:43.592 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-14 22:29:43.597 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-14 22:29:43.618 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-14 22:29:43.783 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-14 22:29:43.788 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-14 22:29:44.258 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-14 22:29:44.287 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-14 22:29:44.290 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-14 22:29:44.332 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-14 22:29:44.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@176b75f7
2022-01-14 22:29:44.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@176b75f7
2022-01-14 22:29:44.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@176b75f7
2022-01-14 22:29:44.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e74829
2022-01-14 22:29:44.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71e693fa
2022-01-14 22:29:44.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3eb77ea8
2022-01-14 22:29:44.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@60b4beb4
2022-01-14 22:29:44.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@60b4beb4
2022-01-14 22:29:44.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@60b4beb4
2022-01-14 22:29:44.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@225129c
2022-01-14 22:29:44.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@225129c
2022-01-14 22:29:44.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@225129c
2022-01-14 22:29:44.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@571c5681
2022-01-14 22:29:44.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@571c5681
2022-01-14 22:29:44.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@571c5681
2022-01-14 22:29:44.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@2d6c53fc
2022-01-14 22:29:44.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@2d6c53fc
2022-01-14 22:29:44.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d6c53fc
2022-01-14 22:29:44.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3148f668
2022-01-14 22:29:44.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3148f668
2022-01-14 22:29:44.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3148f668
2022-01-14 22:29:44.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@59e32960
2022-01-14 22:29:44.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@59e32960
2022-01-14 22:29:44.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59e32960
2022-01-14 22:29:44.886 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@56c4278e
2022-01-14 22:29:44.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@56c4278e
2022-01-14 22:29:44.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56c4278e
2022-01-14 22:29:44.892 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@59cba5a
2022-01-14 22:29:44.893 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@59cba5a
2022-01-14 22:29:44.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@768fc0f2
2022-01-14 22:29:44.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@768fc0f2
2022-01-14 22:29:44.900 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@3f67593e
2022-01-14 22:29:44.901 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@3f67593e
2022-01-14 22:29:44.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14bee915
2022-01-14 22:29:44.905 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59e505b2
2022-01-14 22:29:44.908 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@37e4d7bb
2022-01-14 22:29:44.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37e4d7bb
2022-01-14 22:29:44.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@63611043
2022-01-14 22:29:44.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63611043
2022-01-14 22:29:44.989 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3f57bcad
2022-01-14 22:29:44.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f57bcad
2022-01-14 22:29:44.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@36a5cabc
2022-01-14 22:29:44.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@36a5cabc
2022-01-14 22:29:45.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@181e731e
2022-01-14 22:29:45.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@181e731e
2022-01-14 22:29:45.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@17d88132
2022-01-14 22:29:45.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@17d88132
2022-01-14 22:29:45.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36b4091c
2022-01-14 22:29:45.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36b4091c
2022-01-14 22:29:45.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5b367418
2022-01-14 22:29:45.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5b367418
2022-01-14 22:29:45.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d167f58
2022-01-14 22:29:45.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d167f58
2022-01-14 22:29:45.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@54504ecd
2022-01-14 22:29:45.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54504ecd
2022-01-14 22:29:45.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@6239aba6
2022-01-14 22:29:45.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6239aba6
2022-01-14 22:29:45.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7164ca4c
2022-01-14 22:29:45.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7164ca4c
2022-01-14 22:29:45.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7164ca4c
2022-01-14 22:29:45.031 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f91b517
2022-01-14 22:29:45.034 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@59a008ba
2022-01-14 22:29:45.035 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@59a008ba
2022-01-14 22:29:45.035 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@59a008ba
2022-01-14 22:29:45.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58ce9668
2022-01-14 22:29:45.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1fa1cab1
2022-01-14 22:29:45.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@31ff43be
2022-01-14 22:29:45.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31ff43be
2022-01-14 22:29:45.043 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@132e0cc
2022-01-14 22:29:45.044 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@132e0cc
2022-01-14 22:29:45.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@15713d56
2022-01-14 22:29:45.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@15713d56
2022-01-14 22:29:45.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@d41f816
2022-01-14 22:29:45.050 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d41f816
2022-01-14 22:29:45.052 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3d9c13b5
2022-01-14 22:29:45.052 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3d9c13b5
2022-01-14 22:29:45.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@558bdf1f
2022-01-14 22:29:45.056 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@5f354bcf
2022-01-14 22:29:45.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5f354bcf
2022-01-14 22:29:45.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@5f354bcf
2022-01-14 22:29:45.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4716be8b
2022-01-14 22:29:45.062 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4716be8b
2022-01-14 22:29:45.064 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4716be8b
2022-01-14 22:29:45.068 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@6cce16f4
2022-01-14 22:29:45.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@ca30bc1
2022-01-14 22:29:45.071 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@73cd37c0
2022-01-14 22:29:45.072 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@73cd37c0
2022-01-14 22:29:45.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@73cd37c0
2022-01-14 22:29:45.076 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a2d131d
2022-01-14 22:29:45.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a2d131d
2022-01-14 22:29:45.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a2d131d
2022-01-14 22:29:45.080 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@512baff6
2022-01-14 22:29:45.082 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@1800a575
2022-01-14 22:29:45.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@60856961
2022-01-14 22:29:45.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@60856961
2022-01-14 22:29:45.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@141e5bef
2022-01-14 22:29:45.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@3adcc812
2022-01-14 22:29:45.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3adcc812
2022-01-14 22:29:45.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4b41dd5c
2022-01-14 22:29:45.103 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b41dd5c
2022-01-14 22:29:45.106 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e461e41
2022-01-14 22:29:45.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3899782c
2022-01-14 22:29:45.113 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@332796d3
2022-01-14 22:29:45.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@32c4e8b2
2022-01-14 22:29:45.121 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32c4e8b2
2022-01-14 22:29:45.125 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c1f22f3
2022-01-14 22:29:45.126 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@598bd2ba
2022-01-14 22:29:45.130 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5a755cc1
2022-01-14 22:29:45.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ae42ce3
2022-01-14 22:29:45.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f5991f6
2022-01-14 22:29:45.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@484094a5
2022-01-14 22:29:45.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@38234a38
2022-01-14 22:29:45.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@63fbfaeb
2022-01-14 22:29:45.165 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5bf8fa12] into BootstrapContext; was [null]
2022-01-14 22:29:45.166 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@29ca3d04] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@b2c5e07]
2022-01-14 22:29:45.292 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-14 22:29:45.294 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-14 22:29:45.336 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-14 22:29:45.338 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-14 22:29:45.342 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:29:45.344 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:29:45.345 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-14 22:29:45.347 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-14 22:29:45.349 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-14 22:29:45.368 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:29:45.374 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-14 22:29:45.376 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-14 22:29:45.378 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-14 22:29:45.380 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-14 22:29:45.381 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:29:45.384 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-14 22:29:45.396 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-14 22:29:45.399 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-14 22:29:45.400 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true]
2022-01-14 22:29:45.400 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {user=root, password=ibtihal}
2022-01-14 22:29:45.401 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-14 22:29:45.406 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-14 22:29:45.407 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-14 22:29:47.365 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-14 22:29:47.366 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-14 22:29:47.367 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-14 22:29:47.426 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-14 22:29:47.495 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-14 22:29:47.499 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-14 22:29:47.576 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47747fb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3113a37]
2022-01-14 22:29:47.783 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-14 22:29:47.813 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-14 22:29:47.858 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-14 22:29:47.873 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-14 22:29:47.886 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-14 22:29:47.938 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-14 22:29:47.945 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:29:47.945 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:29:47.947 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-14 22:29:47.951 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-14 22:29:47.958 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-14 22:29:47.967 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-14 22:29:47.976 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-14 22:29:47.978 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-14 22:29:47.979 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-14 22:29:47.980 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-14 22:29:47.980 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-14 22:29:47.981 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-14 22:29:47.994 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-14 22:29:47.996 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-14 22:29:48.001 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-14 22:29:48.134 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-14 22:29:48.138 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-14 22:29:48.139 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-14 22:29:48.140 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-14 22:29:48.141 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-14 22:29:48.143 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-14 22:29:48.144 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-14 22:29:48.145 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-14 22:29:48.146 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-14 22:29:48.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-14 22:29:48.148 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-14 22:29:48.148 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-14 22:29:48.149 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-14 22:29:48.150 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-14 22:29:48.150 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-14 22:29:48.151 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-14 22:29:48.152 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-14 22:29:48.153 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-14 22:29:48.153 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-14 22:29:48.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-14 22:29:48.155 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-14 22:29:48.156 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-14 22:29:48.157 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-14 22:29:48.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-14 22:29:48.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-14 22:29:48.159 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-14 22:29:48.159 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-14 22:29:48.160 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-14 22:29:48.160 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-14 22:29:48.161 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-14 22:29:48.161 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-14 22:29:48.162 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-14 22:29:48.163 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-14 22:29:48.163 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-14 22:29:48.163 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-14 22:29:48.164 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-14 22:29:48.164 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-14 22:29:48.165 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-14 22:29:48.166 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-14 22:29:48.344 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:29:48.346 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:29:48.385 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-14 22:29:48.386 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Users\hp\Desktop\tp8\target\classes;C:\Users\hp\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\hp\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\hp\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\hp\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\hp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\hp\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\hp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\hp\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\hp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\hp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\hp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\hp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\hp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\hp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\hp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\hp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\hp\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\hp\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\hp\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\hp\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\hp\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\hp\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\hp\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\hp\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\hp\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\hp\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=FR, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, sun.cpu.endian=little, user.home=C:\Users\hp, user.language=fr, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=hp, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\hp\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\hp\Desktop\tp8, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@22fba58c, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Java\jdk-16\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Java\jdk-13.0.2\bin;C:\Program Files\Java\jre1.8.0_301\bin;c:\master\flutter\bin;C:\dart-sdk\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hp\AppData\Local\Microsoft\WindowsApps;C:\flutter\bin;C:\Users\hp\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\PyCharm 2021.2.3\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\dart-sdk\bin;;C:\Users\hp\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2022-01-14 22:29:48.416 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-14 22:29:48.418 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-14 22:29:48.418 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47747fb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2d195ee4]
2022-01-14 22:29:48.539 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:29:48.540 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:29:49.157 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-14 22:29:49.157 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-14 22:29:49.158 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-14 22:29:49.158 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-14 22:29:49.159 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-14 22:29:49.159 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-14 22:29:49.159 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-14 22:29:49.218 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d2dc9d2]
2022-01-14 22:29:49.221 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-14 22:29:49.221 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-14 22:29:49.246 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-14 22:29:49.255 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-14 22:29:49.260 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-14 22:29:49.355 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3e48d38] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-14 22:29:49.454 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-14 22:29:49.458 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-14 22:29:49.462 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-14 22:29:49.473 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:29:49.474 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:29:49.476 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-14 22:29:49.477 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-14 22:29:49.488 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:29:49.501 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@499ef98e
2022-01-14 22:29:49.504 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 7a6b1533-53cd-4f72-bd22-353bbbbf81ef (<unnamed>)
2022-01-14 22:29:49.505 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-14 22:29:49.646 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-14 22:29:49.898 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-14 22:29:49.900 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:29:49.958 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:29:49.966 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:29:49.979 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 19
2022-01-14 22:29:49.980 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:29:49.985 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:29:49.986 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:29:49.987 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:29:49.996 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-14 22:29:49.997 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:29:49.999 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:29:50.001 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=19}
2022-01-14 22:29:50.007 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.008 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.008 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:29:50.010 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:29:50.011 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:29:50.014 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 20
2022-01-14 22:29:50.014 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:29:50.015 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:29:50.015 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:29:50.016 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:29:50.016 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-14 22:29:50.016 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:29:50.016 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:29:50.017 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=19}
2022-01-14 22:29:50.017 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=SIHAM, id=20}
2022-01-14 22:29:50.019 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.020 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.020 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:29:50.022 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:29:50.023 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:29:50.027 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 21
2022-01-14 22:29:50.028 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:29:50.028 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:29:50.029 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:29:50.029 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:29:50.030 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-14 22:29:50.030 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:29:50.030 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:29:50.031 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=19}
2022-01-14 22:29:50.031 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=21}
2022-01-14 22:29:50.031 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=SIHAM, id=20}
2022-01-14 22:29:50.032 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.033 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.034 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:29:50.035 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:29:50.036 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:29:50.045 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 22
2022-01-14 22:29:50.045 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:29:50.045 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:29:50.046 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:29:50.046 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:29:50.047 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-14 22:29:50.047 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:29:50.047 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:29:50.047 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=19}
2022-01-14 22:29:50.048 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=21}
2022-01-14 22:29:50.048 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=SIHAM, id=20}
2022-01-14 22:29:50.048 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=22}
2022-01-14 22:29:50.049 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.050 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:29:50.051 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:46:21.753 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2698dc7
2022-01-14 22:46:21.943 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-14 22:46:22.008 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-14 22:46:22.031 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-14 22:46:22.032 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-14 22:46:22.080 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-14 22:46:22.236 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-14 22:46:22.237 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-14 22:46:22.240 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-14 22:46:22.260 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/hp/Desktop/tp8/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ibtihal
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-14 22:46:22.271 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-14 22:46:22.275 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-14 22:46:22.286 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-14 22:46:22.382 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-14 22:46:22.386 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-14 22:46:22.756 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-14 22:46:22.780 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-14 22:46:22.782 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-14 22:46:22.819 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-14 22:46:23.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@409c54f
2022-01-14 22:46:23.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@409c54f
2022-01-14 22:46:23.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@409c54f
2022-01-14 22:46:23.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b8f0a79
2022-01-14 22:46:23.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d286fb6
2022-01-14 22:46:23.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7aaca91a
2022-01-14 22:46:23.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@2141a12
2022-01-14 22:46:23.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@2141a12
2022-01-14 22:46:23.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2141a12
2022-01-14 22:46:23.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@573906eb
2022-01-14 22:46:23.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@573906eb
2022-01-14 22:46:23.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@573906eb
2022-01-14 22:46:23.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@68dc098b
2022-01-14 22:46:23.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@68dc098b
2022-01-14 22:46:23.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68dc098b
2022-01-14 22:46:23.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@4e423aa2
2022-01-14 22:46:23.282 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@4e423aa2
2022-01-14 22:46:23.282 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e423aa2
2022-01-14 22:46:23.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@7ceb3185
2022-01-14 22:46:23.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@7ceb3185
2022-01-14 22:46:23.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ceb3185
2022-01-14 22:46:23.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@5b67bb7e
2022-01-14 22:46:23.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@5b67bb7e
2022-01-14 22:46:23.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b67bb7e
2022-01-14 22:46:23.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@3d246ea3
2022-01-14 22:46:23.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@3d246ea3
2022-01-14 22:46:23.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3d246ea3
2022-01-14 22:46:23.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f19ac19
2022-01-14 22:46:23.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f19ac19
2022-01-14 22:46:23.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20c0a64d
2022-01-14 22:46:23.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20c0a64d
2022-01-14 22:46:23.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@41ab013
2022-01-14 22:46:23.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@41ab013
2022-01-14 22:46:23.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@82ea68c
2022-01-14 22:46:23.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43b9fd5
2022-01-14 22:46:23.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@74a6f9c1
2022-01-14 22:46:23.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@74a6f9c1
2022-01-14 22:46:23.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@2d778add
2022-01-14 22:46:23.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2d778add
2022-01-14 22:46:23.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@51549490
2022-01-14 22:46:23.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51549490
2022-01-14 22:46:23.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7daa0fbd
2022-01-14 22:46:23.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7daa0fbd
2022-01-14 22:46:23.391 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f44a157
2022-01-14 22:46:23.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f44a157
2022-01-14 22:46:23.394 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@16eccb2e
2022-01-14 22:46:23.395 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@16eccb2e
2022-01-14 22:46:23.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36cda2c2
2022-01-14 22:46:23.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@36cda2c2
2022-01-14 22:46:23.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@481ba2cf
2022-01-14 22:46:23.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@481ba2cf
2022-01-14 22:46:23.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65b104b9
2022-01-14 22:46:23.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65b104b9
2022-01-14 22:46:23.409 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@1339e7aa
2022-01-14 22:46:23.410 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1339e7aa
2022-01-14 22:46:23.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@12359a82
2022-01-14 22:46:23.413 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@12359a82
2022-01-14 22:46:23.415 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5be46f9d
2022-01-14 22:46:23.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be46f9d
2022-01-14 22:46:23.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be46f9d
2022-01-14 22:46:23.419 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a220c9a
2022-01-14 22:46:23.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@21ba0741
2022-01-14 22:46:23.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21ba0741
2022-01-14 22:46:23.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21ba0741
2022-01-14 22:46:23.425 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56673b2c
2022-01-14 22:46:23.427 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@62010f5c
2022-01-14 22:46:23.430 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@5c44c582
2022-01-14 22:46:23.430 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5c44c582
2022-01-14 22:46:23.432 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@106cc338
2022-01-14 22:46:23.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@106cc338
2022-01-14 22:46:23.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@26ceffa8
2022-01-14 22:46:23.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@26ceffa8
2022-01-14 22:46:23.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@60129b9a
2022-01-14 22:46:23.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60129b9a
2022-01-14 22:46:23.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27216cd
2022-01-14 22:46:23.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27216cd
2022-01-14 22:46:23.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7582ff54
2022-01-14 22:46:23.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@78641d23
2022-01-14 22:46:23.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@78641d23
2022-01-14 22:46:23.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@78641d23
2022-01-14 22:46:23.456 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f67b837
2022-01-14 22:46:23.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f67b837
2022-01-14 22:46:23.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f67b837
2022-01-14 22:46:23.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@291a7e3c
2022-01-14 22:46:23.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3b7d3a38
2022-01-14 22:46:23.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@2bb3058
2022-01-14 22:46:23.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@2bb3058
2022-01-14 22:46:23.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@2bb3058
2022-01-14 22:46:23.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4ae9cfc1
2022-01-14 22:46:23.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4ae9cfc1
2022-01-14 22:46:23.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4ae9cfc1
2022-01-14 22:46:23.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@1c93f6e1
2022-01-14 22:46:23.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@10a9d961
2022-01-14 22:46:23.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@a4add54
2022-01-14 22:46:23.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a4add54
2022-01-14 22:46:23.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3abada5a
2022-01-14 22:46:23.488 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@7b420819
2022-01-14 22:46:23.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7b420819
2022-01-14 22:46:23.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@5d066c7d
2022-01-14 22:46:23.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d066c7d
2022-01-14 22:46:23.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56928307
2022-01-14 22:46:23.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9ebe38b
2022-01-14 22:46:23.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@3cdf2c61
2022-01-14 22:46:23.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@764faa6
2022-01-14 22:46:23.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@764faa6
2022-01-14 22:46:23.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a755cc1
2022-01-14 22:46:23.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ae42ce3
2022-01-14 22:46:23.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f5991f6
2022-01-14 22:46:23.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@484094a5
2022-01-14 22:46:23.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@38234a38
2022-01-14 22:46:23.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63fbfaeb
2022-01-14 22:46:23.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@602e0143
2022-01-14 22:46:23.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c07545f
2022-01-14 22:46:23.532 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@b2c5e07] into BootstrapContext; was [null]
2022-01-14 22:46:23.532 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5812f68b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4426bff1]
2022-01-14 22:46:23.628 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-14 22:46:23.628 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-14 22:46:23.647 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-14 22:46:23.650 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-14 22:46:23.652 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:46:23.653 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:46:23.654 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-14 22:46:23.656 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-14 22:46:23.657 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-14 22:46:23.660 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:46:23.661 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-14 22:46:23.663 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-14 22:46:23.664 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-14 22:46:23.665 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-14 22:46:23.666 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:46:23.667 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-14 22:46:23.674 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-14 22:46:23.676 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-14 22:46:23.676 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true]
2022-01-14 22:46:23.678 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {user=root, password=ibtihal}
2022-01-14 22:46:23.678 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-14 22:46:23.684 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-14 22:46:23.684 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-14 22:46:25.628 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-14 22:46:25.630 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-14 22:46:25.631 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-14 22:46:25.684 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-14 22:46:25.753 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-14 22:46:25.758 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-14 22:46:25.841 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47747fb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3113a37]
2022-01-14 22:46:26.000 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-14 22:46:26.080 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-14 22:46:26.156 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-14 22:46:26.170 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-14 22:46:26.184 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-14 22:46:26.231 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-14 22:46:26.236 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:46:26.237 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:46:26.239 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-14 22:46:26.244 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-14 22:46:26.250 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-14 22:46:26.254 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-14 22:46:26.259 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-14 22:46:26.262 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-14 22:46:26.263 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-14 22:46:26.263 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-14 22:46:26.264 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-14 22:46:26.265 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-14 22:46:26.276 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-14 22:46:26.278 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-14 22:46:26.283 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-14 22:46:26.394 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-14 22:46:26.398 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-14 22:46:26.400 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-14 22:46:26.400 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-14 22:46:26.401 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-14 22:46:26.403 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-14 22:46:26.404 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-14 22:46:26.405 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-14 22:46:26.405 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-14 22:46:26.406 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-14 22:46:26.406 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-14 22:46:26.407 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-14 22:46:26.407 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-14 22:46:26.407 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-14 22:46:26.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-14 22:46:26.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-14 22:46:26.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-14 22:46:26.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-14 22:46:26.414 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-14 22:46:26.414 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-14 22:46:26.415 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-14 22:46:26.416 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-14 22:46:26.416 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-14 22:46:26.416 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-14 22:46:26.417 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-14 22:46:26.417 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-14 22:46:26.417 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-14 22:46:26.418 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-14 22:46:26.418 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-14 22:46:26.419 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-14 22:46:26.419 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-14 22:46:26.419 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-14 22:46:26.420 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-14 22:46:26.420 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-14 22:46:26.420 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-14 22:46:26.421 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-14 22:46:26.421 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-14 22:46:26.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-14 22:46:26.422 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-14 22:46:26.551 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:46:26.553 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:46:26.577 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-14 22:46:26.578 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Users\hp\Desktop\tp8\target\classes;C:\Users\hp\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\hp\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\hp\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\hp\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\hp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\hp\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\hp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\hp\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\hp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\hp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\hp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\hp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\hp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\hp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\hp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\hp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\hp\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\hp\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\hp\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\hp\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\hp\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\hp\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\hp\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\hp\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\hp\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\hp\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=FR, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, sun.cpu.endian=little, user.home=C:\Users\hp, user.language=fr, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=hp, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\hp\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\hp\Desktop\tp8, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@22fba58c, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Java\jdk-16\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Java\jdk-13.0.2\bin;C:\Program Files\Java\jre1.8.0_301\bin;c:\master\flutter\bin;C:\dart-sdk\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hp\AppData\Local\Microsoft\WindowsApps;C:\flutter\bin;C:\Users\hp\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\PyCharm 2021.2.3\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\dart-sdk\bin;;C:\Users\hp\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2022-01-14 22:46:26.610 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-14 22:46:26.619 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-14 22:46:26.621 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47747fb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2d195ee4]
2022-01-14 22:46:26.768 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:46:26.769 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:46:27.303 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-14 22:46:27.303 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-14 22:46:27.304 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-14 22:46:27.304 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-14 22:46:27.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-14 22:46:27.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-14 22:46:27.306 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-14 22:46:27.345 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d2dc9d2]
2022-01-14 22:46:27.347 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-14 22:46:27.348 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-14 22:46:27.366 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-14 22:46:27.372 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-14 22:46:27.375 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-14 22:46:27.459 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3e48d38] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-14 22:46:27.541 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-14 22:46:27.543 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-14 22:46:27.544 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-14 22:46:27.552 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:46:27.554 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:46:27.556 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-14 22:46:27.558 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-14 22:46:27.570 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:46:27.584 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@499ef98e
2022-01-14 22:46:27.589 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 08a7897c-9d41-49b3-90a7-12caa5e6fd2d (<unnamed>)
2022-01-14 22:46:27.590 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-14 22:46:27.739 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-14 22:46:27.923 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-14 22:46:27.924 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:46:27.990 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:46:28.009 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:46:28.039 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 23
2022-01-14 22:46:28.041 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:46:28.051 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:46:28.053 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:46:28.055 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:46:28.068 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-14 22:46:28.069 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:46:28.072 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:46:28.074 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=23}
2022-01-14 22:46:28.079 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:46:28.081 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:46:28.082 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:46:28.084 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:46:28.085 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:46:28.092 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 24
2022-01-14 22:46:28.093 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:46:28.094 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:46:28.094 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:46:28.094 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:46:28.095 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-14 22:46:28.095 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:46:28.095 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:46:28.096 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=23}
2022-01-14 22:46:28.097 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=24}
2022-01-14 22:46:28.097 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:46:28.099 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:46:28.100 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:46:28.101 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:46:28.101 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:46:28.106 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 25
2022-01-14 22:46:28.106 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:46:28.107 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:46:28.107 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:46:28.107 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:46:28.108 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-14 22:46:28.108 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:46:28.109 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:46:28.109 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=23}
2022-01-14 22:46:28.109 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=25}
2022-01-14 22:46:28.110 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=24}
2022-01-14 22:46:28.111 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:46:28.112 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:46:28.112 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:46:28.114 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:46:28.115 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:46:28.118 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 26
2022-01-14 22:46:28.119 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:46:28.119 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:46:28.120 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:46:28.120 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:46:28.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-14 22:46:28.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:46:28.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:46:28.122 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=26}
2022-01-14 22:46:28.122 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=23}
2022-01-14 22:46:28.122 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=25}
2022-01-14 22:46:28.123 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=24}
2022-01-14 22:46:28.124 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:46:28.126 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:33.953 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@43d7741f
2022-01-14 22:50:34.128 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-14 22:50:34.200 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-14 22:50:34.225 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-14 22:50:34.226 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-14 22:50:34.278 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-14 22:50:34.444 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-14 22:50:34.445 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-14 22:50:34.447 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-14 22:50:34.459 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/hp/Desktop/tp8/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ibtihal
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-14 22:50:34.481 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-14 22:50:34.485 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-14 22:50:34.494 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-14 22:50:34.579 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-14 22:50:34.581 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-14 22:50:34.936 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-14 22:50:34.968 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-14 22:50:34.971 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-14 22:50:35.005 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-14 22:50:35.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3e74829
2022-01-14 22:50:35.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3e74829
2022-01-14 22:50:35.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3e74829
2022-01-14 22:50:35.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71e693fa
2022-01-14 22:50:35.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3eb77ea8
2022-01-14 22:50:35.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@44c73c26
2022-01-14 22:50:35.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@4196c360
2022-01-14 22:50:35.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@4196c360
2022-01-14 22:50:35.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4196c360
2022-01-14 22:50:35.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@479ceda0
2022-01-14 22:50:35.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@479ceda0
2022-01-14 22:50:35.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@479ceda0
2022-01-14 22:50:35.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@38ba6ce3
2022-01-14 22:50:35.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@38ba6ce3
2022-01-14 22:50:35.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38ba6ce3
2022-01-14 22:50:35.519 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@7fbdb894
2022-01-14 22:50:35.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@7fbdb894
2022-01-14 22:50:35.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7fbdb894
2022-01-14 22:50:35.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@436c81a3
2022-01-14 22:50:35.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@436c81a3
2022-01-14 22:50:35.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@436c81a3
2022-01-14 22:50:35.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@609db546
2022-01-14 22:50:35.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@609db546
2022-01-14 22:50:35.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@609db546
2022-01-14 22:50:35.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341814d3
2022-01-14 22:50:35.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341814d3
2022-01-14 22:50:35.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@341814d3
2022-01-14 22:50:35.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@119cbf96
2022-01-14 22:50:35.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@119cbf96
2022-01-14 22:50:35.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@455b6df1
2022-01-14 22:50:35.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@455b6df1
2022-01-14 22:50:35.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@14bee915
2022-01-14 22:50:35.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@14bee915
2022-01-14 22:50:35.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@59e505b2
2022-01-14 22:50:35.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@79dc5318
2022-01-14 22:50:35.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@54eb2b70
2022-01-14 22:50:35.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54eb2b70
2022-01-14 22:50:35.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@73302995
2022-01-14 22:50:35.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@73302995
2022-01-14 22:50:35.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@71e9ebae
2022-01-14 22:50:35.632 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71e9ebae
2022-01-14 22:50:35.636 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42530531
2022-01-14 22:50:35.636 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42530531
2022-01-14 22:50:35.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6bc407fd
2022-01-14 22:50:35.640 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6bc407fd
2022-01-14 22:50:35.644 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ef5c734
2022-01-14 22:50:35.644 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ef5c734
2022-01-14 22:50:35.648 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3697186
2022-01-14 22:50:35.648 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3697186
2022-01-14 22:50:35.651 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@46b61c56
2022-01-14 22:50:35.651 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@46b61c56
2022-01-14 22:50:35.656 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c4980d3
2022-01-14 22:50:35.656 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c4980d3
2022-01-14 22:50:35.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@1fb669c3
2022-01-14 22:50:35.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fb669c3
2022-01-14 22:50:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@68df9280
2022-01-14 22:50:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68df9280
2022-01-14 22:50:35.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@3f91b517
2022-01-14 22:50:35.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f91b517
2022-01-14 22:50:35.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f91b517
2022-01-14 22:50:35.671 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2421cc4
2022-01-14 22:50:35.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@58ce9668
2022-01-14 22:50:35.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58ce9668
2022-01-14 22:50:35.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58ce9668
2022-01-14 22:50:35.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2796aeae
2022-01-14 22:50:35.676 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@51fadaff
2022-01-14 22:50:35.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@67d18ed7
2022-01-14 22:50:35.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67d18ed7
2022-01-14 22:50:35.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a67e3c6
2022-01-14 22:50:35.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a67e3c6
2022-01-14 22:50:35.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@600b90df
2022-01-14 22:50:35.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@600b90df
2022-01-14 22:50:35.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@78d6692f
2022-01-14 22:50:35.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78d6692f
2022-01-14 22:50:35.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@558bdf1f
2022-01-14 22:50:35.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@558bdf1f
2022-01-14 22:50:35.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@67545b57
2022-01-14 22:50:35.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@74589991
2022-01-14 22:50:35.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@74589991
2022-01-14 22:50:35.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@74589991
2022-01-14 22:50:35.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1869fbd2
2022-01-14 22:50:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1869fbd2
2022-01-14 22:50:35.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1869fbd2
2022-01-14 22:50:35.698 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@ca30bc1
2022-01-14 22:50:35.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@416c58f5
2022-01-14 22:50:35.702 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7a362b6b
2022-01-14 22:50:35.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7a362b6b
2022-01-14 22:50:35.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7a362b6b
2022-01-14 22:50:35.706 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@512baff6
2022-01-14 22:50:35.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@512baff6
2022-01-14 22:50:35.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@512baff6
2022-01-14 22:50:35.708 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@1800a575
2022-01-14 22:50:35.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@130e116b
2022-01-14 22:50:35.714 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@141e5bef
2022-01-14 22:50:35.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@141e5bef
2022-01-14 22:50:35.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66c61024
2022-01-14 22:50:35.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@7a1a14a4
2022-01-14 22:50:35.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7a1a14a4
2022-01-14 22:50:35.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@1e461e41
2022-01-14 22:50:35.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e461e41
2022-01-14 22:50:35.724 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3899782c
2022-01-14 22:50:35.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4b23c30a
2022-01-14 22:50:35.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@13ad5cd3
2022-01-14 22:50:35.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@4c1f22f3
2022-01-14 22:50:35.734 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c1f22f3
2022-01-14 22:50:35.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ae42ce3
2022-01-14 22:50:35.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f5991f6
2022-01-14 22:50:35.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@484094a5
2022-01-14 22:50:35.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@38234a38
2022-01-14 22:50:35.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63fbfaeb
2022-01-14 22:50:35.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@602e0143
2022-01-14 22:50:35.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c07545f
2022-01-14 22:50:35.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e57b96d
2022-01-14 22:50:35.760 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5812f68b] into BootstrapContext; was [null]
2022-01-14 22:50:35.761 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4426bff1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c7c886c]
2022-01-14 22:50:35.860 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-14 22:50:35.861 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-14 22:50:35.885 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-14 22:50:35.887 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-14 22:50:35.888 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:50:35.889 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:50:35.890 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-14 22:50:35.892 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-14 22:50:35.893 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-14 22:50:35.895 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:50:35.897 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-14 22:50:35.898 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-14 22:50:35.899 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-14 22:50:35.900 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-14 22:50:35.900 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:50:35.902 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-14 22:50:35.910 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-14 22:50:35.912 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-14 22:50:35.913 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true]
2022-01-14 22:50:35.915 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {user=root, password=ibtihal}
2022-01-14 22:50:35.915 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-14 22:50:35.921 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-14 22:50:35.922 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-14 22:50:37.815 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-14 22:50:37.816 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-14 22:50:37.817 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-14 22:50:37.837 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-14 22:50:37.867 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-14 22:50:37.869 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-14 22:50:37.902 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a7b6f69]
2022-01-14 22:50:37.980 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-14 22:50:38.002 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-14 22:50:38.039 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-14 22:50:38.050 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-14 22:50:38.061 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-14 22:50:38.141 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-14 22:50:38.146 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:50:38.147 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:50:38.149 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-14 22:50:38.152 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-14 22:50:38.157 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-14 22:50:38.162 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-14 22:50:38.178 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-14 22:50:38.181 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-14 22:50:38.182 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-14 22:50:38.182 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-14 22:50:38.184 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-14 22:50:38.184 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-14 22:50:38.202 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-14 22:50:38.203 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-14 22:50:38.206 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-14 22:50:38.301 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-14 22:50:38.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-14 22:50:38.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-14 22:50:38.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-14 22:50:38.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-14 22:50:38.306 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-14 22:50:38.306 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-14 22:50:38.307 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-14 22:50:38.307 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-14 22:50:38.308 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-14 22:50:38.308 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-14 22:50:38.308 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-14 22:50:38.309 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-14 22:50:38.310 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-14 22:50:38.310 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-14 22:50:38.311 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-14 22:50:38.311 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-14 22:50:38.312 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-14 22:50:38.313 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-14 22:50:38.313 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-14 22:50:38.313 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-14 22:50:38.314 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-14 22:50:38.315 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-14 22:50:38.316 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-14 22:50:38.317 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-14 22:50:38.318 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-14 22:50:38.319 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-14 22:50:38.320 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-14 22:50:38.321 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-14 22:50:38.323 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-14 22:50:38.323 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-14 22:50:38.324 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-14 22:50:38.325 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-14 22:50:38.325 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-14 22:50:38.326 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-14 22:50:38.327 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-14 22:50:38.327 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-14 22:50:38.329 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-14 22:50:38.330 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-14 22:50:38.461 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:50:38.464 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:50:38.488 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-14 22:50:38.490 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Users\hp\Desktop\tp8\target\classes;C:\Users\hp\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\hp\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\hp\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\hp\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\hp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\hp\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\hp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\hp\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\hp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\hp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\hp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\hp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\hp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\hp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\hp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\hp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\hp\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\hp\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\hp\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\hp\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\hp\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\hp\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\hp\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\hp\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\hp\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\hp\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=FR, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, sun.cpu.endian=little, user.home=C:\Users\hp, user.language=fr, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=hp, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\hp\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\hp\Desktop\tp8, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1917d90f, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Java\jdk-16\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Java\jdk-13.0.2\bin;C:\Program Files\Java\jre1.8.0_301\bin;c:\master\flutter\bin;C:\dart-sdk\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hp\AppData\Local\Microsoft\WindowsApps;C:\flutter\bin;C:\Users\hp\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\PyCharm 2021.2.3\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\dart-sdk\bin;;C:\Users\hp\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2022-01-14 22:50:38.513 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-14 22:50:38.515 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-14 22:50:38.516 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29314cc9]
2022-01-14 22:50:38.647 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:50:38.649 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:50:39.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-14 22:50:39.172 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-14 22:50:39.173 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-14 22:50:39.174 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-14 22:50:39.174 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-14 22:50:39.175 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-14 22:50:39.175 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-14 22:50:39.217 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1f584d]
2022-01-14 22:50:39.221 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-14 22:50:39.222 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-14 22:50:39.240 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-14 22:50:39.252 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-14 22:50:39.259 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-14 22:50:39.355 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bca6fac] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-14 22:50:39.445 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-14 22:50:39.450 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-14 22:50:39.453 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-14 22:50:39.463 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:50:39.464 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:50:39.467 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-14 22:50:39.467 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-14 22:50:39.476 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:50:39.498 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@288214b1
2022-01-14 22:50:39.503 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: d3f8b5a2-947b-4f1d-ac78-d462425cc836 (<unnamed>)
2022-01-14 22:50:39.505 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-14 22:50:39.634 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-14 22:50:39.757 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-14 22:50:39.758 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:50:39.829 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:50:39.843 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:50:39.875 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 27
2022-01-14 22:50:39.877 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:50:39.886 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:50:39.889 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:50:39.893 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:50:39.911 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-14 22:50:39.912 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:50:39.916 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:50:39.919 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=27}
2022-01-14 22:50:39.928 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:39.931 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:39.932 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:50:39.936 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:50:39.937 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:50:39.948 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 28
2022-01-14 22:50:39.948 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:50:39.949 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:50:39.949 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:50:39.950 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:50:39.951 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-14 22:50:39.951 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:50:39.952 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:50:39.952 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=27}
2022-01-14 22:50:39.953 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=28}
2022-01-14 22:50:39.954 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:39.957 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:39.957 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:50:39.960 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:50:39.962 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:50:39.968 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 29
2022-01-14 22:50:39.968 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:50:39.969 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:50:39.970 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:50:39.970 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:50:39.972 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-14 22:50:39.972 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:50:39.973 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:50:39.973 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=27}
2022-01-14 22:50:39.974 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=29}
2022-01-14 22:50:39.974 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=28}
2022-01-14 22:50:39.977 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:39.979 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:39.980 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:50:39.983 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:50:39.984 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:50:39.990 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 30
2022-01-14 22:50:39.990 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:50:39.991 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:50:39.991 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:50:39.992 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:50:39.993 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-14 22:50:39.994 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:50:39.994 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:50:39.995 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=27}
2022-01-14 22:50:39.997 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=29}
2022-01-14 22:50:39.997 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=28}
2022-01-14 22:50:39.997 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=30}
2022-01-14 22:50:39.999 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:40.001 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:50:40.002 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:52:51.447 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@69379752
2022-01-14 22:52:51.620 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-14 22:52:51.673 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-14 22:52:51.696 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-14 22:52:51.697 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-14 22:52:51.754 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-14 22:52:51.906 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-14 22:52:51.906 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-14 22:52:51.908 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-14 22:52:51.920 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/hp/Desktop/tp8/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ibtihal
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-14 22:52:51.946 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-14 22:52:51.949 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-14 22:52:51.957 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-14 22:52:52.044 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-14 22:52:52.049 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-14 22:52:52.466 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-14 22:52:52.491 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-14 22:52:52.494 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-14 22:52:52.541 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-14 22:52:53.039 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 22:52:53.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 22:52:53.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 22:52:53.043 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d286fb6
2022-01-14 22:52:53.044 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7aaca91a
2022-01-14 22:52:53.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@60b4beb4
2022-01-14 22:52:53.048 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 22:52:53.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 22:52:53.050 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@225129c
2022-01-14 22:52:53.053 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 22:52:53.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@571c5681
2022-01-14 22:52:53.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 22:52:53.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 22:52:53.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 22:52:53.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 22:52:53.060 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 22:52:53.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@3148f668
2022-01-14 22:52:53.062 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 22:52:53.064 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 22:52:53.065 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 22:52:53.066 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59e32960
2022-01-14 22:52:53.068 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 22:52:53.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 22:52:53.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 22:52:53.071 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 22:52:53.072 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 22:52:53.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 22:52:53.075 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 22:52:53.075 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 22:52:53.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 22:52:53.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 22:52:53.083 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@82ea68c
2022-01-14 22:52:53.084 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@82ea68c
2022-01-14 22:52:53.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43b9fd5
2022-01-14 22:52:53.089 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@37e4d7bb
2022-01-14 22:52:53.091 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@63611043
2022-01-14 22:52:53.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63611043
2022-01-14 22:52:53.095 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 22:52:53.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 22:52:53.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 22:52:53.183 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 22:52:53.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 22:52:53.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 22:52:53.188 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 22:52:53.189 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 22:52:53.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 22:52:53.192 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 22:52:53.195 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 22:52:53.195 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 22:52:53.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 22:52:53.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 22:52:53.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 22:52:53.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 22:52:53.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@6239aba6
2022-01-14 22:52:53.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6239aba6
2022-01-14 22:52:53.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 22:52:53.211 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 22:52:53.213 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 22:52:53.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 22:52:53.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 22:52:53.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59a008ba
2022-01-14 22:52:53.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 22:52:53.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 22:52:53.221 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 22:52:53.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fa1cab1
2022-01-14 22:52:53.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31ff43be
2022-01-14 22:52:53.227 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 22:52:53.227 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 22:52:53.229 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 22:52:53.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 22:52:53.232 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 22:52:53.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 22:52:53.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 22:52:53.235 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 22:52:53.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 22:52:53.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 22:52:53.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f354bcf
2022-01-14 22:52:53.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 22:52:53.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 22:52:53.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 22:52:53.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 22:52:53.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 22:52:53.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 22:52:53.252 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b7d3a38
2022-01-14 22:52:53.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@73cd37c0
2022-01-14 22:52:53.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 22:52:53.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 22:52:53.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 22:52:53.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 22:52:53.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 22:52:53.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 22:52:53.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@10a9d961
2022-01-14 22:52:53.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@5ddf0d24
2022-01-14 22:52:53.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 22:52:53.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 22:52:53.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c9d0d6
2022-01-14 22:52:53.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 22:52:53.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 22:52:53.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@56928307
2022-01-14 22:52:53.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56928307
2022-01-14 22:52:53.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9ebe38b
2022-01-14 22:52:53.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30e868be
2022-01-14 22:52:53.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5bf0fe62
2022-01-14 22:52:53.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 22:52:53.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 22:52:53.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@484094a5
2022-01-14 22:52:53.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38234a38
2022-01-14 22:52:53.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63fbfaeb
2022-01-14 22:52:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@602e0143
2022-01-14 22:52:53.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c07545f
2022-01-14 22:52:53.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e57b96d
2022-01-14 22:52:53.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@32c726ee
2022-01-14 22:52:53.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f31dec
2022-01-14 22:52:53.325 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3c7c886c] into BootstrapContext; was [null]
2022-01-14 22:52:53.327 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@55493582] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a20270e]
2022-01-14 22:52:53.430 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-14 22:52:53.430 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-14 22:52:53.450 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-14 22:52:53.452 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-14 22:52:53.453 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:52:53.454 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 22:52:53.455 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-14 22:52:53.457 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-14 22:52:53.458 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-14 22:52:53.460 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:52:53.462 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-14 22:52:53.464 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-14 22:52:53.468 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-14 22:52:53.469 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-14 22:52:53.470 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 22:52:53.474 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-14 22:52:53.484 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-14 22:52:53.485 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-14 22:52:53.486 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true]
2022-01-14 22:52:53.487 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {user=root, password=ibtihal}
2022-01-14 22:52:53.488 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-14 22:52:53.492 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-14 22:52:53.493 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-14 22:52:54.728 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-14 22:52:54.729 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-14 22:52:54.730 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-14 22:52:54.772 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-14 22:52:54.864 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-14 22:52:54.869 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-14 22:52:54.942 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a7b6f69]
2022-01-14 22:52:55.125 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-14 22:52:55.182 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-14 22:52:55.225 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-14 22:52:55.239 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-14 22:52:55.251 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-14 22:52:55.296 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-14 22:52:55.303 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:52:55.304 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:52:55.307 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-14 22:52:55.312 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-14 22:52:55.316 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-14 22:52:55.320 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-14 22:52:55.328 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-14 22:52:55.330 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-14 22:52:55.331 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-14 22:52:55.333 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-14 22:52:55.335 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-14 22:52:55.336 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-14 22:52:55.350 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-14 22:52:55.351 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-14 22:52:55.355 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-14 22:52:55.439 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-14 22:52:55.441 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-14 22:52:55.442 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-14 22:52:55.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-14 22:52:55.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-14 22:52:55.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-14 22:52:55.444 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-14 22:52:55.445 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-14 22:52:55.445 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-14 22:52:55.447 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-14 22:52:55.447 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-14 22:52:55.448 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-14 22:52:55.449 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-14 22:52:55.449 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-14 22:52:55.450 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-14 22:52:55.451 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-14 22:52:55.451 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-14 22:52:55.452 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-14 22:52:55.452 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-14 22:52:55.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-14 22:52:55.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-14 22:52:55.454 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-14 22:52:55.454 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-14 22:52:55.455 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-14 22:52:55.455 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-14 22:52:55.455 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-14 22:52:55.456 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-14 22:52:55.456 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-14 22:52:55.456 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-14 22:52:55.457 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-14 22:52:55.457 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-14 22:52:55.457 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-14 22:52:55.458 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-14 22:52:55.458 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-14 22:52:55.458 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-14 22:52:55.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-14 22:52:55.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-14 22:52:55.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-14 22:52:55.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-14 22:52:55.588 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:52:55.590 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:52:55.612 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-14 22:52:55.613 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Users\hp\Desktop\tp8\target\classes;C:\Users\hp\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\hp\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\hp\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\hp\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\hp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\hp\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\hp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\hp\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\hp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\hp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\hp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\hp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\hp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\hp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\hp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\hp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\hp\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\hp\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\hp\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\hp\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\hp\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\hp\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\hp\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\hp\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\hp\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\hp\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=FR, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, sun.cpu.endian=little, user.home=C:\Users\hp, user.language=fr, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=hp, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\hp\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\hp\Desktop\tp8, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1917d90f, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Java\jdk-16\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Java\jdk-13.0.2\bin;C:\Program Files\Java\jre1.8.0_301\bin;c:\master\flutter\bin;C:\dart-sdk\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hp\AppData\Local\Microsoft\WindowsApps;C:\flutter\bin;C:\Users\hp\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\PyCharm 2021.2.3\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\dart-sdk\bin;;C:\Users\hp\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2022-01-14 22:52:55.632 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-14 22:52:55.634 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-14 22:52:55.635 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29314cc9]
2022-01-14 22:52:55.766 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 22:52:55.767 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 22:52:56.249 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-14 22:52:56.249 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-14 22:52:56.250 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-14 22:52:56.251 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-14 22:52:56.252 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-14 22:52:56.252 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-14 22:52:56.252 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-14 22:52:56.301 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1f584d]
2022-01-14 22:52:56.304 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-14 22:52:56.305 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-14 22:52:56.326 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-14 22:52:56.335 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-14 22:52:56.338 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-14 22:52:56.425 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bca6fac] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-14 22:52:56.523 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-14 22:52:56.526 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-14 22:52:56.527 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-14 22:52:56.542 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:52:56.545 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 22:52:56.547 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-14 22:52:56.548 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-14 22:52:56.556 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 22:52:56.569 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@288214b1
2022-01-14 22:52:56.572 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: a51d9b5e-21aa-4639-a726-4ab8f0488b29 (<unnamed>)
2022-01-14 22:52:56.574 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-14 22:52:56.692 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-14 22:52:56.914 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-14 22:52:56.915 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:52:56.979 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:52:56.994 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:52:57.020 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 31
2022-01-14 22:52:57.021 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:52:57.031 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:52:57.034 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:52:57.037 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:52:57.057 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-14 22:52:57.058 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:52:57.064 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:52:57.067 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=31}
2022-01-14 22:52:57.080 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.083 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.084 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:52:57.087 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:52:57.087 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:52:57.099 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 32
2022-01-14 22:52:57.100 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:52:57.102 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:52:57.103 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:52:57.104 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:52:57.105 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-14 22:52:57.107 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:52:57.107 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:52:57.109 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=31}
2022-01-14 22:52:57.110 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=32}
2022-01-14 22:52:57.113 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.115 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.116 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:52:57.118 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:52:57.119 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:52:57.127 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 33
2022-01-14 22:52:57.128 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:52:57.129 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:52:57.130 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:52:57.131 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:52:57.132 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-14 22:52:57.133 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:52:57.134 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:52:57.135 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=31}
2022-01-14 22:52:57.136 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=33}
2022-01-14 22:52:57.136 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=32}
2022-01-14 22:52:57.139 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.141 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.142 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 22:52:57.145 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 22:52:57.146 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 22:52:57.151 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 34
2022-01-14 22:52:57.152 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 22:52:57.153 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 22:52:57.154 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 22:52:57.155 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 22:52:57.156 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-14 22:52:57.157 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 22:52:57.157 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 22:52:57.158 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=34}
2022-01-14 22:52:57.158 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=31}
2022-01-14 22:52:57.159 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=33}
2022-01-14 22:52:57.160 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=32}
2022-01-14 22:52:57.162 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.164 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 22:52:57.165 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:08:43.280 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@69379752
2022-01-14 23:08:43.420 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-14 23:08:43.463 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-14 23:08:43.476 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-14 23:08:43.477 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-14 23:08:43.507 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-14 23:08:43.627 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-14 23:08:43.628 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-14 23:08:43.629 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-14 23:08:43.638 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/hp/Desktop/tp8/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ibtihal
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-14 23:08:43.652 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-14 23:08:43.655 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-14 23:08:43.661 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-14 23:08:43.740 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-14 23:08:43.742 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-14 23:08:44.064 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-14 23:08:44.082 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-14 23:08:44.083 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-14 23:08:44.105 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-14 23:08:44.424 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:08:44.425 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:08:44.425 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:08:44.427 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d286fb6
2022-01-14 23:08:44.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7aaca91a
2022-01-14 23:08:44.430 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@60b4beb4
2022-01-14 23:08:44.432 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:08:44.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:08:44.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:08:44.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:08:44.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:08:44.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:08:44.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:08:44.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:08:44.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:08:44.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:08:44.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:08:44.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:08:44.444 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:08:44.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:08:44.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:08:44.449 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:08:44.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:08:44.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:08:44.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:08:44.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:08:44.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:08:44.455 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 23:08:44.455 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 23:08:44.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 23:08:44.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 23:08:44.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@82ea68c
2022-01-14 23:08:44.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@82ea68c
2022-01-14 23:08:44.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43b9fd5
2022-01-14 23:08:44.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@37e4d7bb
2022-01-14 23:08:44.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@63611043
2022-01-14 23:08:44.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63611043
2022-01-14 23:08:44.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 23:08:44.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 23:08:44.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 23:08:44.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 23:08:44.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 23:08:44.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 23:08:44.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 23:08:44.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 23:08:44.518 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 23:08:44.519 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 23:08:44.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 23:08:44.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 23:08:44.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 23:08:44.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 23:08:44.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 23:08:44.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 23:08:44.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@6239aba6
2022-01-14 23:08:44.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6239aba6
2022-01-14 23:08:44.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 23:08:44.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 23:08:44.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:08:44.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:08:44.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:08:44.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59a008ba
2022-01-14 23:08:44.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:08:44.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:08:44.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:08:44.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fa1cab1
2022-01-14 23:08:44.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31ff43be
2022-01-14 23:08:44.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 23:08:44.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 23:08:44.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 23:08:44.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 23:08:44.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 23:08:44.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 23:08:44.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 23:08:44.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 23:08:44.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 23:08:44.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 23:08:44.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f354bcf
2022-01-14 23:08:44.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:08:44.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:08:44.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:08:44.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:08:44.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:08:44.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:08:44.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b7d3a38
2022-01-14 23:08:44.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@73cd37c0
2022-01-14 23:08:44.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:08:44.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:08:44.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:08:44.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:08:44.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:08:44.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:08:44.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@10a9d961
2022-01-14 23:08:44.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@5ddf0d24
2022-01-14 23:08:44.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 23:08:44.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 23:08:44.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c9d0d6
2022-01-14 23:08:44.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 23:08:44.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 23:08:44.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@56928307
2022-01-14 23:08:44.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56928307
2022-01-14 23:08:44.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9ebe38b
2022-01-14 23:08:44.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30e868be
2022-01-14 23:08:44.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5bf0fe62
2022-01-14 23:08:44.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 23:08:44.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 23:08:44.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@484094a5
2022-01-14 23:08:44.571 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38234a38
2022-01-14 23:08:44.571 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63fbfaeb
2022-01-14 23:08:44.572 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@602e0143
2022-01-14 23:08:44.572 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c07545f
2022-01-14 23:08:44.572 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e57b96d
2022-01-14 23:08:44.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@32c726ee
2022-01-14 23:08:44.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f31dec
2022-01-14 23:08:44.588 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3c7c886c] into BootstrapContext; was [null]
2022-01-14 23:08:44.589 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@55493582] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a20270e]
2022-01-14 23:08:44.634 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-14 23:08:44.634 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-14 23:08:44.649 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-14 23:08:44.650 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-14 23:08:44.651 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 23:08:44.651 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 23:08:44.652 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-14 23:08:44.653 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-14 23:08:44.654 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-14 23:08:44.655 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 23:08:44.656 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-14 23:08:44.656 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-14 23:08:44.657 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-14 23:08:44.657 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-14 23:08:44.658 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 23:08:44.659 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-14 23:08:44.665 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-14 23:08:44.667 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-14 23:08:44.667 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true]
2022-01-14 23:08:44.668 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {user=root, password=ibtihal}
2022-01-14 23:08:44.669 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-14 23:08:44.672 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-14 23:08:44.673 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-14 23:08:45.558 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-14 23:08:45.558 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-14 23:08:45.558 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-14 23:08:45.575 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-14 23:08:45.598 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-14 23:08:45.599 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-14 23:08:45.617 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a7b6f69]
2022-01-14 23:08:45.667 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-14 23:08:45.683 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-14 23:08:45.713 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-14 23:08:45.723 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-14 23:08:45.730 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-14 23:08:45.760 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-14 23:08:45.763 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 23:08:45.763 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 23:08:45.765 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-14 23:08:45.771 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-14 23:08:45.778 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-14 23:08:45.783 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-14 23:08:45.788 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-14 23:08:45.789 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-14 23:08:45.790 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-14 23:08:45.790 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-14 23:08:45.791 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-14 23:08:45.791 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-14 23:08:45.801 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-14 23:08:45.801 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-14 23:08:45.803 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-14 23:08:45.874 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-14 23:08:45.875 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-14 23:08:45.875 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-14 23:08:45.876 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-14 23:08:45.876 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-14 23:08:45.876 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-14 23:08:45.876 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-14 23:08:45.877 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-14 23:08:45.877 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-14 23:08:45.877 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-14 23:08:45.877 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-14 23:08:45.877 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-14 23:08:45.878 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-14 23:08:45.878 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-14 23:08:45.878 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-14 23:08:45.878 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-14 23:08:45.878 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-14 23:08:45.879 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-14 23:08:45.879 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-14 23:08:45.879 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-14 23:08:45.879 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-14 23:08:45.879 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-14 23:08:45.880 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-14 23:08:45.880 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-14 23:08:45.880 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-14 23:08:45.880 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-14 23:08:45.880 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-14 23:08:45.881 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-14 23:08:45.881 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-14 23:08:45.881 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-14 23:08:45.881 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-14 23:08:45.881 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-14 23:08:45.882 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-14 23:08:45.882 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-14 23:08:45.882 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-14 23:08:45.882 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-14 23:08:45.883 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-14 23:08:45.884 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-14 23:08:45.885 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-14 23:08:45.981 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:08:45.983 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:08:46.010 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-14 23:08:46.010 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Users\hp\Desktop\tp8\target\classes;C:\Users\hp\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\hp\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\hp\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\hp\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\hp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\hp\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\hp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\hp\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\hp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\hp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\hp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\hp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\hp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\hp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\hp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\hp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\hp\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\hp\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\hp\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\hp\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\hp\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\hp\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\hp\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\hp\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\hp\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\hp\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=FR, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, sun.cpu.endian=little, user.home=C:\Users\hp, user.language=fr, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=hp, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\hp\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\hp\Desktop\tp8, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1917d90f, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Java\jdk-16\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Java\jdk-13.0.2\bin;C:\Program Files\Java\jre1.8.0_301\bin;c:\master\flutter\bin;C:\dart-sdk\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hp\AppData\Local\Microsoft\WindowsApps;C:\flutter\bin;C:\Users\hp\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\PyCharm 2021.2.3\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\dart-sdk\bin;;C:\Users\hp\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2022-01-14 23:08:46.041 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-14 23:08:46.043 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-14 23:08:46.045 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29314cc9]
2022-01-14 23:08:46.146 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 23:08:46.147 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 23:08:46.545 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-14 23:08:46.545 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-14 23:08:46.546 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-14 23:08:46.546 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-14 23:08:46.546 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-14 23:08:46.547 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-14 23:08:46.547 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-14 23:08:46.589 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1f584d]
2022-01-14 23:08:46.590 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-14 23:08:46.591 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-14 23:08:46.606 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-14 23:08:46.610 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-14 23:08:46.613 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-14 23:08:46.669 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bca6fac] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-14 23:08:46.714 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-14 23:08:46.716 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-14 23:08:46.717 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-14 23:08:46.720 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 23:08:46.721 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 23:08:46.722 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-14 23:08:46.722 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-14 23:08:46.727 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:08:46.734 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@288214b1
2022-01-14 23:08:46.735 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 0d4e1799-382b-4415-a715-24ccaf9238ca (<unnamed>)
2022-01-14 23:08:46.736 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-14 23:08:46.808 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-14 23:08:46.874 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-14 23:08:46.874 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:08:46.893 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:08:46.897 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:08:46.907 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 35
2022-01-14 23:08:46.908 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:08:46.910 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:08:46.911 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:08:46.912 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:08:46.918 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-14 23:08:46.919 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:08:46.919 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:08:46.920 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=35}
2022-01-14 23:08:46.922 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.923 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.923 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:08:46.924 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:08:46.924 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:08:46.926 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 36
2022-01-14 23:08:46.926 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:08:46.927 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:08:46.927 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:08:46.927 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:08:46.927 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-14 23:08:46.927 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:08:46.927 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:08:46.928 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=35}
2022-01-14 23:08:46.928 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=36}
2022-01-14 23:08:46.929 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.931 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.931 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:08:46.932 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:08:46.933 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:08:46.936 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 37
2022-01-14 23:08:46.938 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:08:46.938 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:08:46.938 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:08:46.938 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:08:46.939 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-14 23:08:46.939 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:08:46.939 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:08:46.940 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=35}
2022-01-14 23:08:46.940 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=37}
2022-01-14 23:08:46.940 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=36}
2022-01-14 23:08:46.941 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.942 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.942 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:08:46.943 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:08:46.943 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:08:46.947 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 38
2022-01-14 23:08:46.947 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:08:46.948 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:08:46.948 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:08:46.948 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:08:46.949 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-14 23:08:46.949 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:08:46.949 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:08:46.949 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=35}
2022-01-14 23:08:46.949 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=37}
2022-01-14 23:08:46.949 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=36}
2022-01-14 23:08:46.949 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=38}
2022-01-14 23:08:46.950 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.951 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.951 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:08:46.958 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-14 23:08:46.963 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-14 23:08:46.972 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#1]
2022-01-14 23:08:46.973 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = OMAR
2022-01-14 23:08:46.973 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-14 23:08:46.974 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#1]
2022-01-14 23:08:46.975 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#1
2022-01-14 23:08:46.975 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:08:46.975 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:08:46.975 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:08:46.977 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
2022-01-14 23:08:46.977 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:08:46.977 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:08:46.977 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=35}
2022-01-14 23:08:46.978 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=37}
2022-01-14 23:08:46.978 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=36}
2022-01-14 23:08:46.978 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=38}
2022-01-14 23:08:46.978 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=IBTIHAL, id=1}
2022-01-14 23:08:46.982 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-14 23:08:46.986 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:08:46.987 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:49.235 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@69379752
2022-01-14 23:20:49.347 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-14 23:20:49.393 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-14 23:20:49.406 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-14 23:20:49.407 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-14 23:20:49.442 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-14 23:20:49.541 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-14 23:20:49.542 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-14 23:20:49.542 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-14 23:20:49.549 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/hp/Desktop/tp8/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ibtihal
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-14 23:20:49.558 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-14 23:20:49.560 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-14 23:20:49.566 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-14 23:20:49.610 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-14 23:20:49.612 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-14 23:20:49.871 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-14 23:20:49.900 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-14 23:20:49.902 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-14 23:20:49.950 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-14 23:20:50.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:20:50.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:20:50.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:20:50.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d286fb6
2022-01-14 23:20:50.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7aaca91a
2022-01-14 23:20:50.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@60b4beb4
2022-01-14 23:20:50.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:20:50.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:20:50.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:20:50.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:20:50.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:20:50.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:20:50.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:20:50.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:20:50.256 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:20:50.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:20:50.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:20:50.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:20:50.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:20:50.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:20:50.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:20:50.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:20:50.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:20:50.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:20:50.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:20:50.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:20:50.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:20:50.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 23:20:50.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 23:20:50.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 23:20:50.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 23:20:50.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@82ea68c
2022-01-14 23:20:50.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@82ea68c
2022-01-14 23:20:50.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43b9fd5
2022-01-14 23:20:50.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@37e4d7bb
2022-01-14 23:20:50.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@63611043
2022-01-14 23:20:50.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63611043
2022-01-14 23:20:50.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 23:20:50.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 23:20:50.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 23:20:50.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 23:20:50.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 23:20:50.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 23:20:50.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 23:20:50.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 23:20:50.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 23:20:50.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 23:20:50.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 23:20:50.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 23:20:50.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 23:20:50.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 23:20:50.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 23:20:50.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 23:20:50.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@6239aba6
2022-01-14 23:20:50.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6239aba6
2022-01-14 23:20:50.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 23:20:50.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 23:20:50.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:20:50.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:20:50.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:20:50.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59a008ba
2022-01-14 23:20:50.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:20:50.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:20:50.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:20:50.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fa1cab1
2022-01-14 23:20:50.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31ff43be
2022-01-14 23:20:50.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 23:20:50.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 23:20:50.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 23:20:50.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 23:20:50.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 23:20:50.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 23:20:50.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 23:20:50.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 23:20:50.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 23:20:50.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 23:20:50.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f354bcf
2022-01-14 23:20:50.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:20:50.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:20:50.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:20:50.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:20:50.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:20:50.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:20:50.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b7d3a38
2022-01-14 23:20:50.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@73cd37c0
2022-01-14 23:20:50.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:20:50.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:20:50.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:20:50.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:20:50.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:20:50.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:20:50.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@10a9d961
2022-01-14 23:20:50.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@5ddf0d24
2022-01-14 23:20:50.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 23:20:50.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 23:20:50.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c9d0d6
2022-01-14 23:20:50.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 23:20:50.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 23:20:50.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@56928307
2022-01-14 23:20:50.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56928307
2022-01-14 23:20:50.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9ebe38b
2022-01-14 23:20:50.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30e868be
2022-01-14 23:20:50.372 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5bf0fe62
2022-01-14 23:20:50.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 23:20:50.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 23:20:50.377 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@484094a5
2022-01-14 23:20:50.377 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38234a38
2022-01-14 23:20:50.377 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63fbfaeb
2022-01-14 23:20:50.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@602e0143
2022-01-14 23:20:50.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c07545f
2022-01-14 23:20:50.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e57b96d
2022-01-14 23:20:50.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@32c726ee
2022-01-14 23:20:50.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f31dec
2022-01-14 23:20:50.393 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3c7c886c] into BootstrapContext; was [null]
2022-01-14 23:20:50.394 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@55493582] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a20270e]
2022-01-14 23:20:50.436 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-14 23:20:50.436 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-14 23:20:50.444 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-14 23:20:50.446 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-14 23:20:50.446 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 23:20:50.447 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 23:20:50.447 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-14 23:20:50.448 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-14 23:20:50.448 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-14 23:20:50.448 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 23:20:50.449 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-14 23:20:50.450 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-14 23:20:50.450 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-14 23:20:50.450 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-14 23:20:50.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 23:20:50.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-14 23:20:50.455 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-14 23:20:50.456 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-14 23:20:50.456 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true]
2022-01-14 23:20:50.457 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {user=root, password=ibtihal}
2022-01-14 23:20:50.457 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-14 23:20:50.460 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-14 23:20:50.460 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-14 23:20:51.253 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-14 23:20:51.253 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-14 23:20:51.253 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-14 23:20:51.265 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-14 23:20:51.280 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-14 23:20:51.281 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-14 23:20:51.296 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a7b6f69]
2022-01-14 23:20:51.324 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-14 23:20:51.337 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-14 23:20:51.358 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-14 23:20:51.364 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-14 23:20:51.374 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-14 23:20:51.409 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-14 23:20:51.415 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 23:20:51.415 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 23:20:51.418 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-14 23:20:51.422 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-14 23:20:51.426 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-14 23:20:51.429 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-14 23:20:51.433 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-14 23:20:51.435 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-14 23:20:51.436 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-14 23:20:51.436 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-14 23:20:51.437 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-14 23:20:51.437 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-14 23:20:51.446 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-14 23:20:51.447 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-14 23:20:51.448 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-14 23:20:51.511 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-14 23:20:51.512 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-14 23:20:51.512 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-14 23:20:51.512 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-14 23:20:51.513 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-14 23:20:51.513 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-14 23:20:51.513 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-14 23:20:51.514 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-14 23:20:51.514 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-14 23:20:51.514 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-14 23:20:51.514 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-14 23:20:51.515 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-14 23:20:51.515 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-14 23:20:51.515 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-14 23:20:51.516 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-14 23:20:51.516 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-14 23:20:51.516 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-14 23:20:51.516 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-14 23:20:51.517 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-14 23:20:51.518 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-14 23:20:51.518 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-14 23:20:51.519 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-14 23:20:51.519 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-14 23:20:51.520 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-14 23:20:51.522 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-14 23:20:51.525 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-14 23:20:51.526 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-14 23:20:51.526 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-14 23:20:51.527 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-14 23:20:51.528 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-14 23:20:51.529 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-14 23:20:51.529 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-14 23:20:51.530 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-14 23:20:51.530 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-14 23:20:51.531 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-14 23:20:51.531 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-14 23:20:51.531 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-14 23:20:51.532 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-14 23:20:51.532 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-14 23:20:51.614 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:20:51.616 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:20:51.635 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-14 23:20:51.635 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Users\hp\Desktop\tp8\target\classes;C:\Users\hp\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\hp\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\hp\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\hp\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\hp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\hp\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\hp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\hp\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\hp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\hp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\hp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\hp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\hp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\hp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\hp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\hp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\hp\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\hp\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\hp\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\hp\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\hp\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\hp\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\hp\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\hp\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\hp\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\hp\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=FR, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, sun.cpu.endian=little, user.home=C:\Users\hp, user.language=fr, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=hp, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\hp\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\hp\Desktop\tp8, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1917d90f, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Java\jdk-16\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Java\jdk-13.0.2\bin;C:\Program Files\Java\jre1.8.0_301\bin;c:\master\flutter\bin;C:\dart-sdk\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hp\AppData\Local\Microsoft\WindowsApps;C:\flutter\bin;C:\Users\hp\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\PyCharm 2021.2.3\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\dart-sdk\bin;;C:\Users\hp\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2022-01-14 23:20:51.649 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-14 23:20:51.650 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-14 23:20:51.650 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29314cc9]
2022-01-14 23:20:51.705 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 23:20:51.705 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 23:20:52.049 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-14 23:20:52.049 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-14 23:20:52.050 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-14 23:20:52.050 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-14 23:20:52.050 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-14 23:20:52.050 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-14 23:20:52.051 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-14 23:20:52.071 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1f584d]
2022-01-14 23:20:52.073 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-14 23:20:52.073 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-14 23:20:52.086 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-14 23:20:52.090 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-14 23:20:52.094 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-14 23:20:52.154 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bca6fac] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-14 23:20:52.202 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-14 23:20:52.204 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-14 23:20:52.205 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-14 23:20:52.209 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 23:20:52.210 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 23:20:52.211 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-14 23:20:52.211 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-14 23:20:52.215 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:20:52.222 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@288214b1
2022-01-14 23:20:52.224 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: bae317b6-4a6f-483e-b544-077210ff3c65 (<unnamed>)
2022-01-14 23:20:52.224 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-14 23:20:52.290 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-14 23:20:52.362 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-14 23:20:52.362 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:20:52.380 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:20:52.383 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:20:52.402 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 39
2022-01-14 23:20:52.403 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:20:52.406 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:20:52.407 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:20:52.408 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:20:52.414 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-14 23:20:52.414 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:20:52.415 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:20:52.416 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=39}
2022-01-14 23:20:52.423 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.425 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.426 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:20:52.427 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:20:52.428 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:20:52.432 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 40
2022-01-14 23:20:52.432 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:20:52.432 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:20:52.433 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:20:52.433 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:20:52.433 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-14 23:20:52.433 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:20:52.434 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:20:52.434 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=39}
2022-01-14 23:20:52.434 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=40}
2022-01-14 23:20:52.435 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.435 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.435 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:20:52.436 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:20:52.436 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:20:52.439 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 41
2022-01-14 23:20:52.439 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:20:52.439 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:20:52.439 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:20:52.439 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:20:52.440 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-14 23:20:52.440 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:20:52.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:20:52.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=39}
2022-01-14 23:20:52.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=41}
2022-01-14 23:20:52.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=40}
2022-01-14 23:20:52.441 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.441 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.442 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:20:52.442 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:20:52.443 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:20:52.445 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 42
2022-01-14 23:20:52.445 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:20:52.445 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:20:52.445 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:20:52.445 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:20:52.445 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-14 23:20:52.446 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:20:52.446 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:20:52.446 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=42}
2022-01-14 23:20:52.447 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=39}
2022-01-14 23:20:52.447 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=41}
2022-01-14 23:20:52.447 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=40}
2022-01-14 23:20:52.448 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.449 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.450 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:20:52.464 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-14 23:20:52.468 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-14 23:20:52.472 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#1]
2022-01-14 23:20:52.473 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = IBTIHAL
2022-01-14 23:20:52.473 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-14 23:20:52.474 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#1]
2022-01-14 23:20:52.475 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#1
2022-01-14 23:20:52.475 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:20:52.475 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:20:52.475 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:20:52.475 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2022-01-14 23:20:52.475 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:20:52.475 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:20:52.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=42}
2022-01-14 23:20:52.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=39}
2022-01-14 23:20:52.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=41}
2022-01-14 23:20:52.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=IBTIHAL, id=1}
2022-01-14 23:20:52.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=40}
2022-01-14 23:20:52.477 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.478 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.478 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:20:52.480 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-14 23:20:52.481 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-14 23:20:52.481 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#2]
2022-01-14 23:20:52.482 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = OMAR
2022-01-14 23:20:52.482 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-14 23:20:52.482 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#2]
2022-01-14 23:20:52.482 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#2
2022-01-14 23:20:52.484 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:20:52.485 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:20:52.485 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:20:52.485 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 6 objects
2022-01-14 23:20:52.485 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:20:52.486 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:20:52.486 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=42}
2022-01-14 23:20:52.486 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=2}
2022-01-14 23:20:52.486 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=39}
2022-01-14 23:20:52.486 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=41}
2022-01-14 23:20:52.486 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=IBTIHAL, id=1}
2022-01-14 23:20:52.486 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=40}
2022-01-14 23:20:52.490 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-14 23:20:52.496 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:20:52.496 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:55.805 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@69379752
2022-01-14 23:28:55.924 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-14 23:28:55.980 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-14 23:28:55.997 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-14 23:28:55.998 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-14 23:28:56.031 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-14 23:28:56.134 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-14 23:28:56.135 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-14 23:28:56.136 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-14 23:28:56.143 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/hp/Desktop/tp8/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ibtihal
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-14 23:28:56.153 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-14 23:28:56.155 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-14 23:28:56.159 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-14 23:28:56.203 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-14 23:28:56.204 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-14 23:28:56.441 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-14 23:28:56.455 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-14 23:28:56.457 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-14 23:28:56.481 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-14 23:28:56.770 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:28:56.770 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:28:56.770 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b8f0a79
2022-01-14 23:28:56.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d286fb6
2022-01-14 23:28:56.773 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7aaca91a
2022-01-14 23:28:56.774 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@60b4beb4
2022-01-14 23:28:56.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:28:56.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:28:56.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@225129c
2022-01-14 23:28:56.777 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:28:56.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:28:56.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@571c5681
2022-01-14 23:28:56.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:28:56.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:28:56.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d6c53fc
2022-01-14 23:28:56.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:28:56.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:28:56.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3148f668
2022-01-14 23:28:56.783 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:28:56.783 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:28:56.783 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59e32960
2022-01-14 23:28:56.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:28:56.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:28:56.786 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56c4278e
2022-01-14 23:28:56.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:28:56.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:28:56.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59cba5a
2022-01-14 23:28:56.789 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 23:28:56.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@768fc0f2
2022-01-14 23:28:56.791 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 23:28:56.791 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3f67593e
2022-01-14 23:28:56.792 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@82ea68c
2022-01-14 23:28:56.792 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@82ea68c
2022-01-14 23:28:56.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43b9fd5
2022-01-14 23:28:56.794 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@37e4d7bb
2022-01-14 23:28:56.795 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@63611043
2022-01-14 23:28:56.795 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63611043
2022-01-14 23:28:56.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 23:28:56.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6c2ed0cd
2022-01-14 23:28:56.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 23:28:56.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@36a5cabc
2022-01-14 23:28:56.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 23:28:56.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@181e731e
2022-01-14 23:28:56.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 23:28:56.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@17d88132
2022-01-14 23:28:56.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 23:28:56.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36b4091c
2022-01-14 23:28:56.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 23:28:56.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5b367418
2022-01-14 23:28:56.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 23:28:56.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1efe439d
2022-01-14 23:28:56.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 23:28:56.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@19c65cdc
2022-01-14 23:28:56.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@6239aba6
2022-01-14 23:28:56.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6239aba6
2022-01-14 23:28:56.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 23:28:56.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7164ca4c
2022-01-14 23:28:56.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:28:56.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:28:56.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7a220c9a
2022-01-14 23:28:56.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59a008ba
2022-01-14 23:28:56.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:28:56.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:28:56.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56673b2c
2022-01-14 23:28:56.869 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1fa1cab1
2022-01-14 23:28:56.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31ff43be
2022-01-14 23:28:56.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 23:28:56.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@132e0cc
2022-01-14 23:28:56.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 23:28:56.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15713d56
2022-01-14 23:28:56.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 23:28:56.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d41f816
2022-01-14 23:28:56.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 23:28:56.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3d9c13b5
2022-01-14 23:28:56.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 23:28:56.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7582ff54
2022-01-14 23:28:56.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f354bcf
2022-01-14 23:28:56.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:28:56.881 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:28:56.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@4716be8b
2022-01-14 23:28:56.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:28:56.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:28:56.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cce16f4
2022-01-14 23:28:56.886 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b7d3a38
2022-01-14 23:28:56.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@73cd37c0
2022-01-14 23:28:56.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:28:56.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:28:56.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@5a2d131d
2022-01-14 23:28:56.890 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:28:56.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:28:56.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1c93f6e1
2022-01-14 23:28:56.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@10a9d961
2022-01-14 23:28:56.892 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@5ddf0d24
2022-01-14 23:28:56.894 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 23:28:56.894 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3abada5a
2022-01-14 23:28:56.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c9d0d6
2022-01-14 23:28:56.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 23:28:56.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a3d9978
2022-01-14 23:28:56.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@56928307
2022-01-14 23:28:56.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56928307
2022-01-14 23:28:56.900 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9ebe38b
2022-01-14 23:28:56.901 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30e868be
2022-01-14 23:28:56.902 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5bf0fe62
2022-01-14 23:28:56.910 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 23:28:56.911 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a755cc1
2022-01-14 23:28:56.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@484094a5
2022-01-14 23:28:56.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@38234a38
2022-01-14 23:28:56.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63fbfaeb
2022-01-14 23:28:56.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@602e0143
2022-01-14 23:28:56.914 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c07545f
2022-01-14 23:28:56.914 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@e57b96d
2022-01-14 23:28:56.915 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@32c726ee
2022-01-14 23:28:56.915 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22f31dec
2022-01-14 23:28:56.924 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3c7c886c] into BootstrapContext; was [null]
2022-01-14 23:28:56.925 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@55493582] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a20270e]
2022-01-14 23:28:56.965 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-14 23:28:56.965 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-14 23:28:56.980 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-14 23:28:56.980 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-14 23:28:56.981 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 23:28:56.981 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-14 23:28:56.982 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-14 23:28:56.983 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-14 23:28:56.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-14 23:28:56.985 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 23:28:56.986 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-14 23:28:56.987 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-14 23:28:56.987 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-14 23:28:56.987 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-14 23:28:56.988 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-14 23:28:56.988 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-14 23:28:56.993 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-14 23:28:56.994 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-14 23:28:56.994 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true]
2022-01-14 23:28:56.994 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {user=root, password=ibtihal}
2022-01-14 23:28:56.995 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-14 23:28:56.997 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-14 23:28:56.998 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-14 23:28:57.723 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-14 23:28:57.724 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-14 23:28:57.724 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-14 23:28:57.735 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-14 23:28:57.750 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-14 23:28:57.751 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-14 23:28:57.766 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a7b6f69]
2022-01-14 23:28:57.795 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-14 23:28:57.808 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-14 23:28:57.826 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-14 23:28:57.831 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-14 23:28:57.837 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-14 23:28:57.860 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-14 23:28:57.863 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 23:28:57.864 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 23:28:57.866 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-14 23:28:57.868 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-14 23:28:57.871 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-14 23:28:57.874 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-14 23:28:57.877 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-14 23:28:57.879 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-14 23:28:57.879 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-14 23:28:57.880 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-14 23:28:57.881 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-14 23:28:57.882 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-14 23:28:57.892 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-14 23:28:57.892 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-14 23:28:57.894 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-14 23:28:57.953 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-14 23:28:57.955 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-14 23:28:57.955 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-14 23:28:57.955 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-14 23:28:57.956 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-14 23:28:57.956 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-14 23:28:57.956 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-14 23:28:57.956 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-14 23:28:57.956 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-14 23:28:57.959 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-14 23:28:57.960 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-14 23:28:57.961 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-14 23:28:57.962 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-14 23:28:57.962 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-14 23:28:57.963 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-14 23:28:57.963 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-14 23:28:57.964 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-14 23:28:57.964 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-14 23:28:57.965 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-14 23:28:57.965 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-14 23:28:57.965 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-14 23:28:57.966 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-14 23:28:57.966 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-14 23:28:57.966 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-14 23:28:57.967 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-14 23:28:57.967 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-14 23:28:57.967 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-14 23:28:57.968 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-14 23:28:57.969 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-14 23:28:57.969 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-14 23:28:57.970 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-14 23:28:57.970 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-14 23:28:57.970 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-14 23:28:57.971 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-14 23:28:57.971 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-14 23:28:57.971 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-14 23:28:57.971 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-14 23:28:57.972 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-14 23:28:57.973 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-14 23:28:58.061 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:28:58.062 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:28:58.084 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-14 23:28:58.085 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Users\hp\Desktop\tp8\target\classes;C:\Users\hp\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\hp\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\hp\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\hp\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\hp\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\hp\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\hp\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\hp\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\hp\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\hp\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\hp\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\hp\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\hp\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hp\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\hp\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\hp\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\hp\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\hp\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\hp\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\hp\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\hp\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\hp\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\hp\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\hp\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\hp\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\hp\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\hp\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\hp\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\hp\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\hp\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\hp\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\hp\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\hp\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\hp\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, jakarta.persistence.jdbc.password=****, user.country=FR, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_301\jre\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, sun.cpu.endian=little, user.home=C:\Users\hp, user.language=fr, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_301\jre, file.separator=\, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_301\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_301\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_301\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_301-b09, user.name=hp, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\hp\AppData\Local\Temp\, java.version=1.8.0_301, user.dir=C:\Users\hp\Desktop\tp8, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/ibtihal?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1917d90f, java.library.path=C:\Program Files\Java\jdk1.8.0_301\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Java\jdk-16\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Java\jdk-13.0.2\bin;C:\Program Files\Java\jre1.8.0_301\bin;c:\master\flutter\bin;C:\dart-sdk\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hp\AppData\Local\Microsoft\WindowsApps;C:\flutter\bin;C:\Users\hp\AppData\Local\GitHubDesktop\bin;C:\Program Files\JetBrains\PyCharm 2021.2.3\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.3\bin;;C:\dart-sdk\bin;;C:\Users\hp\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.301-b09, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_301\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2022-01-14 23:28:58.100 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-14 23:28:58.102 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-14 23:28:58.103 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e9658b5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29314cc9]
2022-01-14 23:28:58.172 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-14 23:28:58.172 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-14 23:28:58.497 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-14 23:28:58.498 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-14 23:28:58.498 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-14 23:28:58.498 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-14 23:28:58.498 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-14 23:28:58.499 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-14 23:28:58.499 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-14 23:28:58.524 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1f584d]
2022-01-14 23:28:58.526 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-14 23:28:58.527 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-14 23:28:58.547 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-14 23:28:58.553 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-14 23:28:58.556 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-14 23:28:58.606 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bca6fac] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-14 23:28:58.653 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-14 23:28:58.654 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-14 23:28:58.655 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-14 23:28:58.659 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 23:28:58.659 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-14 23:28:58.660 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-14 23:28:58.661 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-14 23:28:58.664 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-14 23:28:58.670 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@288214b1
2022-01-14 23:28:58.672 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 0eb4211a-3628-49c8-96cc-5e7e7ae564e5 (<unnamed>)
2022-01-14 23:28:58.673 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-14 23:28:58.735 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-14 23:28:58.794 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-14 23:28:58.794 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:28:58.822 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:28:58.825 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:28:58.832 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 43
2022-01-14 23:28:58.833 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:28:58.837 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:28:58.838 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:28:58.840 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:28:58.846 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-14 23:28:58.847 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:28:58.847 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:28:58.848 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=43}
2022-01-14 23:28:58.852 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.853 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.853 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:28:58.854 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:28:58.855 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:28:58.857 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 44
2022-01-14 23:28:58.857 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:28:58.858 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:28:58.858 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:28:58.858 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:28:58.858 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-14 23:28:58.859 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:28:58.859 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:28:58.860 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=43}
2022-01-14 23:28:58.860 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=44}
2022-01-14 23:28:58.861 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.861 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.861 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:28:58.862 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:28:58.862 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:28:58.864 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 45
2022-01-14 23:28:58.865 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:28:58.865 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:28:58.865 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:28:58.865 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:28:58.865 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-14 23:28:58.865 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:28:58.866 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:28:58.866 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=43}
2022-01-14 23:28:58.866 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=45}
2022-01-14 23:28:58.866 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=44}
2022-01-14 23:28:58.867 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.867 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.868 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:28:58.869 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-14 23:28:58.869 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-14 23:28:58.871 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 46
2022-01-14 23:28:58.871 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-14 23:28:58.872 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:28:58.872 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:28:58.872 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:28:58.872 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-14 23:28:58.872 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:28:58.872 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:28:58.873 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=43}
2022-01-14 23:28:58.873 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=45}
2022-01-14 23:28:58.873 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=44}
2022-01-14 23:28:58.873 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=46}
2022-01-14 23:28:58.874 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.874 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.875 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-14 23:28:58.882 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-14 23:28:58.886 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-14 23:28:58.892 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#1]
2022-01-14 23:28:58.892 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = IBTIHAL
2022-01-14 23:28:58.892 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-14 23:28:58.893 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#1]
2022-01-14 23:28:58.894 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#1
2022-01-14 23:28:58.894 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-14 23:28:58.894 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-14 23:28:58.894 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-14 23:28:58.895 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2022-01-14 23:28:58.895 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-14 23:28:58.895 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-14 23:28:58.895 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=43}
2022-01-14 23:28:58.895 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=45}
2022-01-14 23:28:58.895 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=44}
2022-01-14 23:28:58.896 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=46}
2022-01-14 23:28:58.896 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=IBTIHAL, id=1}
2022-01-14 23:28:58.896 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.897 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-14 23:28:58.897 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:32:37.041 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-17 22:32:37.121 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-17 22:32:37.144 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-17 22:32:37.152 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-17 22:32:37.152 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-17 22:32:37.175 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-17 22:32:37.248 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-17 22:32:37.248 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-17 22:32:37.249 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-17 22:32:37.253 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ****
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-17 22:32:37.257 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-17 22:32:37.259 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-17 22:32:37.263 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-17 22:32:37.298 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-17 22:32:37.299 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-17 22:32:37.429 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-17 22:32:37.440 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-17 22:32:37.441 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-17 22:32:37.454 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-17 22:32:37.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:32:37.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:32:37.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:32:37.503 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-17 22:32:37.503 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-17 22:32:37.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-17 22:32:37.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:32:37.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:32:37.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:32:37.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:32:37.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:32:37.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:32:37.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:32:37.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:32:37.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:32:37.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:32:37.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:32:37.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:32:37.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:32:37.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:32:37.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-17 22:32:37.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:32:37.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:32:37.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:32:37.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:32:37.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:32:37.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:32:37.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:32:37.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:32:37.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:32:37.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:32:37.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:32:37.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:32:37.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-17 22:32:37.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-17 22:32:37.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:32:37.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:32:37.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:32:37.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:32:37.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:32:37.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:32:37.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:32:37.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:32:37.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:32:37.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:32:37.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:32:37.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:32:37.525 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:32:37.525 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:32:37.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:32:37.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:32:37.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:32:37.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:32:37.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:32:37.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:32:37.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:32:37.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:32:37.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:32:37.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:32:37.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:32:37.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-17 22:32:37.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:32:37.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:32:37.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:32:37.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-17 22:32:37.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-17 22:32:37.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:32:37.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:32:37.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:32:37.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:32:37.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:32:37.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:32:37.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:32:37.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:32:37.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:32:37.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:32:37.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-17 22:32:37.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:32:37.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:32:37.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:32:37.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:32:37.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:32:37.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:32:37.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-17 22:32:37.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-17 22:32:37.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:32:37.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:32:37.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:32:37.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:32:37.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:32:37.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:32:37.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-17 22:32:37.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-17 22:32:37.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:32:37.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:32:37.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-17 22:32:37.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:32:37.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:32:37.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:32:37.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:32:37.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-17 22:32:37.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-17 22:32:37.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-17 22:32:37.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:32:37.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:32:37.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-17 22:32:37.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-17 22:32:37.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-17 22:32:37.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-17 22:32:37.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-17 22:32:37.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-17 22:32:37.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-17 22:32:37.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-17 22:32:37.564 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-17 22:32:37.564 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-17 22:32:37.602 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-17 22:32:37.603 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-17 22:32:37.612 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-17 22:32:37.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-17 22:32:37.614 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:32:37.614 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:32:37.614 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-17 22:32:37.615 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-17 22:32:37.615 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-17 22:32:37.616 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:32:37.616 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-17 22:32:37.617 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-17 22:32:37.617 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-17 22:32:37.618 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-17 22:32:37.618 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:32:37.619 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-17 22:32:37.622 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-17 22:32:37.623 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-17 22:32:37.624 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-17 22:32:37.624 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=****, user=root}
2022-01-17 22:32:37.624 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-17 22:32:37.626 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-17 22:32:37.626 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-17 22:32:37.953 WARN [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:133)] - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionCreator.makeConnection(DriverManagerConnectionCreator.java:37) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:409) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:275) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:453) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:146) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:481) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.14.jar:5.3.14]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
2022-01-17 22:32:37.972 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-17 22:32:37.983 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-17 22:32:37.987 DEBUG [main][org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl] [makeLobCreatorBuilder] [org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:65)] - HHH000422: Disabling contextual LOB creation as connection was null
2022-01-17 22:32:37.989 DEBUG [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:126)] - Error calling DriverManager#getConnection [null]
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at java.sql.DriverManager.getConnection(DriverManager.java:677) ~[java.sql:?]
	at java.sql.DriverManager.getConnection(DriverManager.java:189) ~[java.sql:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionCreator.makeConnection(DriverManagerConnectionCreator.java:34) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:409) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:275) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:453) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:146) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) ~[hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) ~[javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) ~[javax.persistence-api-2.2.jar:2.2]
	at ma.cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:11) ~[classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:481) ~[?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.14.jar:5.3.14]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.14.jar:5.3.14]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
2022-01-17 22:32:37.991 WARN [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:137)] - SQL Error: 1045, SQLState: 28000
2022-01-17 22:32:37.991 ERROR [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:142)] - Access denied for user 'root'@'localhost' (using password: YES)
2022-01-17 22:32:37.992 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2022-01-17 22:32:37.994 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'idCtrl' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'idService' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'idService' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'idDao' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'idDao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2022-01-17 22:37:39.861 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-17 22:37:39.926 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-17 22:37:39.947 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-17 22:37:39.956 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-17 22:37:39.956 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-17 22:37:39.981 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-17 22:37:40.032 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-17 22:37:40.032 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-17 22:37:40.033 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-17 22:37:40.036 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-17 22:37:40.039 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-17 22:37:40.040 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-17 22:37:40.043 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-17 22:37:40.070 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-17 22:37:40.071 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-17 22:37:40.174 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-17 22:37:40.184 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-17 22:37:40.185 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-17 22:37:40.197 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-17 22:37:40.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:37:40.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:37:40.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:37:40.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-17 22:37:40.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-17 22:37:40.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-17 22:37:40.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:37:40.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:37:40.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:37:40.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:37:40.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:37:40.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:37:40.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:37:40.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:37:40.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:37:40.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:37:40.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:37:40.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:37:40.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:37:40.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:37:40.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-17 22:37:40.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:37:40.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:37:40.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:37:40.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:37:40.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:37:40.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:37:40.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:37:40.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:37:40.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:37:40.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:37:40.252 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:37:40.252 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:37:40.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-17 22:37:40.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-17 22:37:40.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:37:40.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:37:40.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:37:40.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:37:40.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:37:40.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:37:40.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:37:40.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:37:40.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:37:40.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:37:40.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:37:40.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:37:40.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:37:40.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:37:40.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:37:40.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:37:40.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:37:40.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:37:40.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:37:40.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:37:40.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:37:40.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:37:40.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:37:40.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:37:40.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:37:40.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-17 22:37:40.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:37:40.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:37:40.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:37:40.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-17 22:37:40.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-17 22:37:40.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:37:40.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:37:40.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:37:40.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:37:40.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:37:40.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:37:40.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:37:40.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:37:40.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:37:40.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:37:40.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-17 22:37:40.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:37:40.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:37:40.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:37:40.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:37:40.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:37:40.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:37:40.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-17 22:37:40.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-17 22:37:40.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:37:40.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:37:40.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:37:40.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:37:40.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:37:40.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:37:40.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-17 22:37:40.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-17 22:37:40.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:37:40.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:37:40.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-17 22:37:40.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:37:40.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:37:40.282 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:37:40.282 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:37:40.282 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-17 22:37:40.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-17 22:37:40.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-17 22:37:40.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:37:40.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:37:40.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-17 22:37:40.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-17 22:37:40.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-17 22:37:40.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-17 22:37:40.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-17 22:37:40.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-17 22:37:40.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-17 22:37:40.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-17 22:37:40.294 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-17 22:37:40.294 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-17 22:37:40.324 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-17 22:37:40.324 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-17 22:37:40.330 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-17 22:37:40.331 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-17 22:37:40.331 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:37:40.331 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:37:40.332 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-17 22:37:40.332 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-17 22:37:40.332 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-17 22:37:40.333 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:37:40.334 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-17 22:37:40.334 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-17 22:37:40.334 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-17 22:37:40.335 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-17 22:37:40.335 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:37:40.335 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-17 22:37:40.338 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-17 22:37:40.339 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-17 22:37:40.339 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-17 22:37:40.339 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-17 22:37:40.339 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-17 22:37:40.341 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-17 22:37:40.341 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-17 22:37:40.580 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-17 22:37:40.580 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-17 22:37:40.580 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-17 22:37:40.586 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-17 22:37:40.595 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-17 22:37:40.595 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-17 22:37:40.606 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43f0c2d1]
2022-01-17 22:37:40.630 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-17 22:37:40.639 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-17 22:37:40.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 22:37:40.651 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-17 22:37:40.654 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-17 22:37:40.666 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 22:37:40.668 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 22:37:40.668 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 22:37:40.669 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 22:37:40.670 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-17 22:37:40.671 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 22:37:40.673 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 22:37:40.674 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 22:37:40.675 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-17 22:37:40.675 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-17 22:37:40.675 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-17 22:37:40.675 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-17 22:37:40.675 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-17 22:37:40.679 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 22:37:40.680 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-17 22:37:40.680 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-17 22:37:40.709 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-17 22:37:40.710 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-17 22:37:40.710 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-17 22:37:40.710 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-17 22:37:40.710 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-17 22:37:40.710 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-17 22:37:40.710 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-17 22:37:40.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-17 22:37:40.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-17 22:37:40.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-17 22:37:40.714 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-17 22:37:40.714 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-17 22:37:40.745 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:37:40.746 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:37:40.754 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-17 22:37:40.754 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@12704e15, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-17 22:37:40.761 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-17 22:37:40.762 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-17 22:37:40.762 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60b34931]
2022-01-17 22:37:40.793 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 22:37:40.793 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 22:37:40.916 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-17 22:37:40.917 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-17 22:37:40.917 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-17 22:37:40.917 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-17 22:37:40.917 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-17 22:37:40.917 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-17 22:37:40.917 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-17 22:37:40.930 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7645f03e]
2022-01-17 22:37:40.930 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-17 22:37:40.930 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 22:37:40.936 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 22:37:40.938 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-17 22:37:40.939 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-17 22:37:40.965 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7186b202] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-17 22:37:40.988 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-17 22:37:41.002 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-17 22:37:41.003 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-17 22:37:41.006 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 22:37:41.006 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 22:37:41.007 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-17 22:37:41.007 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-17 22:37:41.009 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:37:41.012 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@30bf26df
2022-01-17 22:37:41.013 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: a7423c27-b9fa-4d55-805d-d39bf0dec65e (<unnamed>)
2022-01-17 22:37:41.013 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-17 22:37:41.049 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-17 22:37:41.076 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-17 22:37:41.076 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:37:41.085 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:37:41.086 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:37:41.095 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-17 22:37:41.096 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:37:41.098 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:37:41.098 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:37:41.099 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:37:41.101 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-17 22:37:41.101 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:37:41.102 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:37:41.102 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=1}
2022-01-17 22:37:41.104 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.104 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.104 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:37:41.105 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:37:41.105 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=2}
2022-01-17 22:37:41.107 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=1}
2022-01-17 22:37:41.108 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.108 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.108 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:37:41.109 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:37:41.109 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:37:41.110 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-17 22:37:41.110 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:37:41.110 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=3}
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=2}
2022-01-17 22:37:41.111 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=1}
2022-01-17 22:37:41.112 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.112 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.112 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:37:41.112 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:37:41.113 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:37:41.114 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:37:41.115 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=3}
2022-01-17 22:37:41.115 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=2}
2022-01-17 22:37:41.115 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=4}
2022-01-17 22:37:41.115 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=1}
2022-01-17 22:37:41.115 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.115 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.115 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:37:41.120 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:37:41.120 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:37:41.120 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:37:41.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-01-17 22:37:41.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:37:41.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:37:41.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=3}
2022-01-17 22:37:41.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=2}
2022-01-17 22:37:41.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=4}
2022-01-17 22:37:41.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=IBTIHAL, id=1}
2022-01-17 22:37:41.124 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-17 22:37:41.128 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.128 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:37:41.128 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:37.163 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-17 22:40:37.220 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-17 22:40:37.239 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-17 22:40:37.247 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-17 22:40:37.248 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-17 22:40:37.273 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-17 22:40:37.336 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-17 22:40:37.336 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-17 22:40:37.337 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-17 22:40:37.342 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-17 22:40:37.346 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-17 22:40:37.347 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-17 22:40:37.350 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-17 22:40:37.377 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-17 22:40:37.378 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-17 22:40:37.484 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-17 22:40:37.495 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-17 22:40:37.496 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-17 22:40:37.508 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-17 22:40:37.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:40:37.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:40:37.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:40:37.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-17 22:40:37.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-17 22:40:37.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-17 22:40:37.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:40:37.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:40:37.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:40:37.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:40:37.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:40:37.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:40:37.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:40:37.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:40:37.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:40:37.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:40:37.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:40:37.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:40:37.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:40:37.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:40:37.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-17 22:40:37.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:40:37.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:40:37.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:40:37.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:40:37.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:40:37.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:40:37.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:40:37.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:40:37.566 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:40:37.566 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:40:37.566 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:40:37.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:40:37.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-17 22:40:37.568 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-17 22:40:37.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:40:37.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:40:37.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:40:37.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:40:37.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:40:37.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:40:37.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:40:37.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:40:37.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:40:37.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:40:37.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:40:37.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:40:37.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:40:37.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:40:37.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:40:37.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:40:37.579 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:40:37.579 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:40:37.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:40:37.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:40:37.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:40:37.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:40:37.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:40:37.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:40:37.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:40:37.584 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-17 22:40:37.584 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:40:37.584 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:40:37.585 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:40:37.585 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-17 22:40:37.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-17 22:40:37.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:40:37.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:40:37.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:40:37.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:40:37.588 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:40:37.588 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:40:37.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:40:37.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:40:37.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:40:37.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:40:37.590 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-17 22:40:37.590 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:40:37.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:40:37.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:40:37.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:40:37.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:40:37.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:40:37.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-17 22:40:37.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-17 22:40:37.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:40:37.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:40:37.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:40:37.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:40:37.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:40:37.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:40:37.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-17 22:40:37.596 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-17 22:40:37.597 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:40:37.597 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:40:37.597 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-17 22:40:37.598 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:40:37.598 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:40:37.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:40:37.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:40:37.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-17 22:40:37.600 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-17 22:40:37.600 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-17 22:40:37.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:40:37.603 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:40:37.603 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-17 22:40:37.603 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-17 22:40:37.603 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-17 22:40:37.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-17 22:40:37.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-17 22:40:37.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-17 22:40:37.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-17 22:40:37.605 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-17 22:40:37.612 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-17 22:40:37.612 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-17 22:40:37.645 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-17 22:40:37.645 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-17 22:40:37.652 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-17 22:40:37.653 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-17 22:40:37.653 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:40:37.653 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:40:37.653 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-17 22:40:37.654 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-17 22:40:37.654 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-17 22:40:37.655 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:40:37.655 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-17 22:40:37.656 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-17 22:40:37.656 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-17 22:40:37.656 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-17 22:40:37.657 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:40:37.657 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-17 22:40:37.660 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-17 22:40:37.660 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-17 22:40:37.660 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-17 22:40:37.661 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-17 22:40:37.661 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-17 22:40:37.662 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-17 22:40:37.663 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-17 22:40:37.893 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-17 22:40:37.893 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-17 22:40:37.893 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-17 22:40:37.900 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-17 22:40:37.908 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-17 22:40:37.909 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-17 22:40:37.920 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43f0c2d1]
2022-01-17 22:40:37.939 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-17 22:40:37.948 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-17 22:40:37.958 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 22:40:37.961 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-17 22:40:37.964 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-17 22:40:37.976 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 22:40:37.978 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 22:40:37.978 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 22:40:37.978 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 22:40:37.980 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-17 22:40:37.981 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 22:40:37.983 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 22:40:37.984 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 22:40:37.985 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-17 22:40:37.985 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-17 22:40:37.985 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-17 22:40:37.985 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-17 22:40:37.985 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-17 22:40:37.990 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 22:40:37.990 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-17 22:40:37.991 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-17 22:40:38.017 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-17 22:40:38.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-17 22:40:38.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-17 22:40:38.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-17 22:40:38.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-17 22:40:38.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-17 22:40:38.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-17 22:40:38.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-17 22:40:38.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-17 22:40:38.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-17 22:40:38.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-17 22:40:38.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-17 22:40:38.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-17 22:40:38.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-17 22:40:38.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-17 22:40:38.051 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:40:38.052 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:40:38.060 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-17 22:40:38.060 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@12704e15, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-17 22:40:38.067 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-17 22:40:38.068 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-17 22:40:38.068 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60b34931]
2022-01-17 22:40:38.097 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 22:40:38.097 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 22:40:38.211 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-17 22:40:38.211 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-17 22:40:38.211 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-17 22:40:38.211 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-17 22:40:38.212 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-17 22:40:38.212 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-17 22:40:38.212 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-17 22:40:38.224 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7645f03e]
2022-01-17 22:40:38.224 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-17 22:40:38.225 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 22:40:38.230 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 22:40:38.232 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-17 22:40:38.233 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-17 22:40:38.260 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7186b202] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-17 22:40:38.294 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-17 22:40:38.296 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-17 22:40:38.296 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-17 22:40:38.299 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 22:40:38.299 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 22:40:38.300 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-17 22:40:38.300 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-17 22:40:38.302 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:40:38.305 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75fe1619
2022-01-17 22:40:38.306 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 38919f43-fd77-44f7-98dd-37231fa5c656 (<unnamed>)
2022-01-17 22:40:38.307 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-17 22:40:38.345 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-17 22:40:38.372 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-17 22:40:38.372 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:38.381 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:38.382 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:38.387 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 5
2022-01-17 22:40:38.387 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:38.389 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:38.389 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:38.389 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:38.392 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-17 22:40:38.392 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:38.393 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:38.393 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=5}
2022-01-17 22:40:38.395 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.395 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.395 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:38.396 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:38.396 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:38.397 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 6
2022-01-17 22:40:38.397 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:38.397 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:38.397 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:38.397 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:38.397 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-17 22:40:38.398 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:38.398 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:38.398 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=5}
2022-01-17 22:40:38.398 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=6}
2022-01-17 22:40:38.398 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.398 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.398 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:38.399 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:38.399 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:38.400 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 7
2022-01-17 22:40:38.400 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:38.400 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:38.400 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:38.400 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:38.400 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=5}
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=7}
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=6}
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.401 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:38.402 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:38.402 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:38.403 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 8
2022-01-17 22:40:38.403 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:38.403 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:38.403 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=5}
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=7}
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=6}
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=8}
2022-01-17 22:40:38.404 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.405 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.405 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:38.410 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-17 22:40:38.412 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-17 22:40:38.415 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#1]
2022-01-17 22:40:38.415 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = IBTIHAL
2022-01-17 22:40:38.416 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-17 22:40:38.416 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#1]
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#1
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=5}
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=7}
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=6}
2022-01-17 22:40:38.417 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=IBTIHAL, id=1}
2022-01-17 22:40:38.418 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=8}
2022-01-17 22:40:38.418 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.418 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:38.418 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-17 22:40:38.419 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-17 22:40:38.420 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#2]
2022-01-17 22:40:38.420 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = ismail
2022-01-17 22:40:38.420 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-17 22:40:38.420 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#2]
2022-01-17 22:40:38.420 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#2
2022-01-17 22:40:38.420 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:56.440 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-17 22:40:56.510 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-17 22:40:56.530 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-17 22:40:56.540 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-17 22:40:56.540 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-17 22:40:56.563 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-17 22:40:56.614 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-17 22:40:56.615 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-17 22:40:56.615 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-17 22:40:56.618 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-17 22:40:56.621 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-17 22:40:56.622 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-17 22:40:56.624 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-17 22:40:56.650 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-17 22:40:56.651 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-17 22:40:56.748 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-17 22:40:56.760 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-17 22:40:56.761 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-17 22:40:56.773 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-17 22:40:56.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:40:56.820 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:40:56.820 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 22:40:56.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-17 22:40:56.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-17 22:40:56.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-17 22:40:56.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:40:56.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:40:56.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 22:40:56.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:40:56.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:40:56.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 22:40:56.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:40:56.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:40:56.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-17 22:40:56.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:40:56.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:40:56.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 22:40:56.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:40:56.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 22:40:56.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-17 22:40:56.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:40:56.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:40:56.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-17 22:40:56.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:40:56.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:40:56.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 22:40:56.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:40:56.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 22:40:56.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:40:56.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 22:40:56.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:40:56.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 22:40:56.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-17 22:40:56.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-17 22:40:56.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:40:56.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-17 22:40:56.835 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:40:56.835 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 22:40:56.838 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:40:56.838 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 22:40:56.839 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:40:56.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 22:40:56.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:40:56.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 22:40:56.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:40:56.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 22:40:56.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:40:56.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 22:40:56.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:40:56.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 22:40:56.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:40:56.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 22:40:56.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:40:56.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-17 22:40:56.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:40:56.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 22:40:56.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:40:56.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:40:56.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 22:40:56.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-17 22:40:56.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:40:56.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:40:56.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 22:40:56.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-17 22:40:56.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-17 22:40:56.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:40:56.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 22:40:56.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:40:56.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 22:40:56.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:40:56.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 22:40:56.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:40:56.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 22:40:56.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:40:56.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 22:40:56.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-17 22:40:56.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:40:56.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:40:56.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 22:40:56.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:40:56.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:40:56.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 22:40:56.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-17 22:40:56.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-17 22:40:56.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:40:56.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:40:56.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 22:40:56.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:40:56.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:40:56.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 22:40:56.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-17 22:40:56.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-17 22:40:56.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:40:56.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 22:40:56.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-17 22:40:56.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:40:56.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 22:40:56.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:40:56.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 22:40:56.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-17 22:40:56.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-17 22:40:56.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-17 22:40:56.869 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:40:56.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 22:40:56.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-17 22:40:56.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-17 22:40:56.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-17 22:40:56.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-17 22:40:56.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-17 22:40:56.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-17 22:40:56.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-17 22:40:56.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-17 22:40:56.879 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-17 22:40:56.880 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-17 22:40:56.912 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-17 22:40:56.913 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-17 22:40:56.919 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-17 22:40:56.920 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-17 22:40:56.920 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:40:56.920 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 22:40:56.920 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-17 22:40:56.921 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-17 22:40:56.921 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-17 22:40:56.922 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:40:56.923 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-17 22:40:56.923 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-17 22:40:56.924 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-17 22:40:56.924 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-17 22:40:56.924 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 22:40:56.925 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-17 22:40:56.928 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-17 22:40:56.928 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-17 22:40:56.929 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-17 22:40:56.929 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-17 22:40:56.929 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-17 22:40:56.931 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-17 22:40:56.931 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-17 22:40:57.156 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-17 22:40:57.156 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-17 22:40:57.157 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-17 22:40:57.164 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-17 22:40:57.173 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-17 22:40:57.173 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-17 22:40:57.185 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43f0c2d1]
2022-01-17 22:40:57.205 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-17 22:40:57.213 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-17 22:40:57.223 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 22:40:57.226 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-17 22:40:57.229 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-17 22:40:57.242 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 22:40:57.243 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 22:40:57.243 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 22:40:57.244 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 22:40:57.245 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-17 22:40:57.246 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 22:40:57.248 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 22:40:57.249 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 22:40:57.250 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-17 22:40:57.250 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-17 22:40:57.250 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-17 22:40:57.250 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-17 22:40:57.250 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-17 22:40:57.256 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 22:40:57.256 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-17 22:40:57.257 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-17 22:40:57.284 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-17 22:40:57.285 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-17 22:40:57.285 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-17 22:40:57.285 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-17 22:40:57.285 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-17 22:40:57.286 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-17 22:40:57.286 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-17 22:40:57.286 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-17 22:40:57.286 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-17 22:40:57.286 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-17 22:40:57.286 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-17 22:40:57.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-17 22:40:57.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-17 22:40:57.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-17 22:40:57.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-17 22:40:57.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-17 22:40:57.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-17 22:40:57.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-17 22:40:57.288 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-17 22:40:57.288 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-17 22:40:57.288 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-17 22:40:57.288 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-17 22:40:57.288 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-17 22:40:57.288 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-17 22:40:57.288 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-17 22:40:57.289 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-17 22:40:57.290 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-17 22:40:57.290 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-17 22:40:57.290 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-17 22:40:57.290 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-17 22:40:57.290 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-17 22:40:57.320 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:40:57.320 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:40:57.328 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-17 22:40:57.328 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@12704e15, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-17 22:40:57.335 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-17 22:40:57.336 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-17 22:40:57.336 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60b34931]
2022-01-17 22:40:57.364 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 22:40:57.365 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 22:40:57.473 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-17 22:40:57.473 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-17 22:40:57.473 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-17 22:40:57.473 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-17 22:40:57.474 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-17 22:40:57.474 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-17 22:40:57.474 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-17 22:40:57.485 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7645f03e]
2022-01-17 22:40:57.485 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-17 22:40:57.486 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 22:40:57.491 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 22:40:57.493 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-17 22:40:57.494 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-17 22:40:57.519 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7186b202] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-17 22:40:57.540 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-17 22:40:57.541 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-17 22:40:57.541 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-17 22:40:57.544 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 22:40:57.545 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 22:40:57.545 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-17 22:40:57.545 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-17 22:40:57.548 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 22:40:57.550 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75fe1619
2022-01-17 22:40:57.552 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: c908789f-58f7-4eb9-b42d-422e4843388a (<unnamed>)
2022-01-17 22:40:57.552 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-17 22:40:57.586 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-17 22:40:57.614 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-17 22:40:57.615 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:57.624 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:57.626 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:57.644 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 9
2022-01-17 22:40:57.644 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:57.646 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:57.646 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:57.647 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:57.650 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-17 22:40:57.650 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:57.651 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:57.652 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=9}
2022-01-17 22:40:57.654 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.655 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.655 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:57.656 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:57.656 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:57.657 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 10
2022-01-17 22:40:57.657 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:57.657 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=10}
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=9}
2022-01-17 22:40:57.658 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.659 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.659 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:57.659 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:57.659 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 11
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:57.661 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=11}
2022-01-17 22:40:57.662 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=10}
2022-01-17 22:40:57.662 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=9}
2022-01-17 22:40:57.662 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.662 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.662 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:57.663 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 22:40:57.663 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 22:40:57.664 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 12
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=11}
2022-01-17 22:40:57.665 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=10}
2022-01-17 22:40:57.666 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=12}
2022-01-17 22:40:57.666 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=9}
2022-01-17 22:40:57.666 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.666 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.667 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 22:40:57.672 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-17 22:40:57.674 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-17 22:40:57.677 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#1]
2022-01-17 22:40:57.678 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = IBTIHAL
2022-01-17 22:40:57.678 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-17 22:40:57.678 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#1]
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#1
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=AHMED, id=11}
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=10}
2022-01-17 22:40:57.679 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=FARAH, id=12}
2022-01-17 22:40:57.680 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, id=9}
2022-01-17 22:40:57.680 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=IBTIHAL, id=1}
2022-01-17 22:40:57.680 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.680 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 22:40:57.681 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 23:13:32.736 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-17 23:13:32.818 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-17 23:13:32.844 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-17 23:13:32.852 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-17 23:13:32.853 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-17 23:13:32.880 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-17 23:13:32.955 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-17 23:13:32.956 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-17 23:13:32.956 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-17 23:13:32.960 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-17 23:13:32.964 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-17 23:13:32.966 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-17 23:13:32.969 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-17 23:13:32.998 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-17 23:13:32.999 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-17 23:13:33.114 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-17 23:13:33.125 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-17 23:13:33.126 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-17 23:13:33.138 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-17 23:13:33.196 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:13:33.196 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:13:33.197 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:13:33.197 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-17 23:13:33.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-17 23:13:33.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-17 23:13:33.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:13:33.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:13:33.200 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:13:33.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:13:33.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:13:33.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:13:33.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:13:33.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:13:33.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:13:33.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:13:33.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:13:33.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:13:33.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 23:13:33.205 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 23:13:33.205 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-17 23:13:33.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:13:33.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:13:33.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:13:33.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:13:33.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:13:33.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:13:33.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 23:13:33.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 23:13:33.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 23:13:33.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 23:13:33.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 23:13:33.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 23:13:33.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-17 23:13:33.211 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-17 23:13:33.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-17 23:13:33.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-17 23:13:33.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 23:13:33.213 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 23:13:33.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 23:13:33.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 23:13:33.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 23:13:33.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 23:13:33.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 23:13:33.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 23:13:33.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 23:13:33.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 23:13:33.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 23:13:33.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 23:13:33.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 23:13:33.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 23:13:33.228 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 23:13:33.228 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 23:13:33.229 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-17 23:13:33.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-17 23:13:33.231 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 23:13:33.232 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 23:13:33.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:13:33.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:13:33.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:13:33.235 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-17 23:13:33.236 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:13:33.236 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:13:33.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:13:33.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-17 23:13:33.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-17 23:13:33.239 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 23:13:33.239 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 23:13:33.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 23:13:33.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 23:13:33.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 23:13:33.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 23:13:33.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 23:13:33.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 23:13:33.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 23:13:33.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 23:13:33.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-17 23:13:33.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:13:33.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:13:33.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:13:33.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:13:33.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:13:33.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:13:33.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-17 23:13:33.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-17 23:13:33.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:13:33.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:13:33.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:13:33.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:13:33.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:13:33.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:13:33.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-17 23:13:33.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-17 23:13:33.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 23:13:33.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 23:13:33.252 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-17 23:13:33.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 23:13:33.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 23:13:33.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 23:13:33.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 23:13:33.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-17 23:13:33.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-17 23:13:33.256 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-17 23:13:33.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 23:13:33.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 23:13:33.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-17 23:13:33.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-17 23:13:33.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-17 23:13:33.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-17 23:13:33.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-17 23:13:33.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-17 23:13:33.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-17 23:13:33.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-17 23:13:33.267 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-17 23:13:33.267 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-17 23:13:33.303 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-17 23:13:33.303 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-17 23:13:33.310 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-17 23:13:33.311 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-17 23:13:33.312 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 23:13:33.312 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 23:13:33.312 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-17 23:13:33.313 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-17 23:13:33.313 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-17 23:13:33.314 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 23:13:33.314 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-17 23:13:33.314 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-17 23:13:33.315 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-17 23:13:33.315 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-17 23:13:33.316 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 23:13:33.316 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-17 23:13:33.320 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-17 23:13:33.321 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-17 23:13:33.322 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-17 23:13:33.322 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-17 23:13:33.322 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-17 23:13:33.325 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-17 23:13:33.325 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-17 23:13:33.644 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-17 23:13:33.645 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-17 23:13:33.645 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-17 23:13:33.659 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-17 23:13:33.673 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-17 23:13:33.674 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-17 23:13:33.687 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@43f0c2d1]
2022-01-17 23:13:33.716 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-17 23:13:33.724 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-17 23:13:33.733 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 23:13:33.736 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-17 23:13:33.739 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-17 23:13:33.751 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 23:13:33.752 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 23:13:33.752 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 23:13:33.753 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 23:13:33.754 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-17 23:13:33.755 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 23:13:33.756 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 23:13:33.757 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 23:13:33.758 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-17 23:13:33.758 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-17 23:13:33.758 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-17 23:13:33.758 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-17 23:13:33.759 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-17 23:13:33.762 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 23:13:33.763 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-17 23:13:33.763 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-17 23:13:33.786 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-17 23:13:33.786 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-17 23:13:33.786 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-17 23:13:33.787 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-17 23:13:33.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-17 23:13:33.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-17 23:13:33.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-17 23:13:33.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-17 23:13:33.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-17 23:13:33.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-17 23:13:33.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-17 23:13:33.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-17 23:13:33.831 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:13:33.831 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:13:33.839 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-17 23:13:33.839 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@12704e15, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-17 23:13:33.847 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-17 23:13:33.847 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-17 23:13:33.848 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41ffaeb8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@60b34931]
2022-01-17 23:13:33.885 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 23:13:33.886 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 23:13:34.003 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-17 23:13:34.003 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-17 23:13:34.003 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-01-17 23:13:34.004 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-17 23:13:34.004 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-17 23:13:34.004 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-17 23:13:34.004 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-17 23:13:34.017 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7645f03e]
2022-01-17 23:13:34.018 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-17 23:13:34.018 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 23:13:34.024 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 23:13:34.026 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-17 23:13:34.027 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-01-17 23:13:34.055 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7186b202] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-17 23:13:34.076 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-17 23:13:34.077 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-17 23:13:34.077 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-17 23:13:34.080 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 23:13:34.080 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 23:13:34.081 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-17 23:13:34.081 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-17 23:13:34.083 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:13:34.086 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75fe1619
2022-01-17 23:13:34.087 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 3c4a9126-f7d0-48b2-876b-31895a07c3c0 (<unnamed>)
2022-01-17 23:13:34.087 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-17 23:13:34.123 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-17 23:13:34.152 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-17 23:13:34.153 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 23:13:34.159 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-17 23:13:34.172 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-17 23:13:34.178 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#2]
2022-01-17 23:13:34.179 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = ismail
2022-01-17 23:13:34.179 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-17 23:13:34.180 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#2]
2022-01-17 23:13:34.181 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#2
2022-01-17 23:13:34.186 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 23:13:34.186 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 23:13:34.187 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 23:13:34.189 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
2022-01-17 23:13:34.189 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-17 23:13:34.190 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 23:13:34.190 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=ismail, id=2}
2022-01-17 23:13:34.193 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-17 23:13:34.198 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 23:13:34.199 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 23:13:34.199 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    select
        client0_.id as id1_0_0_,
        client0_.name as name2_0_0_ 
    from
        TClients client0_ 
    where
        client0_.id=?
2022-01-17 23:13:34.200 DEBUG [main][org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl] [resolveEntityKey] [org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.resolveEntityKey(EntityReferenceInitializerImpl.java:131)] - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2022-01-17 23:13:34.200 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:171)] - Resolving attributes for [ma.cigma.pfe.models.Client#1]
2022-01-17 23:13:34.200 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:184)] - Processing attribute `name` : value = IBTIHAL
2022-01-17 23:13:34.200 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityEntryLoadedState(TwoPhaseLoad.java:215)] - Attribute (`name`)  - enhanced for lazy-loading? - false
2022-01-17 23:13:34.200 DEBUG [main][org.hibernate.engine.internal.TwoPhaseLoad] [initializeEntityFromEntityEntryLoadedState] [org.hibernate.engine.internal.TwoPhaseLoad.initializeEntityFromEntityEntryLoadedState(TwoPhaseLoad.java:352)] - Done materializing entity [ma.cigma.pfe.models.Client#1]
2022-01-17 23:13:34.200 DEBUG [main][org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader] [load] [org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:307)] - Done entity load : ma.cigma.pfe.models.Client#1
2022-01-17 23:13:34.200 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 23:47:15.160 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-17 23:47:15.217 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-17 23:47:15.234 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-17 23:47:15.242 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-17 23:47:15.242 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-17 23:47:15.265 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-17 23:47:15.318 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-17 23:47:15.318 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-17 23:47:15.319 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-17 23:47:15.323 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-17 23:47:15.326 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-17 23:47:15.327 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-17 23:47:15.330 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-17 23:47:15.355 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-17 23:47:15.356 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-17 23:47:15.453 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-17 23:47:15.463 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-17 23:47:15.464 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-17 23:47:15.476 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-17 23:47:15.519 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:47:15.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:47:15.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:47:15.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-17 23:47:15.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-17 23:47:15.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-17 23:47:15.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:47:15.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:47:15.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:47:15.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:47:15.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:47:15.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:47:15.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:47:15.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:47:15.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:47:15.525 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:47:15.525 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:47:15.525 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:47:15.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 23:47:15.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 23:47:15.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-17 23:47:15.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:47:15.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:47:15.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:47:15.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:47:15.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:47:15.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:47:15.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 23:47:15.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 23:47:15.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 23:47:15.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 23:47:15.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 23:47:15.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 23:47:15.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-17 23:47:15.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-17 23:47:15.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-17 23:47:15.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-17 23:47:15.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 23:47:15.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 23:47:15.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 23:47:15.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 23:47:15.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 23:47:15.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 23:47:15.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 23:47:15.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 23:47:15.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 23:47:15.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 23:47:15.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 23:47:15.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 23:47:15.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 23:47:15.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 23:47:15.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 23:47:15.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 23:47:15.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-17 23:47:15.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-17 23:47:15.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 23:47:15.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 23:47:15.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:47:15.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:47:15.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:47:15.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-17 23:47:15.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:47:15.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:47:15.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:47:15.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-17 23:47:15.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-17 23:47:15.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 23:47:15.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 23:47:15.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 23:47:15.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 23:47:15.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 23:47:15.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 23:47:15.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 23:47:15.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 23:47:15.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 23:47:15.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 23:47:15.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-17 23:47:15.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:47:15.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:47:15.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:47:15.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:47:15.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:47:15.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:47:15.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-17 23:47:15.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-17 23:47:15.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:47:15.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:47:15.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:47:15.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:47:15.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:47:15.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:47:15.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-17 23:47:15.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-17 23:47:15.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 23:47:15.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 23:47:15.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-17 23:47:15.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 23:47:15.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 23:47:15.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 23:47:15.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 23:47:15.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-17 23:47:15.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-17 23:47:15.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-17 23:47:15.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 23:47:15.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 23:47:15.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-17 23:47:15.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-17 23:47:15.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-17 23:47:15.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-17 23:47:15.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-17 23:47:15.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-17 23:47:15.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-17 23:47:15.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-17 23:47:15.573 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-17 23:47:15.573 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-17 23:47:15.602 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-17 23:47:15.603 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-17 23:47:15.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-17 23:47:15.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-17 23:47:15.610 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 23:47:15.610 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 23:47:15.610 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-17 23:47:15.611 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-17 23:47:15.611 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-17 23:47:15.612 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 23:47:15.612 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-17 23:47:15.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-17 23:47:15.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-17 23:47:15.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-17 23:47:15.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 23:47:15.614 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-17 23:47:15.617 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-17 23:47:15.617 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-17 23:47:15.617 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-17 23:47:15.618 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-17 23:47:15.618 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-17 23:47:15.619 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-17 23:47:15.619 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-17 23:47:15.843 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-17 23:47:15.843 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-17 23:47:15.843 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-17 23:47:15.850 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-17 23:47:15.858 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-17 23:47:15.859 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-17 23:47:15.872 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c5c616f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c6c6f24]
2022-01-17 23:47:15.905 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-17 23:47:15.914 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-17 23:47:15.925 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 23:47:15.928 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-17 23:47:15.932 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-17 23:47:15.942 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.944 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-17 23:47:15.944 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-17 23:47:15.945 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 23:47:15.946 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-17 23:47:15.947 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 23:47:15.949 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 23:47:15.950 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 23:47:15.951 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.951 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-17 23:47:15.951 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-17 23:47:15.951 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-17 23:47:15.951 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-17 23:47:15.951 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.952 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-17 23:47:15.952 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-17 23:47:15.952 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-17 23:47:15.952 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-17 23:47:15.955 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-17 23:47:15.956 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 23:47:15.956 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-17 23:47:15.956 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-17 23:47:15.958 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.959 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 23:47:15.959 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 23:47:15.959 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 23:47:15.959 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-17 23:47:15.959 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 23:47:15.959 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 23:47:15.960 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 23:47:15.960 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-17 23:47:15.961 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.962 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.967 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.968 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.968 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-17 23:47:15.969 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-17 23:47:15.969 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-17 23:47:15.970 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-17 23:47:15.971 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-17 23:47:15.971 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-17 23:47:15.971 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-17 23:47:15.972 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-17 23:47:15.972 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-17 23:47:15.972 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-17 23:47:15.973 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 23:47:15.973 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-17 23:47:15.973 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-17 23:47:15.973 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 23:47:15.973 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-17 23:47:15.974 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-17 23:47:15.974 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-17 23:47:15.974 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-17 23:47:15.975 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1335)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-01-17 23:47:15.991 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: TClients_id, element: factures_id
2022-01-17 23:47:15.992 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-17 23:47:15.993 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-17 23:47:15.993 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-17 23:47:15.994 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-17 23:47:16.014 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-17 23:47:16.014 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-17 23:47:16.015 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-17 23:47:16.016 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-17 23:47:16.017 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-17 23:47:16.017 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-17 23:47:16.017 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-17 23:47:16.017 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-17 23:47:16.017 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-17 23:47:16.017 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-17 23:47:16.017 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-17 23:47:16.018 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-17 23:47:16.019 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-17 23:47:16.045 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:47:16.046 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:47:16.053 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-17 23:47:16.053 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@201c3cda, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-17 23:47:16.064 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-17 23:47:16.065 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-17 23:47:16.065 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c5c616f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ae126d1]
2022-01-17 23:47:16.093 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-17 23:47:16.094 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-17 23:47:16.193 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 23:47:16.193 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 23:47:16.210 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-17 23:47:16.211 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into TClients_facture (TClients_id, factures_id) values (?, ?)
2022-01-17 23:47:16.211 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update TClients_facture set factures_id=? where TClients_id=? and factures_id=?
2022-01-17 23:47:16.211 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from TClients_facture where TClients_id=? and factures_id=?
2022-01-17 23:47:16.211 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from TClients_facture where TClients_id=?
2022-01-17 23:47:16.213 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-17 23:47:16.213 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-17 23:47:16.213 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from facture facture_ where facture_.id=?
2022-01-17 23:47:16.214 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, description, id) values (?, ?, ?)
2022-01-17 23:47:16.214 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, description=? where id=?
2022-01-17 23:47:16.214 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-17 23:47:16.214 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, description) values (?, ?)
2022-01-17 23:47:16.228 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e15f4d4]
2022-01-17 23:47:16.229 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-17 23:47:16.229 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-17 23:47:16.229 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 23:47:16.234 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 23:47:16.237 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-17 23:47:16.238 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from facture facture0_ where facture0_.id=?
2022-01-17 23:47:16.238 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-17 23:47:16.238 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-17 23:47:16.238 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-01-17 23:47:16.238 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-17 23:47:16.238 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-17 23:47:16.238 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-17 23:47:16.239 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-17 23:47:16.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a9860]
2022-01-17 23:47:16.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-17 23:47:16.241 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2173a742]
2022-01-17 23:47:16.242 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39dec536]
2022-01-17 23:47:16.242 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-17 23:47:16.242 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 23:47:16.243 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 23:47:16.243 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-01-17 23:47:16.243 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-01-17 23:47:16.245 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@667dcaad]
2022-01-17 23:47:16.245 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d7fd41]
2022-01-17 23:47:16.246 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-17 23:47:16.247 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-17 23:47:16.247 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 23:47:16.249 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 23:47:16.249 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {tclients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-17 23:47:16.250 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as tclients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_facture factures0_ inner join facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-01-17 23:47:16.279 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@45292ec1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-17 23:47:16.303 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-17 23:47:16.311 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-17 23:47:16.311 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients_facture (
       TClients_id bigint not null,
        factures_id bigint not null
    ) engine=MyISAM
2022-01-17 23:47:16.317 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_facture 
       drop index UK_ou87390nku7q9q711r0knnm9w
2022-01-17 23:47:16.327 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_facture 
       add constraint UK_ou87390nku7q9q711r0knnm9w unique (factures_id)
2022-01-17 23:47:16.347 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_facture 
       add constraint FKc3iw2wvna1thlfsoec4hiuu9b 
       foreign key (factures_id) 
       references facture (id)
2022-01-17 23:47:16.361 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_facture 
       add constraint FKq6sqo4g3aj0ptoj747s6m99ts 
       foreign key (TClients_id) 
       references TClients (id)
2022-01-17 23:47:16.386 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-17 23:47:16.387 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-17 23:47:16.391 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 23:47:16.391 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 23:47:16.392 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-17 23:47:16.392 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-17 23:47:16.394 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:47:16.397 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@41f3aaf1
2022-01-17 23:47:16.398 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 386b6075-02f7-48c2-a4f3-ca3659905618 (<unnamed>)
2022-01-17 23:47:16.398 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-17 23:47:16.430 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-17 23:47:16.456 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-17 23:47:16.456 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 23:47:16.469 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 23:47:16.471 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 23:47:16.475 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 13
2022-01-17 23:47:16.475 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 23:47:16.477 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 23:47:16.477 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 23:47:16.477 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 23:47:16.480 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#13], was: [<unreferenced>] (initialized)
2022-01-17 23:47:16.481 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-17 23:47:16.481 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-01-17 23:47:16.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 23:47:16.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, factures=[ma.cigma.pfe.models.facture#0, ma.cigma.pfe.models.facture#0], id=13}
2022-01-17 23:47:16.483 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.factures#13]
2022-01-17 23:47:16.486 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients_facture
        (TClients_id, factures_id) 
    values
        (?, ?)
2022-01-17 23:47:16.488 DEBUG [main][org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] [markRollbackOnly] [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:145) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.save(ClientDaoImpl.java:20) [classes/:?]
	at ma.cigma.pfe.service.ClientServiceImpl.save(ClientServiceImpl.java:14) [classes/:?]
	at ma.cigma.pfe.presentation.ClientController.save(ClientController.java:18) [classes/:?]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:33) [classes/:?]
2022-01-17 23:47:16.490 DEBUG [main][org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] [markRollbackOnly] [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)] - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) [hibernate-core-5.6.3.Final.jar:5.6.3.Final]
	at ma.cigma.pfe.dao.ClientDaoImpl.save(ClientDaoImpl.java:20) [classes/:?]
	at ma.cigma.pfe.service.ClientServiceImpl.save(ClientServiceImpl.java:14) [classes/:?]
	at ma.cigma.pfe.presentation.ClientController.save(ClientController.java:18) [classes/:?]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:33) [classes/:?]
2022-01-17 23:47:16.491 INFO [main][org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl] [release] [org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl.release(AbstractBatchImpl.java:208)] - HHH000010: On release of batch it still contained JDBC statements
2022-01-17 23:47:16.491 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 23:47:16.491 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 23:47:16.492 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [rollback] [org.hibernate.engine.transaction.internal.TransactionImpl.rollback(TransactionImpl.java:131)] - rollback() called on an inactive transaction
2022-01-17 23:59:50.905 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-17 23:59:50.964 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-17 23:59:50.982 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-17 23:59:50.989 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-17 23:59:50.990 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-17 23:59:51.012 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-17 23:59:51.067 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-17 23:59:51.067 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-17 23:59:51.068 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-17 23:59:51.071 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-17 23:59:51.074 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-17 23:59:51.075 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-17 23:59:51.077 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-17 23:59:51.101 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-17 23:59:51.102 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-17 23:59:51.196 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-17 23:59:51.208 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-17 23:59:51.208 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-17 23:59:51.221 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-17 23:59:51.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:59:51.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:59:51.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-17 23:59:51.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-17 23:59:51.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-17 23:59:51.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-17 23:59:51.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:59:51.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:59:51.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-17 23:59:51.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:59:51.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:59:51.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-17 23:59:51.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:59:51.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:59:51.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-17 23:59:51.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:59:51.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:59:51.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-17 23:59:51.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 23:59:51.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-17 23:59:51.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-17 23:59:51.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:59:51.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:59:51.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-17 23:59:51.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:59:51.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:59:51.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-17 23:59:51.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 23:59:51.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-17 23:59:51.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 23:59:51.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-17 23:59:51.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 23:59:51.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-17 23:59:51.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-17 23:59:51.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-17 23:59:51.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-17 23:59:51.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-17 23:59:51.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 23:59:51.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-17 23:59:51.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 23:59:51.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-17 23:59:51.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 23:59:51.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-17 23:59:51.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 23:59:51.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-17 23:59:51.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 23:59:51.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-17 23:59:51.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 23:59:51.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-17 23:59:51.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 23:59:51.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-17 23:59:51.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 23:59:51.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-17 23:59:51.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-17 23:59:51.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-17 23:59:51.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 23:59:51.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-17 23:59:51.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:59:51.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:59:51.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-17 23:59:51.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-17 23:59:51.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:59:51.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:59:51.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-17 23:59:51.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-17 23:59:51.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-17 23:59:51.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 23:59:51.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-17 23:59:51.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 23:59:51.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-17 23:59:51.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 23:59:51.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-17 23:59:51.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 23:59:51.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-17 23:59:51.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 23:59:51.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-17 23:59:51.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-17 23:59:51.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:59:51.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:59:51.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-17 23:59:51.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:59:51.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:59:51.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-17 23:59:51.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-17 23:59:51.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-17 23:59:51.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:59:51.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:59:51.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-17 23:59:51.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:59:51.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:59:51.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-17 23:59:51.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-17 23:59:51.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-17 23:59:51.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 23:59:51.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-17 23:59:51.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-17 23:59:51.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 23:59:51.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-17 23:59:51.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 23:59:51.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-17 23:59:51.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-17 23:59:51.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-17 23:59:51.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-17 23:59:51.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 23:59:51.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-17 23:59:51.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-17 23:59:51.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-17 23:59:51.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-17 23:59:51.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-17 23:59:51.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-17 23:59:51.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-17 23:59:51.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-17 23:59:51.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-17 23:59:51.320 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-17 23:59:51.321 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-17 23:59:51.350 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-17 23:59:51.350 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-17 23:59:51.356 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-17 23:59:51.356 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-17 23:59:51.357 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 23:59:51.357 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-17 23:59:51.357 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-17 23:59:51.358 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-17 23:59:51.358 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-17 23:59:51.359 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 23:59:51.359 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-17 23:59:51.360 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-17 23:59:51.360 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-17 23:59:51.360 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-17 23:59:51.360 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-17 23:59:51.361 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-17 23:59:51.364 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-17 23:59:51.365 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-17 23:59:51.365 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-17 23:59:51.365 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-17 23:59:51.365 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-17 23:59:51.367 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-17 23:59:51.368 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-17 23:59:51.585 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-17 23:59:51.586 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-17 23:59:51.586 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-17 23:59:51.592 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-17 23:59:51.600 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-17 23:59:51.601 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-17 23:59:51.611 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c6c6f24] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2eb917d0]
2022-01-17 23:59:51.631 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-17 23:59:51.638 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-17 23:59:51.647 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 23:59:51.650 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-17 23:59:51.653 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-17 23:59:51.665 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.667 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-17 23:59:51.667 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-17 23:59:51.667 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 23:59:51.668 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-17 23:59:51.670 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 23:59:51.671 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 23:59:51.672 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 23:59:51.673 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.673 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-17 23:59:51.673 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-17 23:59:51.673 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-17 23:59:51.673 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-17 23:59:51.673 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.674 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-17 23:59:51.674 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-17 23:59:51.674 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-17 23:59:51.674 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-17 23:59:51.677 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-17 23:59:51.677 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-17 23:59:51.678 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-17 23:59:51.678 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-17 23:59:51.680 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.681 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 23:59:51.681 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 23:59:51.681 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-17 23:59:51.681 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-17 23:59:51.681 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-17 23:59:51.682 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-17 23:59:51.682 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-17 23:59:51.683 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-17 23:59:51.683 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.684 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.689 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.689 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.690 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-17 23:59:51.690 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-17 23:59:51.691 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-17 23:59:51.691 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-17 23:59:51.692 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-17 23:59:51.693 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-17 23:59:51.693 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-17 23:59:51.693 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-17 23:59:51.693 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-17 23:59:51.693 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-17 23:59:51.694 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 23:59:51.694 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-17 23:59:51.694 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-17 23:59:51.695 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-17 23:59:51.695 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-17 23:59:51.695 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-17 23:59:51.696 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-17 23:59:51.696 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-17 23:59:51.696 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1335)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through an association table
2022-01-17 23:59:51.701 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: TClients_id, element: factures_id
2022-01-17 23:59:51.701 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-17 23:59:51.702 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-17 23:59:51.703 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-17 23:59:51.703 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-17 23:59:51.729 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-17 23:59:51.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-17 23:59:51.731 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-17 23:59:51.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-17 23:59:51.733 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-17 23:59:51.734 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-17 23:59:51.734 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-17 23:59:51.762 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:59:51.763 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:59:51.770 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-17 23:59:51.770 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@474821de, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-17 23:59:51.777 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-17 23:59:51.778 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-17 23:59:51.778 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c6c6f24] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56399b9e]
2022-01-17 23:59:51.809 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-17 23:59:51.809 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-17 23:59:51.922 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-17 23:59:51.922 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-17 23:59:51.938 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-17 23:59:51.938 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into TClients_facture (TClients_id, factures_id) values (?, ?)
2022-01-17 23:59:51.939 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update TClients_facture set factures_id=? where TClients_id=? and factures_id=?
2022-01-17 23:59:51.939 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from TClients_facture where TClients_id=? and factures_id=?
2022-01-17 23:59:51.939 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from TClients_facture where TClients_id=?
2022-01-17 23:59:51.941 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-17 23:59:51.941 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-17 23:59:51.941 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.description as descript3_0_ from facture facture_ where facture_.id=?
2022-01-17 23:59:51.941 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, description, id) values (?, ?, ?)
2022-01-17 23:59:51.942 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, description=? where id=?
2022-01-17 23:59:51.942 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-17 23:59:51.942 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, description) values (?, ?)
2022-01-17 23:59:51.953 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ea0269]
2022-01-17 23:59:51.954 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-17 23:59:51.954 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-17 23:59:51.954 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 23:59:51.960 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 23:59:51.962 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-17 23:59:51.963 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.description as descript3_0_0_ from facture facture0_ where facture0_.id=?
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34414ffc]
2022-01-17 23:59:51.964 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-17 23:59:51.967 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44dc7b7d]
2022-01-17 23:59:51.968 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31973858]
2022-01-17 23:59:51.968 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-17 23:59:51.968 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 23:59:51.968 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 23:59:51.969 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-01-17 23:59:51.969 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-01-17 23:59:51.971 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7741771e]
2022-01-17 23:59:51.971 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@834e986]
2022-01-17 23:59:51.972 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-17 23:59:51.973 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-17 23:59:51.973 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-17 23:59:51.975 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-17 23:59:51.975 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {tclients1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - facture1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-17 23:59:51.976 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.TClients_id as tclients1_2_0_, factures0_.factures_id as factures2_2_0_, facture1_.id as id1_0_1_, facture1_.amount as amount2_0_1_, facture1_.description as descript3_0_1_ from TClients_facture factures0_ inner join facture facture1_ on factures0_.factures_id=facture1_.id where factures0_.TClients_id=?
2022-01-17 23:59:52.006 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@656a3d6b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-17 23:59:52.030 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : facture
2022-01-17 23:59:52.030 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-17 23:59:52.030 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients_facture
2022-01-17 23:59:52.057 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_facture 
       add constraint FKc3iw2wvna1thlfsoec4hiuu9b 
       foreign key (factures_id) 
       references facture (id)
2022-01-17 23:59:52.076 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_facture 
       add constraint FKq6sqo4g3aj0ptoj747s6m99ts 
       foreign key (TClients_id) 
       references TClients (id)
2022-01-17 23:59:52.089 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-17 23:59:52.090 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-17 23:59:52.093 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 23:59:52.094 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-17 23:59:52.094 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-17 23:59:52.094 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-17 23:59:52.096 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-17 23:59:52.099 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a54acec
2022-01-17 23:59:52.100 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 15015fde-1e8e-446e-a074-c99335848ca6 (<unnamed>)
2022-01-17 23:59:52.100 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-17 23:59:52.130 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-17 23:59:52.155 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-17 23:59:52.155 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-17 23:59:52.167 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 23:59:52.169 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-17 23:59:52.173 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 14
2022-01-17 23:59:52.173 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 23:59:52.176 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 23:59:52.176 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, description) 
    values
        (?, ?)
2022-01-17 23:59:52.179 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-17 23:59:52.179 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 23:59:52.179 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-17 23:59:52.180 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, description) 
    values
        (?, ?)
2022-01-17 23:59:52.181 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-17 23:59:52.181 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-17 23:59:52.181 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-17 23:59:52.181 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-17 23:59:52.182 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-17 23:59:52.184 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#14], was: [<unreferenced>] (initialized)
2022-01-17 23:59:52.186 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-17 23:59:52.186 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-01-17 23:59:52.186 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-17 23:59:52.186 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=120.0, description=ismail, id=1}
2022-01-17 23:59:52.187 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=14}
2022-01-17 23:59:52.187 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=12.0, description=ismail, id=2}
2022-01-17 23:59:52.187 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.factures#14]
2022-01-17 23:59:52.190 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients_facture
        (TClients_id, factures_id) 
    values
        (?, ?)
2022-01-17 23:59:52.193 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients_facture
        (TClients_id, factures_id) 
    values
        (?, ?)
2022-01-17 23:59:52.194 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-17 23:59:52.196 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-17 23:59:52.196 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:17:54.866 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2a266d09
2022-01-19 03:17:54.945 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-19 03:17:54.967 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-19 03:17:54.976 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-19 03:17:54.976 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-19 03:17:54.998 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-19 03:17:55.066 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-19 03:17:55.066 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-19 03:17:55.067 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-19 03:17:55.071 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-19 03:17:55.074 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-19 03:17:55.075 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-19 03:17:55.079 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-19 03:17:55.109 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-19 03:17:55.110 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-19 03:17:55.227 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-19 03:17:55.239 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-19 03:17:55.239 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-19 03:17:55.252 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-19 03:17:55.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@aec50a1
2022-01-19 03:17:55.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@aec50a1
2022-01-19 03:17:55.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@aec50a1
2022-01-19 03:17:55.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a0e1b5e
2022-01-19 03:17:55.316 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7646731d
2022-01-19 03:17:55.316 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@40bffbca
2022-01-19 03:17:55.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@71e9a896
2022-01-19 03:17:55.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@71e9a896
2022-01-19 03:17:55.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@71e9a896
2022-01-19 03:17:55.318 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@fac80
2022-01-19 03:17:55.318 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@fac80
2022-01-19 03:17:55.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@fac80
2022-01-19 03:17:55.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@57f791c6
2022-01-19 03:17:55.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@57f791c6
2022-01-19 03:17:55.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57f791c6
2022-01-19 03:17:55.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@c1fca1e
2022-01-19 03:17:55.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@c1fca1e
2022-01-19 03:17:55.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c1fca1e
2022-01-19 03:17:55.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@73393584
2022-01-19 03:17:55.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@73393584
2022-01-19 03:17:55.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@73393584
2022-01-19 03:17:55.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@1c25b8a7
2022-01-19 03:17:55.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@1c25b8a7
2022-01-19 03:17:55.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c25b8a7
2022-01-19 03:17:55.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@63fd4873
2022-01-19 03:17:55.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@63fd4873
2022-01-19 03:17:55.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@63fd4873
2022-01-19 03:17:55.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fdfa676
2022-01-19 03:17:55.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fdfa676
2022-01-19 03:17:55.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@473b3b7a
2022-01-19 03:17:55.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@473b3b7a
2022-01-19 03:17:55.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@41382722
2022-01-19 03:17:55.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@41382722
2022-01-19 03:17:55.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@210386e0
2022-01-19 03:17:55.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6ce1f601
2022-01-19 03:17:55.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@372b0d86
2022-01-19 03:17:55.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@372b0d86
2022-01-19 03:17:55.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@70eecdc2
2022-01-19 03:17:55.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70eecdc2
2022-01-19 03:17:55.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@51a06cbe
2022-01-19 03:17:55.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51a06cbe
2022-01-19 03:17:55.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52c8295b
2022-01-19 03:17:55.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52c8295b
2022-01-19 03:17:55.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@22680f52
2022-01-19 03:17:55.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@22680f52
2022-01-19 03:17:55.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1fc793c2
2022-01-19 03:17:55.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1fc793c2
2022-01-19 03:17:55.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37d3d232
2022-01-19 03:17:55.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37d3d232
2022-01-19 03:17:55.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@46cf05f7
2022-01-19 03:17:55.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@46cf05f7
2022-01-19 03:17:55.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a80515c
2022-01-19 03:17:55.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a80515c
2022-01-19 03:17:55.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@2024293c
2022-01-19 03:17:55.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2024293c
2022-01-19 03:17:55.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@3c291aad
2022-01-19 03:17:55.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3c291aad
2022-01-19 03:17:55.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@2c444798
2022-01-19 03:17:55.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c444798
2022-01-19 03:17:55.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c444798
2022-01-19 03:17:55.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d157787
2022-01-19 03:17:55.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@3c8bdd5b
2022-01-19 03:17:55.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c8bdd5b
2022-01-19 03:17:55.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c8bdd5b
2022-01-19 03:17:55.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@512d92b
2022-01-19 03:17:55.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@751e664e
2022-01-19 03:17:55.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@3153ddfc
2022-01-19 03:17:55.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3153ddfc
2022-01-19 03:17:55.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@e72dba7
2022-01-19 03:17:55.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@e72dba7
2022-01-19 03:17:55.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@610db97e
2022-01-19 03:17:55.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@610db97e
2022-01-19 03:17:55.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@7bd69e82
2022-01-19 03:17:55.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bd69e82
2022-01-19 03:17:55.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5cbf9e9f
2022-01-19 03:17:55.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5cbf9e9f
2022-01-19 03:17:55.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ad394e6
2022-01-19 03:17:55.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@1bdaa23d
2022-01-19 03:17:55.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@1bdaa23d
2022-01-19 03:17:55.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@1bdaa23d
2022-01-19 03:17:55.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6754ef00
2022-01-19 03:17:55.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6754ef00
2022-01-19 03:17:55.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6754ef00
2022-01-19 03:17:55.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@24b52d3e
2022-01-19 03:17:55.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@5af5def9
2022-01-19 03:17:55.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@33aa93c
2022-01-19 03:17:55.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@33aa93c
2022-01-19 03:17:55.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@33aa93c
2022-01-19 03:17:55.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2c282004
2022-01-19 03:17:55.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2c282004
2022-01-19 03:17:55.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2c282004
2022-01-19 03:17:55.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@53bc1328
2022-01-19 03:17:55.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@78e16155
2022-01-19 03:17:55.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@622ef26a
2022-01-19 03:17:55.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@622ef26a
2022-01-19 03:17:55.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3d526ad9
2022-01-19 03:17:55.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@f325091
2022-01-19 03:17:55.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f325091
2022-01-19 03:17:55.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@eadb475
2022-01-19 03:17:55.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@eadb475
2022-01-19 03:17:55.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5cad8b7d
2022-01-19 03:17:55.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2e6ee0bc
2022-01-19 03:17:55.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@3be8821f
2022-01-19 03:17:55.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@62577d6
2022-01-19 03:17:55.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62577d6
2022-01-19 03:17:55.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a12c728
2022-01-19 03:17:55.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-19 03:17:55.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-19 03:17:55.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-19 03:17:55.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-19 03:17:55.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-19 03:17:55.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-19 03:17:55.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-19 03:17:55.372 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@38d5b107] into BootstrapContext; was [null]
2022-01-19 03:17:55.373 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6650813a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c]
2022-01-19 03:17:55.407 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-19 03:17:55.408 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-19 03:17:55.416 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-19 03:17:55.417 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-19 03:17:55.417 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:17:55.417 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:17:55.418 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-19 03:17:55.418 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-19 03:17:55.419 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-19 03:17:55.419 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:17:55.420 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-19 03:17:55.420 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-19 03:17:55.421 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-19 03:17:55.421 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-19 03:17:55.421 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:17:55.422 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-19 03:17:55.425 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-19 03:17:55.426 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-19 03:17:55.426 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-19 03:17:55.426 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-19 03:17:55.426 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-19 03:17:55.428 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-19 03:17:55.428 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-19 03:17:55.770 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-19 03:17:55.770 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-19 03:17:55.770 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-19 03:17:55.778 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-19 03:17:55.787 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-19 03:17:55.787 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-19 03:17:55.799 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c5c616f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c6c6f24]
2022-01-19 03:17:55.826 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-19 03:17:55.839 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-19 03:17:55.848 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:17:55.851 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-19 03:17:55.855 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-19 03:17:55.867 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.868 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:17:55.869 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:17:55.869 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:17:55.870 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-19 03:17:55.871 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:17:55.873 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:17:55.874 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:17:55.875 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.875 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-19 03:17:55.875 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-19 03:17:55.875 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-19 03:17:55.875 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-19 03:17:55.876 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-19 03:17:55.876 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.878 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-19 03:17:55.878 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.879 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-19 03:17:55.879 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-19 03:17:55.879 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-19 03:17:55.879 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-19 03:17:55.882 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-19 03:17:55.882 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:17:55.882 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-19 03:17:55.882 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-19 03:17:55.885 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.885 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:17:55.885 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:17:55.885 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:17:55.885 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-19 03:17:55.886 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:17:55.886 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:17:55.886 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:17:55.886 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:17:55.886 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.887 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.891 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.892 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.892 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-19 03:17:55.893 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:17:55.893 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:17:55.893 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-19 03:17:55.894 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-19 03:17:55.894 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-19 03:17:55.894 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-19 03:17:55.894 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-19 03:17:55.895 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-19 03:17:55.895 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-19 03:17:55.896 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:17:55.896 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-19 03:17:55.896 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-19 03:17:55.896 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:17:55.896 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-19 03:17:55.898 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-19 03:17:55.898 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-19 03:17:55.899 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:17:55.899 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-19 03:17:55.899 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-19 03:17:55.900 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-19 03:17:55.900 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-19 03:17:55.900 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:17:55.902 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:17:55.924 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-19 03:17:55.925 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-19 03:17:55.925 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-19 03:17:55.925 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-19 03:17:55.925 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-19 03:17:55.925 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-19 03:17:55.925 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-19 03:17:55.926 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-19 03:17:55.927 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-19 03:17:55.928 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-19 03:17:55.929 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-19 03:17:55.929 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-19 03:17:55.957 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:17:55.957 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:17:55.965 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-19 03:17:55.965 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@427ae189, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-19 03:17:55.972 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-19 03:17:55.973 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-19 03:17:55.973 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c5c616f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f0cab0a]
2022-01-19 03:17:56.010 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:17:56.011 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:17:56.011 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:17:56.011 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:17:56.123 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:17:56.123 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:17:56.126 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:17:56.126 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:17:56.141 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:17:56.141 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-19 03:17:56.141 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-19 03:17:56.141 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-19 03:17:56.141 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-19 03:17:56.144 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-19 03:17:56.144 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-19 03:17:56.144 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.client_id as client_i4_0_, facture_.description as descript3_0_ from facture facture_ where facture_.id=?
2022-01-19 03:17:56.144 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-19 03:17:56.144 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-19 03:17:56.144 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-19 03:17:56.145 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-19 03:17:56.157 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f557c37]
2022-01-19 03:17:56.158 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:17:56.158 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:17:56.160 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1235151c]
2022-01-19 03:17:56.161 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-19 03:17:56.161 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-19 03:17:56.161 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-19 03:17:56.161 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:17:56.162 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:17:56.167 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:17:56.169 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-19 03:17:56.170 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.client_id as client_i4_0_0_, facture0_.description as descript3_0_0_, client1_.id as id1_1_1_, client1_.name as name2_1_1_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id where facture0_.id=?
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-19 03:17:56.171 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e29f4f6]
2022-01-19 03:17:56.172 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-19 03:17:56.172 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cdc7b09]
2022-01-19 03:17:56.173 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c1050f2]
2022-01-19 03:17:56.173 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-19 03:17:56.173 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:17:56.173 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:17:56.174 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-01-19 03:17:56.174 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-01-19 03:17:56.176 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35d60381]
2022-01-19 03:17:56.176 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ab6ab0]
2022-01-19 03:17:56.176 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:17:56.177 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:17:56.177 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-19 03:17:56.177 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:17:56.177 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:17:56.178 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:17:56.179 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-19 03:17:56.179 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_0_0_, factures0_.id as id1_0_0_, factures0_.id as id1_0_1_, factures0_.amount as amount2_0_1_, factures0_.client_id as client_i4_0_1_, factures0_.description as descript3_0_1_ from facture factures0_ where factures0_.client_id=?
2022-01-19 03:17:56.210 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@45292ec1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-19 03:17:56.261 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add column client_id bigint
2022-01-19 03:17:56.301 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:497)] - No alter strings for table : TClients
2022-01-19 03:17:56.311 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-19 03:17:56.331 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-19 03:17:56.332 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-19 03:17:56.335 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:17:56.335 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:17:56.335 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-19 03:17:56.336 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-19 03:17:56.338 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:17:56.341 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@498a612d
2022-01-19 03:17:56.342 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: a8336600-029a-4f8d-9780-08a48bb6ea29 (<unnamed>)
2022-01-19 03:17:56.342 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-19 03:17:56.372 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-19 03:17:56.400 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-19 03:17:56.400 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-19 03:17:56.413 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:17:56.415 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-19 03:17:56.426 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 15
2022-01-19 03:17:56.426 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:17:56.428 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:17:56.428 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-19 03:17:56.430 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-19 03:17:56.430 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:17:56.430 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:17:56.431 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-19 03:17:56.432 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-19 03:17:56.432 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:17:56.432 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-19 03:17:56.433 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-19 03:17:56.434 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-19 03:17:56.436 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#15], was: [<unreferenced>] (initialized)
2022-01-19 03:17:56.438 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-19 03:17:56.438 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-01-19 03:17:56.438 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-19 03:17:56.438 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, factures=[ma.cigma.pfe.models.facture#3, ma.cigma.pfe.models.facture#4], id=15}
2022-01-19 03:17:56.439 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=120.0, client=ma.cigma.pfe.models.Client#15, description=ismail, id=3}
2022-01-19 03:17:56.439 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=12.0, client=ma.cigma.pfe.models.Client#15, description=ismail, id=4}
2022-01-19 03:17:56.441 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:17:56.442 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:19:22.941 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-19 03:19:23.014 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-19 03:19:23.033 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-19 03:19:23.040 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-19 03:19:23.040 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-19 03:19:23.061 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-19 03:19:23.112 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-19 03:19:23.112 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-19 03:19:23.113 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-19 03:19:23.116 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-19 03:19:23.119 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-19 03:19:23.120 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-19 03:19:23.122 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-19 03:19:23.148 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-19 03:19:23.149 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-19 03:19:23.253 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-19 03:19:23.264 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-19 03:19:23.265 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-19 03:19:23.277 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-19 03:19:23.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:19:23.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:19:23.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:19:23.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-19 03:19:23.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-19 03:19:23.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-19 03:19:23.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:19:23.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:19:23.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:19:23.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:19:23.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:19:23.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:19:23.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:19:23.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:19:23.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:19:23.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:19:23.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:19:23.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:19:23.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-19 03:19:23.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-19 03:19:23.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-19 03:19:23.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:19:23.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:19:23.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:19:23.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:19:23.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:19:23.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:19:23.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-19 03:19:23.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-19 03:19:23.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-19 03:19:23.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-19 03:19:23.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-19 03:19:23.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-19 03:19:23.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-19 03:19:23.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-19 03:19:23.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-19 03:19:23.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-19 03:19:23.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-19 03:19:23.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-19 03:19:23.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-19 03:19:23.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-19 03:19:23.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-19 03:19:23.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-19 03:19:23.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-19 03:19:23.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-19 03:19:23.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-19 03:19:23.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-19 03:19:23.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-19 03:19:23.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-19 03:19:23.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-19 03:19:23.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-19 03:19:23.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-19 03:19:23.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-19 03:19:23.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-19 03:19:23.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-19 03:19:23.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-19 03:19:23.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-19 03:19:23.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:19:23.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:19:23.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:19:23.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-19 03:19:23.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:19:23.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:19:23.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:19:23.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-19 03:19:23.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-19 03:19:23.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-19 03:19:23.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-19 03:19:23.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-19 03:19:23.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-19 03:19:23.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-19 03:19:23.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-19 03:19:23.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-19 03:19:23.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-19 03:19:23.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-19 03:19:23.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-19 03:19:23.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-19 03:19:23.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:19:23.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:19:23.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:19:23.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:19:23.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:19:23.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:19:23.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-19 03:19:23.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-19 03:19:23.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:19:23.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:19:23.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:19:23.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:19:23.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:19:23.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:19:23.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-19 03:19:23.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-19 03:19:23.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-19 03:19:23.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-19 03:19:23.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-19 03:19:23.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-19 03:19:23.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-19 03:19:23.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-19 03:19:23.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-19 03:19:23.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-19 03:19:23.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-19 03:19:23.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-19 03:19:23.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-19 03:19:23.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-19 03:19:23.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-19 03:19:23.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-19 03:19:23.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-19 03:19:23.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-19 03:19:23.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-19 03:19:23.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-19 03:19:23.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-19 03:19:23.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-19 03:19:23.375 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-19 03:19:23.376 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-19 03:19:23.409 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-19 03:19:23.409 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-19 03:19:23.415 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-19 03:19:23.416 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-19 03:19:23.417 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:19:23.417 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:19:23.417 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-19 03:19:23.418 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-19 03:19:23.418 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-19 03:19:23.419 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:19:23.419 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-19 03:19:23.420 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-19 03:19:23.420 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-19 03:19:23.421 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-19 03:19:23.421 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:19:23.421 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-19 03:19:23.424 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-19 03:19:23.425 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-19 03:19:23.425 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-19 03:19:23.425 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-19 03:19:23.426 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-19 03:19:23.428 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-19 03:19:23.428 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-19 03:19:23.655 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-19 03:19:23.655 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-19 03:19:23.655 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-19 03:19:23.662 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-19 03:19:23.670 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-19 03:19:23.671 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-19 03:19:23.681 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c6c6f24] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2eb917d0]
2022-01-19 03:19:23.702 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-19 03:19:23.709 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-19 03:19:23.718 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:19:23.721 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-19 03:19:23.724 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-19 03:19:23.739 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.745 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:19:23.745 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:19:23.746 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:19:23.747 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-19 03:19:23.748 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:19:23.749 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:19:23.751 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:19:23.751 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.751 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-19 03:19:23.752 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-19 03:19:23.752 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-19 03:19:23.752 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-19 03:19:23.753 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-19 03:19:23.753 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.755 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-19 03:19:23.755 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.756 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-19 03:19:23.756 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-19 03:19:23.756 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-19 03:19:23.756 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-19 03:19:23.759 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-19 03:19:23.759 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:19:23.759 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-19 03:19:23.759 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-19 03:19:23.762 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.762 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:19:23.762 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:19:23.762 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:19:23.763 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-19 03:19:23.763 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:19:23.763 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:19:23.763 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:19:23.763 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:19:23.763 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.764 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.769 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.770 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.770 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-19 03:19:23.771 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:19:23.771 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:19:23.771 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-19 03:19:23.773 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-19 03:19:23.773 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-19 03:19:23.773 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-19 03:19:23.773 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-19 03:19:23.773 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-19 03:19:23.774 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-19 03:19:23.775 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:19:23.775 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-19 03:19:23.775 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-19 03:19:23.775 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:19:23.775 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-19 03:19:23.777 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-19 03:19:23.777 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-19 03:19:23.778 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:19:23.778 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-19 03:19:23.778 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-19 03:19:23.779 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-19 03:19:23.779 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-19 03:19:23.779 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:19:23.781 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:19:23.801 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-19 03:19:23.802 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-19 03:19:23.802 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-19 03:19:23.802 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-19 03:19:23.802 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-19 03:19:23.802 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-19 03:19:23.803 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-19 03:19:23.804 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-19 03:19:23.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-19 03:19:23.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-19 03:19:23.806 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-19 03:19:23.832 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:19:23.833 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:19:23.840 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-19 03:19:23.840 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@16a9eb2e, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-19 03:19:23.846 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-19 03:19:23.847 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-19 03:19:23.847 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c6c6f24] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@fe7b6b0]
2022-01-19 03:19:23.876 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:19:23.877 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:19:23.877 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:19:23.877 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:19:23.978 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:19:23.979 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:19:23.982 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:19:23.982 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:19:23.997 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:19:23.997 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-19 03:19:23.997 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-19 03:19:23.998 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-19 03:19:23.998 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-19 03:19:24.000 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-19 03:19:24.001 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-19 03:19:24.001 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.client_id as client_i4_0_, facture_.description as descript3_0_ from facture facture_ where facture_.id=?
2022-01-19 03:19:24.001 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-19 03:19:24.001 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-19 03:19:24.001 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-19 03:19:24.001 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-19 03:19:24.014 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a01d7f0]
2022-01-19 03:19:24.015 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:19:24.015 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:19:24.018 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a1f778]
2022-01-19 03:19:24.018 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-19 03:19:24.019 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-19 03:19:24.019 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-19 03:19:24.019 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:19:24.019 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:19:24.026 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:19:24.028 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-19 03:19:24.030 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.client_id as client_i4_0_0_, facture0_.description as descript3_0_0_, client1_.id as id1_1_1_, client1_.name as name2_1_1_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id where facture0_.id=?
2022-01-19 03:19:24.030 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-19 03:19:24.030 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-19 03:19:24.030 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_1_ from TClients client_ where client_.id=?
2022-01-19 03:19:24.030 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-19 03:19:24.030 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-19 03:19:24.030 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-19 03:19:24.031 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-19 03:19:24.031 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41b64020]
2022-01-19 03:19:24.031 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-19 03:19:24.031 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7364eed1]
2022-01-19 03:19:24.032 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67bb4dcd]
2022-01-19 03:19:24.033 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-19 03:19:24.033 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:19:24.033 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:19:24.033 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-01-19 03:19:24.033 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_1_0_, client0_.name as name2_1_0_ from TClients client0_ where client0_.id=?
2022-01-19 03:19:24.036 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68ab6ab0]
2022-01-19 03:19:24.036 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ffd148]
2022-01-19 03:19:24.036 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:19:24.037 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:19:24.037 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-19 03:19:24.037 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:19:24.037 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:19:24.039 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:19:24.039 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-19 03:19:24.040 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_0_0_, factures0_.id as id1_0_0_, factures0_.id as id1_0_1_, factures0_.amount as amount2_0_1_, factures0_.client_id as client_i4_0_1_, factures0_.description as descript3_0_1_ from facture factures0_ where factures0_.client_id=?
2022-01-19 03:19:24.065 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-19 03:19:24.067 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7d0100ea] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-19 03:19:24.091 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-19 03:19:24.097 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:19:24.098 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@420a8042] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-19 03:19:24.105 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:19:24.110 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-19 03:19:24.128 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-19 03:19:24.129 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-19 03:19:24.132 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:19:24.132 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:19:24.132 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-19 03:19:24.133 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-19 03:19:24.135 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:19:24.139 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a1ccaaf
2022-01-19 03:19:24.139 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 3dcb01ba-d61d-433d-8b25-c707b830d36f (<unnamed>)
2022-01-19 03:19:24.140 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-19 03:19:24.172 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-19 03:19:24.199 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-19 03:19:24.199 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-19 03:19:24.212 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:19:24.214 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-19 03:19:24.228 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-19 03:19:24.228 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:19:24.231 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:19:24.231 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-19 03:19:24.233 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-19 03:19:24.233 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:19:24.234 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:19:24.234 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-19 03:19:24.235 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-19 03:19:24.236 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:19:24.236 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-19 03:19:24.236 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-19 03:19:24.237 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-19 03:19:24.240 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#1], was: [<unreferenced>] (initialized)
2022-01-19 03:19:24.242 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-19 03:19:24.242 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-01-19 03:19:24.242 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-19 03:19:24.243 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=120.0, client=ma.cigma.pfe.models.Client#1, description=ismail, id=1}
2022-01-19 03:19:24.243 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=12.0, client=ma.cigma.pfe.models.Client#1, description=ismail, id=2}
2022-01-19 03:19:24.243 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{name=OMAR, factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=1}
2022-01-19 03:19:24.245 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:19:24.246 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:31:31.479 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-19 03:31:31.537 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-19 03:31:31.556 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-19 03:31:31.563 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-19 03:31:31.564 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-19 03:31:31.586 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-19 03:31:31.640 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-19 03:31:31.641 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-19 03:31:31.641 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-19 03:31:31.644 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-19 03:31:31.647 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-19 03:31:31.649 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-19 03:31:31.652 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-19 03:31:31.677 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-19 03:31:31.678 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-19 03:31:31.771 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-19 03:31:31.782 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-19 03:31:31.783 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-19 03:31:31.795 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-19 03:31:31.839 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:31:31.839 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:31:31.839 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:31:31.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-19 03:31:31.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-19 03:31:31.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-19 03:31:31.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:31:31.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:31:31.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:31:31.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:31:31.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:31:31.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:31:31.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:31:31.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:31:31.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:31:31.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:31:31.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:31:31.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:31:31.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-19 03:31:31.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-19 03:31:31.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-19 03:31:31.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:31:31.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:31:31.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:31:31.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:31:31.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:31:31.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:31:31.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-19 03:31:31.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-19 03:31:31.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-19 03:31:31.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-19 03:31:31.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-19 03:31:31.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-19 03:31:31.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-19 03:31:31.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-19 03:31:31.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-19 03:31:31.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-19 03:31:31.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-19 03:31:31.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-19 03:31:31.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-19 03:31:31.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-19 03:31:31.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-19 03:31:31.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-19 03:31:31.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-19 03:31:31.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-19 03:31:31.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-19 03:31:31.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-19 03:31:31.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-19 03:31:31.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-19 03:31:31.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-19 03:31:31.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-19 03:31:31.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-19 03:31:31.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-19 03:31:31.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-19 03:31:31.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-19 03:31:31.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-19 03:31:31.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-19 03:31:31.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:31:31.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:31:31.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:31:31.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-19 03:31:31.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:31:31.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:31:31.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:31:31.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-19 03:31:31.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-19 03:31:31.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-19 03:31:31.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-19 03:31:31.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-19 03:31:31.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-19 03:31:31.869 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-19 03:31:31.869 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-19 03:31:31.869 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-19 03:31:31.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-19 03:31:31.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-19 03:31:31.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-19 03:31:31.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-19 03:31:31.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:31:31.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:31:31.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:31:31.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:31:31.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:31:31.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:31:31.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-19 03:31:31.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-19 03:31:31.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:31:31.874 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:31:31.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:31:31.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:31:31.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:31:31.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:31:31.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-19 03:31:31.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-19 03:31:31.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-19 03:31:31.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-19 03:31:31.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-19 03:31:31.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-19 03:31:31.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-19 03:31:31.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-19 03:31:31.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-19 03:31:31.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-19 03:31:31.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-19 03:31:31.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-19 03:31:31.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-19 03:31:31.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-19 03:31:31.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-19 03:31:31.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-19 03:31:31.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-19 03:31:31.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-19 03:31:31.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-19 03:31:31.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-19 03:31:31.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-19 03:31:31.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-19 03:31:31.891 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-19 03:31:31.891 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-19 03:31:31.920 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-19 03:31:31.920 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-19 03:31:31.926 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-19 03:31:31.927 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-19 03:31:31.927 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:31:31.927 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:31:31.928 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-19 03:31:31.928 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-19 03:31:31.928 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-19 03:31:31.929 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:31:31.929 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-19 03:31:31.930 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-19 03:31:31.930 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-19 03:31:31.930 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-19 03:31:31.931 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:31:31.931 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-19 03:31:31.934 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-19 03:31:31.934 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-19 03:31:31.934 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-19 03:31:31.935 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-19 03:31:31.935 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-19 03:31:31.936 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-19 03:31:31.936 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-19 03:31:32.154 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-19 03:31:32.155 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-19 03:31:32.155 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-19 03:31:32.161 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-19 03:31:32.169 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-19 03:31:32.169 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-19 03:31:32.180 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73437222] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@ca93621]
2022-01-19 03:31:32.204 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-19 03:31:32.211 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-19 03:31:32.220 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:31:32.222 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-19 03:31:32.226 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-19 03:31:32.236 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.237 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-19 03:31:32.238 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-19 03:31:32.238 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:31:32.239 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-19 03:31:32.240 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:31:32.242 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:31:32.243 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:31:32.243 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.244 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-19 03:31:32.244 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-19 03:31:32.244 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-19 03:31:32.244 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-19 03:31:32.247 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-19 03:31:32.247 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:31:32.247 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-19 03:31:32.248 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-19 03:31:32.250 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.250 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:31:32.251 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:31:32.251 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:31:32.251 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-19 03:31:32.251 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:31:32.251 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:31:32.251 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:31:32.251 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.252 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-19 03:31:32.252 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-19 03:31:32.252 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-19 03:31:32.252 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-19 03:31:32.253 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-19 03:31:32.253 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.254 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-19 03:31:32.255 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.255 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-19 03:31:32.256 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-19 03:31:32.256 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-19 03:31:32.256 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-19 03:31:32.256 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-19 03:31:32.256 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:31:32.256 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-19 03:31:32.257 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-19 03:31:32.260 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.260 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:31:32.260 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:31:32.260 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:31:32.260 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-19 03:31:32.260 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:31:32.260 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:31:32.261 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:31:32.261 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:31:32.261 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.262 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.266 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.266 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.267 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-19 03:31:32.267 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:31:32.267 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:31:32.268 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-19 03:31:32.268 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-19 03:31:32.269 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.269 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-19 03:31:32.269 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-19 03:31:32.269 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-19 03:31:32.269 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-19 03:31:32.269 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.270 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.270 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-19 03:31:32.270 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-19 03:31:32.270 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-19 03:31:32.270 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-19 03:31:32.270 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:31:32.270 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-19 03:31:32.271 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:31:32.271 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-19 03:31:32.272 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:31:32.272 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-19 03:31:32.272 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-19 03:31:32.272 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:31:32.272 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-19 03:31:32.274 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-19 03:31:32.274 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-19 03:31:32.274 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-19 03:31:32.274 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:31:32.274 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:31:32.277 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: TClients_id, element: promotions_id
2022-01-19 03:31:32.278 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:31:32.278 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-19 03:31:32.278 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-19 03:31:32.279 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-19 03:31:32.279 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-19 03:31:32.279 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:31:32.280 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-19 03:31:32.280 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:31:32.281 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:31:32.281 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-19 03:31:32.281 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:31:32.300 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-19 03:31:32.301 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-19 03:31:32.301 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-19 03:31:32.301 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-19 03:31:32.301 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-19 03:31:32.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-19 03:31:32.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-19 03:31:32.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-19 03:31:32.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-19 03:31:32.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-19 03:31:32.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-19 03:31:32.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-19 03:31:32.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-19 03:31:32.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-19 03:31:32.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-19 03:31:32.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-19 03:31:32.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-19 03:31:32.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-19 03:31:32.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-19 03:31:32.332 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:31:32.333 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:31:32.339 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-19 03:31:32.339 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5e1dde44, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-19 03:31:32.349 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-19 03:31:32.350 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-19 03:31:32.351 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73437222] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@79b2852b]
2022-01-19 03:31:32.378 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-19 03:31:32.378 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-19 03:31:32.472 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:31:32.473 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:31:32.473 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:31:32.473 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:31:32.481 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:31:32.481 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:31:32.482 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:31:32.483 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:31:32.499 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:31:32.499 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into TClients_Promotion (TClients_id, promotions_id) values (?, ?)
2022-01-19 03:31:32.500 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update TClients_Promotion set promotions_id=? where TClients_id=? and promotions_id=?
2022-01-19 03:31:32.500 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from TClients_Promotion where TClients_id=? and promotions_id=?
2022-01-19 03:31:32.500 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from TClients_Promotion where TClients_id=?
2022-01-19 03:31:32.501 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:31:32.501 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-19 03:31:32.501 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-19 03:31:32.501 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-19 03:31:32.501 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-19 03:31:32.503 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-19 03:31:32.503 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-19 03:31:32.503 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_1_ from Promotion promotion_ where promotion_.id=?
2022-01-19 03:31:32.503 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-19 03:31:32.504 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-19 03:31:32.504 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-19 03:31:32.504 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-19 03:31:32.515 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1946384]
2022-01-19 03:31:32.515 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:31:32.516 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:31:32.521 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:31:32.523 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_1_0_, promotion0_.description as descript2_1_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.client_id as client_i4_0_, facture_.description as descript3_0_ from facture facture_ where facture_.id=?
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-19 03:31:32.524 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7741771e]
2022-01-19 03:31:32.525 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:31:32.525 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:31:32.527 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7698b7a4]
2022-01-19 03:31:32.527 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-19 03:31:32.528 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-19 03:31:32.528 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-19 03:31:32.528 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-19 03:31:32.528 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38f981b6]
2022-01-19 03:31:32.529 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67f63d26]
2022-01-19 03:31:32.529 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:31:32.529 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:31:32.529 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:31:32.530 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

2022-01-19 03:31:32.530 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.client_id as client_i4_0_0_, facture0_.description as descript3_0_0_, client1_.id as id1_2_1_, client1_.name as name2_2_1_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id where facture0_.id=?
2022-01-19 03:31:32.530 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_2_ from TClients client_ where client_.id=?
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60cb1ed6]
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4538856f]
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c3de38e]
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-19 03:31:32.531 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-19 03:31:32.532 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74b86971]
2022-01-19 03:31:32.532 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f9d4b0e]
2022-01-19 03:31:32.532 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:31:32.532 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:31:32.532 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2022-01-19 03:31:32.532 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_2_0_, client0_.name as name2_2_0_ from TClients client0_ where client0_.id=?
2022-01-19 03:31:32.534 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e1232cf]
2022-01-19 03:31:32.535 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6efa4f]
2022-01-19 03:31:32.535 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:31:32.535 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:31:32.537 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:31:32.537 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {tclients1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-19 03:31:32.537 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.TClients_id as tclients1_3_0_, promotions0_.promotions_id as promotio2_3_0_, promotion1_.id as id1_1_1_, promotion1_.description as descript2_1_1_ from TClients_Promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotions_id=promotion1_.id where promotions0_.TClients_id=?
2022-01-19 03:31:32.537 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b73bd6b]
2022-01-19 03:31:32.538 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@157d3a45]
2022-01-19 03:31:32.538 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:31:32.538 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:31:32.538 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-19 03:31:32.538 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:31:32.538 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:31:32.538 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:31:32.539 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-19 03:31:32.539 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_0_0_, factures0_.id as id1_0_0_, factures0_.id as id1_0_1_, factures0_.amount as amount2_0_1_, factures0_.client_id as client_i4_0_1_, factures0_.description as descript3_0_1_ from facture factures0_ where factures0_.client_id=?
2022-01-19 03:31:32.563 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-19 03:31:32.564 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@31723307] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-19 03:31:32.587 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-19 03:31:32.595 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-19 03:31:32.599 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients_Promotion
2022-01-19 03:31:32.603 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:31:32.603 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@36c7cbe1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-19 03:31:32.609 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:31:32.613 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:31:32.618 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients_Promotion (
       TClients_id bigint not null,
        promotions_id bigint not null
    ) engine=MyISAM
2022-01-19 03:31:32.622 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-19 03:31:32.639 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_Promotion 
       add constraint FKa6xuvbsyx8sa8dppq200yic1s 
       foreign key (promotions_id) 
       references Promotion (id)
2022-01-19 03:31:32.654 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table TClients_Promotion 
       add constraint FKn1jwpbu0ktebb3gb7gglx6m64 
       foreign key (TClients_id) 
       references TClients (id)
2022-01-19 03:31:32.670 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-19 03:31:32.670 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-19 03:31:32.673 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:31:32.673 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:31:32.674 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-19 03:31:32.674 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-19 03:31:32.676 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:31:32.679 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5f025000
2022-01-19 03:31:32.680 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: d0daac24-7fff-4312-a86f-2835a0c059bf (<unnamed>)
2022-01-19 03:31:32.680 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-19 03:31:32.708 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-19 03:31:32.733 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-19 03:31:32.734 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-19 03:31:32.746 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:31:32.747 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-19 03:31:32.758 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-19 03:31:32.759 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:31:32.761 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:31:32.761 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-19 03:31:32.764 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-19 03:31:32.764 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:31:32.764 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:31:32.764 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-19 03:31:32.766 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-19 03:31:32.766 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:31:32.766 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-19 03:31:32.766 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-19 03:31:32.767 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-19 03:31:32.769 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#1], was: [<unreferenced>] (initialized)
2022-01-19 03:31:32.770 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-19 03:31:32.771 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-01-19 03:31:32.771 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-19 03:31:32.771 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-19 03:31:32.771 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-19 03:31:32.771 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, factures=null, id=1}
2022-01-19 03:31:32.772 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#1]
2022-01-19 03:31:32.775 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients_Promotion
        (TClients_id, promotions_id) 
    values
        (?, ?)
2022-01-19 03:31:32.777 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients_Promotion
        (TClients_id, promotions_id) 
    values
        (?, ?)
2022-01-19 03:31:32.778 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-19 03:31:32.780 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:31:32.781 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:34:43.644 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-19 03:34:43.699 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-19 03:34:43.718 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-19 03:34:43.725 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-19 03:34:43.726 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-19 03:34:43.747 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-19 03:34:43.797 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-19 03:34:43.797 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-19 03:34:43.798 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-19 03:34:43.801 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-19 03:34:43.803 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-19 03:34:43.804 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-19 03:34:43.807 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-19 03:34:43.829 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-19 03:34:43.829 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-19 03:34:43.923 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-19 03:34:43.933 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-19 03:34:43.934 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-19 03:34:43.947 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-19 03:34:43.989 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:34:43.989 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:34:43.989 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-19 03:34:43.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-19 03:34:43.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-19 03:34:43.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-19 03:34:43.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:34:43.992 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:34:43.992 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-19 03:34:43.992 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:34:43.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:34:43.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-19 03:34:43.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:34:43.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:34:43.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-19 03:34:43.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:34:43.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:34:43.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-19 03:34:43.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-19 03:34:43.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-19 03:34:43.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-19 03:34:43.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:34:43.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:34:43.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-19 03:34:43.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:34:43.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:34:43.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-19 03:34:43.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-19 03:34:43.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-19 03:34:43.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-19 03:34:43.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-19 03:34:44.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-19 03:34:44.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-19 03:34:44.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-19 03:34:44.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-19 03:34:44.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-19 03:34:44.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-19 03:34:44.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-19 03:34:44.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-19 03:34:44.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-19 03:34:44.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-19 03:34:44.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-19 03:34:44.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-19 03:34:44.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-19 03:34:44.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-19 03:34:44.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-19 03:34:44.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-19 03:34:44.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-19 03:34:44.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-19 03:34:44.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-19 03:34:44.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-19 03:34:44.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-19 03:34:44.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-19 03:34:44.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-19 03:34:44.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-19 03:34:44.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-19 03:34:44.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-19 03:34:44.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:34:44.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:34:44.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-19 03:34:44.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-19 03:34:44.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:34:44.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:34:44.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-19 03:34:44.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-19 03:34:44.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-19 03:34:44.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-19 03:34:44.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-19 03:34:44.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-19 03:34:44.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-19 03:34:44.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-19 03:34:44.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-19 03:34:44.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-19 03:34:44.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-19 03:34:44.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-19 03:34:44.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-19 03:34:44.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-19 03:34:44.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:34:44.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:34:44.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-19 03:34:44.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:34:44.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:34:44.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-19 03:34:44.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-19 03:34:44.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-19 03:34:44.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:34:44.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:34:44.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-19 03:34:44.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:34:44.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:34:44.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-19 03:34:44.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-19 03:34:44.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-19 03:34:44.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-19 03:34:44.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-19 03:34:44.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-19 03:34:44.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-19 03:34:44.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-19 03:34:44.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-19 03:34:44.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-19 03:34:44.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-19 03:34:44.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-19 03:34:44.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-19 03:34:44.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-19 03:34:44.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-19 03:34:44.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-19 03:34:44.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-19 03:34:44.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-19 03:34:44.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-19 03:34:44.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-19 03:34:44.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-19 03:34:44.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-19 03:34:44.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-19 03:34:44.040 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-19 03:34:44.040 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-19 03:34:44.074 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-19 03:34:44.074 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-19 03:34:44.080 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-19 03:34:44.081 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-19 03:34:44.081 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:34:44.081 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-19 03:34:44.081 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-19 03:34:44.082 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-19 03:34:44.082 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-19 03:34:44.083 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:34:44.083 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-19 03:34:44.084 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-19 03:34:44.084 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-19 03:34:44.084 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-19 03:34:44.084 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-19 03:34:44.085 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-19 03:34:44.087 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-19 03:34:44.088 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-19 03:34:44.088 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-19 03:34:44.089 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-19 03:34:44.089 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-19 03:34:44.090 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-19 03:34:44.091 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-19 03:34:44.308 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-19 03:34:44.308 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-19 03:34:44.308 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-19 03:34:44.315 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-19 03:34:44.323 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-19 03:34:44.324 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-19 03:34:44.335 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a48a7f3]
2022-01-19 03:34:44.358 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-19 03:34:44.365 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-19 03:34:44.374 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:34:44.378 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-19 03:34:44.381 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-19 03:34:44.392 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.394 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-19 03:34:44.394 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-19 03:34:44.394 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:34:44.396 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-19 03:34:44.397 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:34:44.398 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:34:44.399 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:34:44.400 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.400 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-19 03:34:44.400 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-19 03:34:44.400 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-19 03:34:44.400 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-19 03:34:44.404 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-19 03:34:44.404 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:34:44.404 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-19 03:34:44.404 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-19 03:34:44.407 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.407 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:34:44.407 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:34:44.407 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:34:44.407 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-19 03:34:44.407 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:34:44.407 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:34:44.408 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:34:44.408 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.408 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-19 03:34:44.408 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-19 03:34:44.408 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-19 03:34:44.408 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-19 03:34:44.409 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-19 03:34:44.409 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.411 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-19 03:34:44.412 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.412 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-19 03:34:44.412 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-19 03:34:44.412 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-19 03:34:44.412 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-19 03:34:44.413 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-19 03:34:44.413 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-19 03:34:44.413 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-19 03:34:44.413 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-19 03:34:44.417 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.417 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:34:44.418 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:34:44.418 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-19 03:34:44.418 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-19 03:34:44.418 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-19 03:34:44.418 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-19 03:34:44.418 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-19 03:34:44.418 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:34:44.419 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.420 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.424 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.424 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.425 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-19 03:34:44.425 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:34:44.425 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-19 03:34:44.426 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-19 03:34:44.427 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-19 03:34:44.427 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.427 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-19 03:34:44.427 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-19 03:34:44.427 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-19 03:34:44.428 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-19 03:34:44.428 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.428 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.428 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-19 03:34:44.428 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-19 03:34:44.428 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-19 03:34:44.428 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-19 03:34:44.429 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:34:44.429 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-19 03:34:44.430 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:34:44.430 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-19 03:34:44.430 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:34:44.430 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-19 03:34:44.430 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-19 03:34:44.431 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-19 03:34:44.431 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-19 03:34:44.433 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-19 03:34:44.433 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-19 03:34:44.433 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-19 03:34:44.433 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:34:44.433 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:34:44.435 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-19 03:34:44.435 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:34:44.435 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-19 03:34:44.436 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-19 03:34:44.436 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-19 03:34:44.436 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-19 03:34:44.436 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:34:44.437 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-19 03:34:44.437 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:34:44.438 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:34:44.438 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-19 03:34:44.439 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-19 03:34:44.458 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-19 03:34:44.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-19 03:34:44.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-19 03:34:44.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-19 03:34:44.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-19 03:34:44.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-19 03:34:44.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-19 03:34:44.460 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-19 03:34:44.461 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-19 03:34:44.462 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-19 03:34:44.489 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:34:44.490 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:34:44.497 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-19 03:34:44.497 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@47d023b7, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-19 03:34:44.508 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-19 03:34:44.509 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-19 03:34:44.509 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@53a7a60c]
2022-01-19 03:34:44.537 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-19 03:34:44.537 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-19 03:34:44.631 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:34:44.632 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:34:44.633 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-19 03:34:44.633 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-19 03:34:44.641 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:34:44.641 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-19 03:34:44.643 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-19 03:34:44.643 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-19 03:34:44.660 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-19 03:34:44.660 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-19 03:34:44.660 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-19 03:34:44.660 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-19 03:34:44.661 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-19 03:34:44.661 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-19 03:34:44.662 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-19 03:34:44.662 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-19 03:34:44.662 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-19 03:34:44.662 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-19 03:34:44.664 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-19 03:34:44.664 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-19 03:34:44.664 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_2_ from Promotion promotion_ where promotion_.id=?
2022-01-19 03:34:44.664 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-19 03:34:44.664 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-19 03:34:44.665 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-19 03:34:44.665 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-19 03:34:44.675 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ddee60f]
2022-01-19 03:34:44.676 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:34:44.676 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:34:44.681 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:34:44.683 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2022-01-19 03:34:44.684 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_2_0_, promotion0_.description as descript2_2_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-19 03:34:44.684 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.client_id as client_i4_0_, facture_.description as descript3_0_ from facture facture_ where facture_.id=?
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f347d7]
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:34:44.685 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:34:44.687 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11dcd42c]
2022-01-19 03:34:44.688 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-19 03:34:44.688 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-19 03:34:44.688 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-19 03:34:44.688 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-19 03:34:44.689 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15d0d6c9]
2022-01-19 03:34:44.689 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca3d25b]
2022-01-19 03:34:44.690 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:34:44.690 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:34:44.690 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.client_id as client_i4_0_0_, facture0_.description as descript3_0_0_, client1_.id as id1_3_1_, client1_.name as name2_3_1_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id where facture0_.id=?
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_3_ from TClients client_ where client_.id=?
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-19 03:34:44.691 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a2aeb7]
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f8d9767]
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16134476]
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b09715]
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e214105]
2022-01-19 03:34:44.692 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:34:44.693 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:34:44.693 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2022-01-19 03:34:44.693 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_3_0_, client0_.name as name2_3_0_ from TClients client0_ where client0_.id=?
2022-01-19 03:34:44.695 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78307a56]
2022-01-19 03:34:44.695 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d52be7]
2022-01-19 03:34:44.696 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:34:44.696 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:34:44.698 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:34:44.698 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

2022-01-19 03:34:44.698 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_1_0_, promotions0_.promotion_fk as promotio2_1_0_, promotion1_.id as id1_2_1_, promotion1_.description as descript2_2_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-19 03:34:44.698 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a8cea24]
2022-01-19 03:34:44.699 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb9a3ef]
2022-01-19 03:34:44.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-19 03:34:44.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-19 03:34:44.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-19 03:34:44.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-19 03:34:44.699 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-19 03:34:44.699 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-19 03:34:44.700 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-19 03:34:44.700 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_0_0_, factures0_.id as id1_0_0_, factures0_.id as id1_0_1_, factures0_.amount as amount2_0_1_, factures0_.client_id as client_i4_0_1_, factures0_.description as descript3_0_1_ from facture factures0_ where factures0_.client_id=?
2022-01-19 03:34:44.724 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-19 03:34:44.726 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7dee835] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-19 03:34:44.750 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-19 03:34:44.757 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-19 03:34:44.761 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-19 03:34:44.767 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:34:44.767 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4877919f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-19 03:34:44.772 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-19 03:34:44.777 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:34:44.784 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-19 03:34:44.788 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-19 03:34:44.806 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-19 03:34:44.822 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-19 03:34:44.840 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-19 03:34:44.841 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-19 03:34:44.844 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:34:44.844 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-19 03:34:44.844 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-19 03:34:44.844 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-19 03:34:44.847 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-19 03:34:44.850 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73ca34e7
2022-01-19 03:34:44.850 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 719fdaef-6041-454e-b380-e145def09e61 (<unnamed>)
2022-01-19 03:34:44.850 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-19 03:34:44.880 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-19 03:34:44.908 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-19 03:34:44.908 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-19 03:34:44.920 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:34:44.922 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-19 03:34:44.933 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-19 03:34:44.934 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:34:44.936 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:34:44.936 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-19 03:34:44.939 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-19 03:34:44.939 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:34:44.939 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-19 03:34:44.939 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-19 03:34:44.941 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-19 03:34:44.941 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-19 03:34:44.941 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-19 03:34:44.941 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-19 03:34:44.942 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-19 03:34:44.944 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#1], was: [<unreferenced>] (initialized)
2022-01-19 03:34:44.945 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-19 03:34:44.946 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2022-01-19 03:34:44.946 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-19 03:34:44.946 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-19 03:34:44.946 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-19 03:34:44.946 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, factures=null, id=1}
2022-01-19 03:34:44.947 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#1]
2022-01-19 03:34:44.950 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-19 03:34:44.952 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-19 03:34:44.953 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-19 03:34:44.956 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-19 03:34:44.956 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:14:25.653 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-20 01:14:25.731 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 01:14:25.753 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 01:14:25.760 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 01:14:25.760 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 01:14:25.783 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 01:14:25.852 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 01:14:25.852 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 01:14:25.853 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 01:14:25.857 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 01:14:25.862 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 01:14:25.863 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 01:14:25.867 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 01:14:25.898 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 01:14:25.899 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 01:14:26.023 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 01:14:26.034 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 01:14:26.035 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 01:14:26.051 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 01:14:26.101 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 01:14:26.101 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 01:14:26.101 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 01:14:26.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-20 01:14:26.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-20 01:14:26.103 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-20 01:14:26.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 01:14:26.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 01:14:26.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 01:14:26.106 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 01:14:26.106 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-20 01:14:26.106 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 01:14:26.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 01:14:26.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 01:14:26.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-20 01:14:26.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 01:14:26.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 01:14:26.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 01:14:26.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 01:14:26.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 01:14:26.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-20 01:14:26.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 01:14:26.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 01:14:26.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-20 01:14:26.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 01:14:26.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 01:14:26.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 01:14:26.113 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 01:14:26.113 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 01:14:26.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 01:14:26.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 01:14:26.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 01:14:26.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 01:14:26.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-20 01:14:26.116 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-20 01:14:26.116 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-20 01:14:26.117 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-20 01:14:26.117 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 01:14:26.117 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 01:14:26.121 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 01:14:26.121 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 01:14:26.122 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 01:14:26.122 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 01:14:26.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 01:14:26.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 01:14:26.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 01:14:26.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 01:14:26.125 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 01:14:26.126 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 01:14:26.127 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 01:14:26.127 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 01:14:26.128 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 01:14:26.128 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 01:14:26.129 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-20 01:14:26.129 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-20 01:14:26.130 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 01:14:26.130 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 01:14:26.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 01:14:26.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 01:14:26.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 01:14:26.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-20 01:14:26.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 01:14:26.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 01:14:26.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 01:14:26.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-20 01:14:26.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-20 01:14:26.136 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 01:14:26.136 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 01:14:26.137 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 01:14:26.137 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 01:14:26.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 01:14:26.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 01:14:26.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 01:14:26.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 01:14:26.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 01:14:26.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 01:14:26.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-20 01:14:26.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 01:14:26.141 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 01:14:26.141 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 01:14:26.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 01:14:26.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 01:14:26.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 01:14:26.143 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-20 01:14:26.143 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-20 01:14:26.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 01:14:26.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 01:14:26.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 01:14:26.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 01:14:26.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 01:14:26.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 01:14:26.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-20 01:14:26.146 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-20 01:14:26.147 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 01:14:26.147 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 01:14:26.147 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-20 01:14:26.148 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 01:14:26.148 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 01:14:26.149 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 01:14:26.149 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 01:14:26.150 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-20 01:14:26.150 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-20 01:14:26.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-20 01:14:26.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 01:14:26.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 01:14:26.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 01:14:26.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 01:14:26.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 01:14:26.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 01:14:26.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 01:14:26.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 01:14:26.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 01:14:26.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-20 01:14:26.162 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-20 01:14:26.162 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-20 01:14:26.200 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 01:14:26.200 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 01:14:26.207 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 01:14:26.208 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 01:14:26.209 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 01:14:26.209 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 01:14:26.209 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 01:14:26.210 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 01:14:26.210 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 01:14:26.211 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 01:14:26.211 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 01:14:26.211 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 01:14:26.212 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 01:14:26.212 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 01:14:26.212 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 01:14:26.213 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 01:14:26.216 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 01:14:26.217 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 01:14:26.217 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 01:14:26.217 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 01:14:26.217 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 01:14:26.219 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 01:14:26.219 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 01:14:26.520 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 01:14:26.520 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 01:14:26.520 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 01:14:26.528 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 01:14:26.537 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 01:14:26.538 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 01:14:26.549 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a48a7f3]
2022-01-20 01:14:26.576 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 01:14:26.584 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 01:14:26.597 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:14:26.600 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 01:14:26.603 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 01:14:26.614 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.615 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 01:14:26.615 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 01:14:26.616 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:14:26.617 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 01:14:26.618 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:14:26.619 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:14:26.620 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:14:26.621 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.621 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 01:14:26.621 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 01:14:26.621 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 01:14:26.621 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 01:14:26.625 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 01:14:26.625 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:14:26.625 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 01:14:26.625 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 01:14:26.628 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.628 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 01:14:26.628 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 01:14:26.628 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:14:26.629 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 01:14:26.629 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:14:26.629 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:14:26.629 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:14:26.629 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.629 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 01:14:26.629 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 01:14:26.630 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 01:14:26.630 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 01:14:26.630 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 01:14:26.631 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.632 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 01:14:26.633 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.633 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 01:14:26.633 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 01:14:26.633 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 01:14:26.634 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 01:14:26.634 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.634 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:14:26.634 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 01:14:26.635 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 01:14:26.640 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.640 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 01:14:26.640 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 01:14:26.640 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:14:26.640 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 01:14:26.640 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:14:26.640 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:14:26.641 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:14:26.641 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:14:26.641 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.642 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:14:26.642 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.643 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 01:14:26.649 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:14:26.649 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:14:26.649 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 01:14:26.650 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 01:14:26.650 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.650 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 01:14:26.651 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 01:14:26.651 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 01:14:26.651 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 01:14:26.651 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.651 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.651 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.651 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 01:14:26.652 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 01:14:26.652 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 01:14:26.652 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:14:26.652 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 01:14:26.652 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:14:26.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:14:26.653 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 01:14:26.653 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 01:14:26.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.653 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 01:14:26.653 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:14:26.654 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:14:26.654 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 01:14:26.654 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:14:26.654 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:14:26.654 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:14:26.654 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 01:14:26.654 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.655 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 01:14:26.655 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 01:14:26.655 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 01:14:26.655 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 01:14:26.655 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 01:14:26.655 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 01:14:26.656 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:14:26.656 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 01:14:26.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:14:26.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 01:14:26.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 01:14:26.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:14:26.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 01:14:26.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:14:26.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 01:14:26.659 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-20 01:14:26.659 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-20 01:14:26.659 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-20 01:14:26.659 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-20 01:14:26.659 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:14:26.660 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:14:26.661 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-20 01:14:26.662 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-20 01:14:26.662 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 01:14:26.662 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-20 01:14:26.663 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-20 01:14:26.663 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-20 01:14:26.663 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-20 01:14:26.663 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 01:14:26.663 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.664 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.664 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 01:14:26.665 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.665 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 01:14:26.666 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.666 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.666 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 01:14:26.666 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.689 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-20 01:14:26.690 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-20 01:14:26.691 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-20 01:14:26.692 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-20 01:14:26.693 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-20 01:14:26.723 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:14:26.724 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:14:26.732 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-20 01:14:26.732 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@c269425, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-20 01:14:26.741 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-20 01:14:26.742 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-20 01:14:26.742 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59ce792e]
2022-01-20 01:14:26.780 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 01:14:26.780 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 01:14:26.890 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.891 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.891 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 01:14:26.891 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 01:14:26.898 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.899 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.901 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.901 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.901 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 01:14:26.902 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 01:14:26.911 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.912 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.912 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.912 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.912 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 01:14:26.912 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:14:26.913 INFO [main][org.hibernate.tuple.PojoInstantiator] [<init>] [org.hibernate.tuple.PojoInstantiator.<init>(PojoInstantiator.java:47)] - HHH000182: No default (no-argument) constructor for class: ma.cigma.pfe.models.CarteFidelio (class must be instantiated by Interceptor)
2022-01-20 01:14:26.917 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.917 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:14:26.922 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:14:26.922 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-20 01:14:26.923 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-20 01:14:26.923 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-20 01:14:26.923 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-20 01:14:26.924 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 01:14:26.924 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-20 01:14:26.924 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-20 01:14:26.924 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-20 01:14:26.924 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-20 01:14:26.926 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-20 01:14:26.926 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-20 01:14:26.926 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_3_ from Promotion promotion_ where promotion_.id=?
2022-01-20 01:14:26.927 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-20 01:14:26.927 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-20 01:14:26.927 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-20 01:14:26.927 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-20 01:14:26.940 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2173a742]
2022-01-20 01:14:26.941 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:14:26.941 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:14:26.948 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:14:26.950 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_3_0_, promotion0_.description as descript2_3_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_1_, facture_.client_id as client_i4_1_, facture_.description as descript3_1_ from facture facture_ where facture_.id=?
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-20 01:14:26.952 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16134476]
2022-01-20 01:14:26.953 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 01:14:26.953 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:14:26.954 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47829d6d]
2022-01-20 01:14:26.955 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 01:14:26.955 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-20 01:14:26.955 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 01:14:26.956 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 01:14:26.956 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fd413fb]
2022-01-20 01:14:26.957 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45843650]
2022-01-20 01:14:26.957 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 01:14:26.957 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c9d3d0]
2022-01-20 01:14:26.957 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-20 01:14:26.957 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-20 01:14:26.958 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-20 01:14:26.958 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:14:26.958 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:14:26.958 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:14:26.960 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

2022-01-20 01:14:26.960 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_1_0_, facture0_.amount as amount2_1_0_, facture0_.client_id as client_i4_1_0_, facture0_.description as descript3_1_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_, cartefidel2_.id as id1_0_2_, cartefidel2_.client_id as client_i3_0_2_, cartefidel2_.code as code2_0_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-20 01:14:26.960 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-20 01:14:26.960 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-20 01:14:26.960 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_4_ from TClients client_ where client_.id=?
2022-01-20 01:14:26.960 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-20 01:14:26.960 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d318e91]
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@740b6628]
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe059d]
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 01:14:26.961 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@766a52f5]
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4342c13]
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba1209b]
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-20 01:14:26.962 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:14:26.963 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:14:26.963 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-20 01:14:26.963 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_4_0_, client0_.name as name2_4_0_, cartefidel1_.id as id1_0_1_, cartefidel1_.client_id as client_i3_0_1_, cartefidel1_.code as code2_0_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-20 01:14:26.963 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_0_, cartefidel_.code as code2_0_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fd1214]
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:14:26.964 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0bab7e]
2022-01-20 01:14:26.965 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 01:14:26.967 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@337a6d30]
2022-01-20 01:14:26.967 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2921a36a]
2022-01-20 01:14:26.967 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b73bd6b]
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@157d3a45]
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:14:26.968 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:14:26.969 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

2022-01-20 01:14:26.969 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_0_, cartefidel0_.client_id as client_i3_0_0_, cartefidel0_.code as code2_0_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-20 01:14:26.974 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_1_, cartefidel0_.client_id as client_i3_0_1_, cartefidel0_.code as code2_0_1_, client1_.id as id1_4_0_, client1_.name as name2_4_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-20 01:14:26.978 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b4125ed]
2022-01-20 01:14:26.978 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78da899f]
2022-01-20 01:14:26.979 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:14:26.979 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:14:26.981 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:14:26.981 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2022-01-20 01:14:26.983 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_2_0_, promotions0_.promotion_fk as promotio2_2_0_, promotion1_.id as id1_3_1_, promotion1_.description as descript2_3_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-20 01:14:26.983 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58f2466c]
2022-01-20 01:14:26.983 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5809fa26]
2022-01-20 01:14:26.984 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 01:14:26.984 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:14:26.984 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-20 01:14:26.984 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:14:26.984 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:14:26.985 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:14:26.985 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-20 01:14:26.985 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_1_0_, factures0_.id as id1_1_0_, factures0_.id as id1_1_1_, factures0_.amount as amount2_1_1_, factures0_.client_id as client_i4_1_1_, factures0_.description as descript3_1_1_ from facture factures0_ where factures0_.client_id=?
2022-01-20 01:14:27.007 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-20 01:14:27.009 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@d3e3085] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 01:14:27.028 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-20 01:14:27.042 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-20 01:14:27.051 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-20 01:14:27.058 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-20 01:14:27.065 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:14:27.065 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@124d26ba] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 01:14:27.072 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:14:27.078 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-20 01:14:27.082 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:14:27.087 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:14:27.092 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 01:14:27.111 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 01:14:27.126 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-20 01:14:27.141 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-20 01:14:27.158 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-20 01:14:27.159 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-20 01:14:27.162 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 01:14:27.162 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 01:14:27.163 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-20 01:14:27.163 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-20 01:14:27.165 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:14:27.168 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c931134
2022-01-20 01:14:27.169 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: c1453b68-5017-4770-b19a-9f69d48e2708 (<unnamed>)
2022-01-20 01:14:27.169 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-20 01:14:27.200 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-20 01:14:27.229 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-20 01:14:27.230 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:14:27.240 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:14:27.242 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 01:14:27.256 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:14:27.256 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:14:27.259 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:14:27.259 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-20 01:14:27.261 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:14:27.261 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:14:27.262 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:14:27.262 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:14:27.263 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:14:27.265 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-20 01:14:27.265 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:14:27.266 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:14:27.266 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=null, id=1}
2022-01-20 01:14:27.266 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=null, name=ismail, factures=null, id=1}
2022-01-20 01:14:27.268 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:14:27.268 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:35:18.611 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2a266d09
2022-01-20 01:35:18.669 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 01:35:18.687 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 01:35:18.694 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 01:35:18.694 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 01:35:18.716 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 01:35:18.765 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 01:35:18.766 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 01:35:18.766 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 01:35:18.770 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 01:35:18.772 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 01:35:18.773 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 01:35:18.776 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 01:35:18.799 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 01:35:18.800 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 01:35:18.897 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 01:35:18.909 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 01:35:18.909 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 01:35:18.922 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 01:35:18.976 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@aec50a1
2022-01-20 01:35:18.976 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@aec50a1
2022-01-20 01:35:18.976 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@aec50a1
2022-01-20 01:35:18.977 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a0e1b5e
2022-01-20 01:35:18.977 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7646731d
2022-01-20 01:35:18.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@40bffbca
2022-01-20 01:35:18.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@71e9a896
2022-01-20 01:35:18.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@71e9a896
2022-01-20 01:35:18.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@71e9a896
2022-01-20 01:35:18.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@fac80
2022-01-20 01:35:18.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@fac80
2022-01-20 01:35:18.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@fac80
2022-01-20 01:35:18.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@57f791c6
2022-01-20 01:35:18.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@57f791c6
2022-01-20 01:35:18.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57f791c6
2022-01-20 01:35:18.982 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@c1fca1e
2022-01-20 01:35:18.982 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@c1fca1e
2022-01-20 01:35:18.982 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c1fca1e
2022-01-20 01:35:18.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@73393584
2022-01-20 01:35:18.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@73393584
2022-01-20 01:35:18.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@73393584
2022-01-20 01:35:18.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@1c25b8a7
2022-01-20 01:35:18.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@1c25b8a7
2022-01-20 01:35:18.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c25b8a7
2022-01-20 01:35:18.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@63fd4873
2022-01-20 01:35:18.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@63fd4873
2022-01-20 01:35:18.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@63fd4873
2022-01-20 01:35:18.986 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fdfa676
2022-01-20 01:35:18.986 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fdfa676
2022-01-20 01:35:18.986 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@473b3b7a
2022-01-20 01:35:18.987 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@473b3b7a
2022-01-20 01:35:18.987 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@41382722
2022-01-20 01:35:18.988 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@41382722
2022-01-20 01:35:18.988 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@210386e0
2022-01-20 01:35:18.988 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6ce1f601
2022-01-20 01:35:18.989 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@372b0d86
2022-01-20 01:35:18.989 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@372b0d86
2022-01-20 01:35:18.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@70eecdc2
2022-01-20 01:35:18.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70eecdc2
2022-01-20 01:35:18.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@51a06cbe
2022-01-20 01:35:18.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@51a06cbe
2022-01-20 01:35:18.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52c8295b
2022-01-20 01:35:18.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52c8295b
2022-01-20 01:35:18.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@22680f52
2022-01-20 01:35:18.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@22680f52
2022-01-20 01:35:18.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1fc793c2
2022-01-20 01:35:18.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1fc793c2
2022-01-20 01:35:18.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37d3d232
2022-01-20 01:35:18.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37d3d232
2022-01-20 01:35:18.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@46cf05f7
2022-01-20 01:35:18.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@46cf05f7
2022-01-20 01:35:18.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a80515c
2022-01-20 01:35:18.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a80515c
2022-01-20 01:35:19.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@2024293c
2022-01-20 01:35:19.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2024293c
2022-01-20 01:35:19.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@3c291aad
2022-01-20 01:35:19.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3c291aad
2022-01-20 01:35:19.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@2c444798
2022-01-20 01:35:19.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c444798
2022-01-20 01:35:19.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c444798
2022-01-20 01:35:19.003 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d157787
2022-01-20 01:35:19.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@3c8bdd5b
2022-01-20 01:35:19.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c8bdd5b
2022-01-20 01:35:19.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c8bdd5b
2022-01-20 01:35:19.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@512d92b
2022-01-20 01:35:19.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@751e664e
2022-01-20 01:35:19.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@3153ddfc
2022-01-20 01:35:19.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3153ddfc
2022-01-20 01:35:19.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@e72dba7
2022-01-20 01:35:19.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@e72dba7
2022-01-20 01:35:19.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@610db97e
2022-01-20 01:35:19.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@610db97e
2022-01-20 01:35:19.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@7bd69e82
2022-01-20 01:35:19.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bd69e82
2022-01-20 01:35:19.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5cbf9e9f
2022-01-20 01:35:19.009 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5cbf9e9f
2022-01-20 01:35:19.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ad394e6
2022-01-20 01:35:19.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@1bdaa23d
2022-01-20 01:35:19.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@1bdaa23d
2022-01-20 01:35:19.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@1bdaa23d
2022-01-20 01:35:19.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6754ef00
2022-01-20 01:35:19.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6754ef00
2022-01-20 01:35:19.012 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6754ef00
2022-01-20 01:35:19.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@24b52d3e
2022-01-20 01:35:19.013 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@5af5def9
2022-01-20 01:35:19.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@33aa93c
2022-01-20 01:35:19.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@33aa93c
2022-01-20 01:35:19.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@33aa93c
2022-01-20 01:35:19.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2c282004
2022-01-20 01:35:19.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2c282004
2022-01-20 01:35:19.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2c282004
2022-01-20 01:35:19.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@53bc1328
2022-01-20 01:35:19.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@78e16155
2022-01-20 01:35:19.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@622ef26a
2022-01-20 01:35:19.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@622ef26a
2022-01-20 01:35:19.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3d526ad9
2022-01-20 01:35:19.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@f325091
2022-01-20 01:35:19.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f325091
2022-01-20 01:35:19.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@eadb475
2022-01-20 01:35:19.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@eadb475
2022-01-20 01:35:19.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5cad8b7d
2022-01-20 01:35:19.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2e6ee0bc
2022-01-20 01:35:19.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@3be8821f
2022-01-20 01:35:19.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@62577d6
2022-01-20 01:35:19.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62577d6
2022-01-20 01:35:19.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a12c728
2022-01-20 01:35:19.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 01:35:19.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 01:35:19.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 01:35:19.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 01:35:19.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 01:35:19.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 01:35:19.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 01:35:19.031 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@38d5b107] into BootstrapContext; was [null]
2022-01-20 01:35:19.032 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6650813a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c]
2022-01-20 01:35:19.063 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 01:35:19.063 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 01:35:19.069 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 01:35:19.069 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 01:35:19.070 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 01:35:19.070 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 01:35:19.070 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 01:35:19.071 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 01:35:19.071 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 01:35:19.072 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 01:35:19.072 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 01:35:19.073 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 01:35:19.073 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 01:35:19.073 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 01:35:19.073 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 01:35:19.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 01:35:19.077 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 01:35:19.078 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 01:35:19.078 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 01:35:19.078 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 01:35:19.078 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 01:35:19.080 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 01:35:19.080 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 01:35:19.305 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 01:35:19.305 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 01:35:19.305 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 01:35:19.312 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 01:35:19.320 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 01:35:19.320 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 01:35:19.331 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73437222] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@ca93621]
2022-01-20 01:35:19.353 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 01:35:19.362 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 01:35:19.373 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:35:19.377 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 01:35:19.381 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 01:35:19.392 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.393 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 01:35:19.393 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 01:35:19.394 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:35:19.395 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 01:35:19.396 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:35:19.397 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:35:19.399 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:35:19.399 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.400 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 01:35:19.400 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 01:35:19.400 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 01:35:19.400 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 01:35:19.404 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 01:35:19.404 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:35:19.404 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 01:35:19.404 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 01:35:19.408 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.408 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 01:35:19.408 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 01:35:19.408 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:35:19.408 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 01:35:19.409 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:35:19.409 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:35:19.409 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:35:19.409 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.409 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 01:35:19.410 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 01:35:19.410 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 01:35:19.410 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 01:35:19.411 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 01:35:19.411 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.414 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 01:35:19.414 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.415 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 01:35:19.415 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 01:35:19.415 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 01:35:19.415 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 01:35:19.416 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.416 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:35:19.416 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 01:35:19.416 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 01:35:19.421 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.422 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 01:35:19.422 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 01:35:19.422 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:35:19.422 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 01:35:19.422 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:35:19.422 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:35:19.423 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:35:19.423 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:35:19.423 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.424 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:35:19.425 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.426 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.430 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.430 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.431 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 01:35:19.431 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:35:19.431 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:35:19.432 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 01:35:19.433 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 01:35:19.433 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.433 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 01:35:19.433 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 01:35:19.433 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 01:35:19.433 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 01:35:19.434 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.434 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.434 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.434 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 01:35:19.434 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 01:35:19.434 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 01:35:19.435 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:35:19.435 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 01:35:19.435 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:35:19.435 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:35:19.435 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 01:35:19.436 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 01:35:19.436 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.436 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 01:35:19.436 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:35:19.437 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:35:19.437 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 01:35:19.437 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:35:19.437 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:35:19.437 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:35:19.437 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 01:35:19.438 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.438 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 01:35:19.438 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 01:35:19.438 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 01:35:19.438 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 01:35:19.438 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 01:35:19.439 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 01:35:19.440 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:35:19.440 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 01:35:19.440 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:35:19.440 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 01:35:19.445 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 01:35:19.445 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:35:19.445 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 01:35:19.445 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:35:19.445 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 01:35:19.447 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-20 01:35:19.448 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-20 01:35:19.448 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-20 01:35:19.448 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-20 01:35:19.448 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:35:19.448 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:35:19.449 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-20 01:35:19.450 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-20 01:35:19.451 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 01:35:19.451 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-20 01:35:19.451 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-20 01:35:19.451 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-20 01:35:19.451 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-20 01:35:19.451 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 01:35:19.452 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.453 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.453 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 01:35:19.453 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.454 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 01:35:19.454 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.454 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.454 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 01:35:19.454 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.475 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-20 01:35:19.476 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-20 01:35:19.476 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-20 01:35:19.476 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-20 01:35:19.476 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-20 01:35:19.477 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-20 01:35:19.478 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-20 01:35:19.479 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-20 01:35:19.480 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-20 01:35:19.507 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:35:19.508 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:35:19.515 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-20 01:35:19.516 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@26fb4d06, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-20 01:35:19.524 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-20 01:35:19.525 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-20 01:35:19.525 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73437222] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4b0b64cc]
2022-01-20 01:35:19.554 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 01:35:19.554 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 01:35:19.657 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.658 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.658 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 01:35:19.658 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 01:35:19.666 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.666 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.668 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.668 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.668 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 01:35:19.668 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 01:35:19.678 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.678 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.679 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.679 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.679 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 01:35:19.679 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:35:19.684 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.684 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:35:19.689 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:35:19.690 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-20 01:35:19.690 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-20 01:35:19.690 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-20 01:35:19.690 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-20 01:35:19.691 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 01:35:19.691 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-20 01:35:19.691 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-20 01:35:19.691 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-20 01:35:19.691 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-20 01:35:19.693 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-20 01:35:19.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-20 01:35:19.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_3_ from Promotion promotion_ where promotion_.id=?
2022-01-20 01:35:19.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-20 01:35:19.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-20 01:35:19.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-20 01:35:19.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-20 01:35:19.706 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5700c9db]
2022-01-20 01:35:19.706 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:35:19.707 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:35:19.712 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:35:19.715 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_3_0_, promotion0_.description as descript2_3_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_1_, facture_.client_id as client_i4_1_, facture_.description as descript3_1_ from facture facture_ where facture_.id=?
2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-20 01:35:19.716 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-20 01:35:19.717 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a2aeb7]
2022-01-20 01:35:19.717 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 01:35:19.717 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:35:19.719 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5c6a30]
2022-01-20 01:35:19.719 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 01:35:19.720 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-20 01:35:19.720 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 01:35:19.720 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 01:35:19.720 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64aeaf29]
2022-01-20 01:35:19.721 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e3f2908]
2022-01-20 01:35:19.721 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 01:35:19.721 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33feda48]
2022-01-20 01:35:19.721 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-20 01:35:19.721 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-20 01:35:19.722 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-20 01:35:19.722 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:35:19.722 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:35:19.722 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:35:19.724 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

2022-01-20 01:35:19.724 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_1_0_, facture0_.amount as amount2_1_0_, facture0_.client_id as client_i4_1_0_, facture0_.description as descript3_1_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_, cartefidel2_.id as id1_0_2_, cartefidel2_.client_id as client_i3_0_2_, cartefidel2_.code as code2_0_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-20 01:35:19.724 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-20 01:35:19.724 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-20 01:35:19.724 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_4_ from TClients client_ where client_.id=?
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af5d76f]
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1eb9a3ef]
2022-01-20 01:35:19.725 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d318e91]
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@298b64f7]
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@740b6628]
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe059d]
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-20 01:35:19.726 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-20 01:35:19.727 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-20 01:35:19.727 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:35:19.727 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:35:19.727 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_4_0_, client0_.name as name2_4_0_, cartefidel1_.id as id1_0_1_, cartefidel1_.client_id as client_i3_0_1_, cartefidel1_.code as code2_0_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_0_, cartefidel_.code as code2_0_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4342c13]
2022-01-20 01:35:19.728 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c241a9f]
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d8cf9ac]
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f0bab7e]
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a7b2e2]
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@337a6d30]
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 01:35:19.729 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-20 01:35:19.730 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-20 01:35:19.730 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:35:19.730 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:35:19.731 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

2022-01-20 01:35:19.731 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_0_, cartefidel0_.client_id as client_i3_0_0_, cartefidel0_.code as code2_0_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-20 01:35:19.738 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_1_, cartefidel0_.client_id as client_i3_0_1_, cartefidel0_.code as code2_0_1_, client1_.id as id1_4_0_, client1_.name as name2_4_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-20 01:35:19.742 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e01b133]
2022-01-20 01:35:19.742 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@262a1fad]
2022-01-20 01:35:19.743 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:35:19.743 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:35:19.745 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:35:19.747 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_2_0_, promotions0_.promotion_fk as promotio2_2_0_, promotion1_.id as id1_3_1_, promotion1_.description as descript2_3_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@581b1c08]
2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c240cf2]
2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:35:19.748 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:35:19.749 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:35:19.749 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-20 01:35:19.749 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_1_0_, factures0_.id as id1_1_0_, factures0_.id as id1_1_1_, factures0_.amount as amount2_1_1_, factures0_.client_id as client_i4_1_1_, factures0_.description as descript3_1_1_ from facture factures0_ where factures0_.client_id=?
2022-01-20 01:35:19.770 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-20 01:35:19.772 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2180e789] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 01:35:19.791 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-20 01:35:19.795 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-20 01:35:19.799 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-20 01:35:19.802 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-20 01:35:19.808 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:35:19.809 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6acffb2d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 01:35:19.814 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:35:19.819 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-20 01:35:19.824 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:35:19.830 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:35:19.835 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 01:35:19.852 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 01:35:19.867 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-20 01:35:19.883 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-20 01:35:19.899 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-20 01:35:19.900 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-20 01:35:19.903 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 01:35:19.903 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 01:35:19.903 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-20 01:35:19.904 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-20 01:35:19.906 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:35:19.909 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@385d819
2022-01-20 01:35:19.909 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 2c75eac8-3c77-4e37-b0a6-c5726bc7dffe (<unnamed>)
2022-01-20 01:35:19.910 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-20 01:35:19.939 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-20 01:35:19.968 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-20 01:35:19.968 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:35:19.978 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:35:19.980 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 01:35:19.993 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:35:19.994 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:35:19.996 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:35:19.996 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-20 01:35:19.998 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:35:19.998 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:35:19.999 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:35:19.999 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:35:19.999 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:35:20.002 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-20 01:35:20.002 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:35:20.003 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:35:20.003 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=null, id=1}
2022-01-20 01:35:20.003 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=null, name=ismail, factures=null, id=1}
2022-01-20 01:35:20.004 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:35:20.005 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:37.066 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-20 01:49:37.129 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 01:49:37.148 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 01:49:37.156 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 01:49:37.156 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 01:49:37.178 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 01:49:37.231 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 01:49:37.231 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 01:49:37.232 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 01:49:37.235 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 01:49:37.238 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 01:49:37.240 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 01:49:37.242 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 01:49:37.267 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 01:49:37.268 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 01:49:37.369 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 01:49:37.381 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 01:49:37.382 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 01:49:37.394 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 01:49:37.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 01:49:37.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 01:49:37.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 01:49:37.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-20 01:49:37.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-20 01:49:37.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-20 01:49:37.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 01:49:37.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 01:49:37.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 01:49:37.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 01:49:37.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-20 01:49:37.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 01:49:37.444 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 01:49:37.444 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 01:49:37.444 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-20 01:49:37.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 01:49:37.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 01:49:37.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 01:49:37.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 01:49:37.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 01:49:37.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-20 01:49:37.447 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 01:49:37.448 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 01:49:37.448 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-20 01:49:37.448 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 01:49:37.449 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 01:49:37.449 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 01:49:37.449 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 01:49:37.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 01:49:37.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 01:49:37.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 01:49:37.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 01:49:37.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 01:49:37.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-20 01:49:37.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-20 01:49:37.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-20 01:49:37.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-20 01:49:37.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 01:49:37.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 01:49:37.456 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 01:49:37.456 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 01:49:37.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 01:49:37.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 01:49:37.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 01:49:37.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 01:49:37.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 01:49:37.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 01:49:37.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 01:49:37.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 01:49:37.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 01:49:37.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 01:49:37.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 01:49:37.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 01:49:37.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-20 01:49:37.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-20 01:49:37.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 01:49:37.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 01:49:37.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 01:49:37.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 01:49:37.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 01:49:37.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-20 01:49:37.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 01:49:37.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 01:49:37.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 01:49:37.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-20 01:49:37.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-20 01:49:37.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 01:49:37.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 01:49:37.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 01:49:37.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 01:49:37.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 01:49:37.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 01:49:37.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 01:49:37.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 01:49:37.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 01:49:37.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 01:49:37.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-20 01:49:37.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 01:49:37.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 01:49:37.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 01:49:37.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 01:49:37.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 01:49:37.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 01:49:37.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-20 01:49:37.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-20 01:49:37.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 01:49:37.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 01:49:37.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 01:49:37.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 01:49:37.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 01:49:37.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 01:49:37.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-20 01:49:37.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-20 01:49:37.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 01:49:37.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 01:49:37.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-20 01:49:37.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 01:49:37.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 01:49:37.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 01:49:37.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 01:49:37.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-20 01:49:37.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-20 01:49:37.483 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-20 01:49:37.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 01:49:37.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 01:49:37.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 01:49:37.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 01:49:37.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 01:49:37.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 01:49:37.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 01:49:37.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 01:49:37.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 01:49:37.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-20 01:49:37.494 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-20 01:49:37.494 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-20 01:49:37.527 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 01:49:37.528 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 01:49:37.536 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 01:49:37.536 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 01:49:37.537 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 01:49:37.537 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 01:49:37.537 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 01:49:37.538 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 01:49:37.538 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 01:49:37.539 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 01:49:37.539 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 01:49:37.540 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 01:49:37.540 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 01:49:37.540 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 01:49:37.541 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 01:49:37.541 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 01:49:37.544 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 01:49:37.544 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 01:49:37.544 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 01:49:37.545 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 01:49:37.545 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 01:49:37.546 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 01:49:37.546 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 01:49:37.772 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 01:49:37.772 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 01:49:37.772 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 01:49:37.779 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 01:49:37.787 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 01:49:37.787 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 01:49:37.798 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a48a7f3]
2022-01-20 01:49:37.820 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 01:49:37.827 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 01:49:37.839 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:49:37.842 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 01:49:37.845 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 01:49:37.856 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.858 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 01:49:37.858 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 01:49:37.858 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:49:37.860 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 01:49:37.861 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:49:37.862 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:49:37.864 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:49:37.864 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.864 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 01:49:37.864 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 01:49:37.865 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 01:49:37.865 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 01:49:37.868 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 01:49:37.869 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:49:37.869 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 01:49:37.869 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 01:49:37.872 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.873 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 01:49:37.873 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 01:49:37.873 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:49:37.873 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 01:49:37.873 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:49:37.874 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:49:37.874 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:49:37.874 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.874 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 01:49:37.874 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 01:49:37.874 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 01:49:37.874 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 01:49:37.875 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 01:49:37.875 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.877 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 01:49:37.878 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.878 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 01:49:37.878 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 01:49:37.878 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 01:49:37.878 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 01:49:37.879 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 01:49:37.879 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:49:37.879 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 01:49:37.884 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 01:49:37.889 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.889 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 01:49:37.889 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 01:49:37.889 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:49:37.889 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 01:49:37.889 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:49:37.890 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:49:37.890 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:49:37.890 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:49:37.890 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.891 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:49:37.892 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.893 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.897 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.897 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.897 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 01:49:37.898 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:49:37.898 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 01:49:37.898 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 01:49:37.899 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 01:49:37.899 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.899 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 01:49:37.900 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 01:49:37.900 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 01:49:37.900 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 01:49:37.900 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.900 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.900 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.901 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 01:49:37.901 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 01:49:37.901 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 01:49:37.901 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:49:37.901 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 01:49:37.902 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:49:37.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 01:49:37.902 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 01:49:37.902 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 01:49:37.902 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.903 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 01:49:37.903 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:49:37.903 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 01:49:37.903 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 01:49:37.903 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 01:49:37.903 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 01:49:37.903 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 01:49:37.904 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 01:49:37.904 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.904 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 01:49:37.904 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 01:49:37.904 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 01:49:37.904 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 01:49:37.905 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 01:49:37.905 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 01:49:37.906 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:49:37.906 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 01:49:37.906 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:49:37.906 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 01:49:37.906 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 01:49:37.906 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:49:37.907 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 01:49:37.907 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 01:49:37.907 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 01:49:37.909 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-20 01:49:37.909 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-20 01:49:37.909 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-20 01:49:37.909 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-20 01:49:37.909 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:49:37.909 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:49:37.911 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-20 01:49:37.911 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-20 01:49:37.912 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 01:49:37.912 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-20 01:49:37.912 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-20 01:49:37.912 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-20 01:49:37.913 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-20 01:49:37.913 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 01:49:37.913 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:49:37.914 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:49:37.914 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 01:49:37.914 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:49:37.915 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 01:49:37.915 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:49:37.915 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:49:37.915 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 01:49:37.915 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 01:49:37.936 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-20 01:49:37.937 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-20 01:49:37.938 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-20 01:49:37.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-20 01:49:37.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-20 01:49:37.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-20 01:49:37.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-20 01:49:37.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-20 01:49:37.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-20 01:49:37.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-20 01:49:37.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-20 01:49:37.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-20 01:49:37.968 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:49:37.969 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:49:37.975 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-20 01:49:37.976 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@c269425, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-20 01:49:37.982 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-20 01:49:37.983 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-20 01:49:37.983 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59ce792e]
2022-01-20 01:49:38.019 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 01:49:38.020 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 01:49:38.123 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.124 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.124 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 01:49:38.124 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 01:49:38.133 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.133 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.135 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.135 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.135 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 01:49:38.135 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 01:49:38.145 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.146 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.146 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.146 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.146 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 01:49:38.146 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:49:38.151 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.151 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 01:49:38.157 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 01:49:38.158 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-20 01:49:38.158 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-20 01:49:38.158 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-20 01:49:38.158 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-20 01:49:38.159 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 01:49:38.159 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-20 01:49:38.159 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-20 01:49:38.159 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-20 01:49:38.159 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-20 01:49:38.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-20 01:49:38.162 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-20 01:49:38.162 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_3_ from Promotion promotion_ where promotion_.id=?
2022-01-20 01:49:38.162 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-20 01:49:38.162 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-20 01:49:38.162 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-20 01:49:38.162 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-20 01:49:38.174 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671d03bb]
2022-01-20 01:49:38.174 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:49:38.175 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:49:38.180 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:49:38.182 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_3_0_, promotion0_.description as descript2_3_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_1_, facture_.client_id as client_i4_1_, facture_.description as descript3_1_ from facture facture_ where facture_.id=?
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-20 01:49:38.184 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b70f41]
2022-01-20 01:49:38.185 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 01:49:38.185 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:49:38.186 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfae028]
2022-01-20 01:49:38.187 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 01:49:38.187 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-20 01:49:38.187 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 01:49:38.188 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 01:49:38.188 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e3df614]
2022-01-20 01:49:38.189 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e87ef9e]
2022-01-20 01:49:38.189 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 01:49:38.189 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6588b715]
2022-01-20 01:49:38.189 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-20 01:49:38.189 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-20 01:49:38.190 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-20 01:49:38.190 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:49:38.190 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:49:38.190 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_1_0_, facture0_.amount as amount2_1_0_, facture0_.client_id as client_i4_1_0_, facture0_.description as descript3_1_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_, cartefidel2_.id as id1_0_2_, cartefidel2_.client_id as client_i3_0_2_, cartefidel2_.code as code2_0_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_4_ from TClients client_ where client_.id=?
2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-20 01:49:38.191 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8cea24]
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d318e91]
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298b64f7]
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@740b6628]
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe059d]
2022-01-20 01:49:38.192 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766a52f5]
2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-20 01:49:38.193 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_4_0_, client0_.name as name2_4_0_, cartefidel1_.id as id1_0_1_, cartefidel1_.client_id as client_i3_0_1_, cartefidel1_.code as code2_0_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_0_, cartefidel_.code as code2_0_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba1209b]
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fd1214]
2022-01-20 01:49:38.194 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f0bab7e]
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a7b2e2]
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@337a6d30]
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2921a36a]
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:49:38.195 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:49:38.196 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

2022-01-20 01:49:38.196 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_0_, cartefidel0_.client_id as client_i3_0_0_, cartefidel0_.code as code2_0_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-20 01:49:38.201 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_1_, cartefidel0_.client_id as client_i3_0_1_, cartefidel0_.code as code2_0_1_, client1_.id as id1_4_0_, client1_.name as name2_4_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-20 01:49:38.205 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@262a1fad]
2022-01-20 01:49:38.205 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be6931f]
2022-01-20 01:49:38.206 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:49:38.206 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:49:38.208 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:49:38.210 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2022-01-20 01:49:38.210 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_2_0_, promotions0_.promotion_fk as promotio2_2_0_, promotion1_.id as id1_3_1_, promotion1_.description as descript2_3_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-20 01:49:38.211 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c240cf2]
2022-01-20 01:49:38.211 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b7f805]
2022-01-20 01:49:38.211 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 01:49:38.211 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 01:49:38.211 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-20 01:49:38.211 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 01:49:38.211 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 01:49:38.212 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 01:49:38.212 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-20 01:49:38.212 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_1_0_, factures0_.id as id1_1_0_, factures0_.id as id1_1_1_, factures0_.amount as amount2_1_1_, factures0_.client_id as client_i4_1_1_, factures0_.description as descript3_1_1_ from facture factures0_ where factures0_.client_id=?
2022-01-20 01:49:38.234 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-20 01:49:38.235 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5e9bbd9d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 01:49:38.256 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-20 01:49:38.260 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-20 01:49:38.264 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-20 01:49:38.269 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-20 01:49:38.278 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:49:38.278 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@61149fa5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 01:49:38.284 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:49:38.289 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-20 01:49:38.294 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:49:38.300 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 01:49:38.305 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 01:49:38.322 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 01:49:38.341 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-20 01:49:38.356 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-20 01:49:38.372 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-20 01:49:38.372 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-20 01:49:38.375 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 01:49:38.375 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 01:49:38.376 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-20 01:49:38.376 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-20 01:49:38.378 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 01:49:38.381 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4315c28c
2022-01-20 01:49:38.382 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: cee551df-ebad-4ba1-8074-3d991ff78bc8 (<unnamed>)
2022-01-20 01:49:38.382 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-20 01:49:38.410 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-20 01:49:38.436 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-20 01:49:38.436 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:49:38.446 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.448 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 01:49:38.461 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:49:38.462 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.464 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:49:38.464 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:49:38.464 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:49:38.467 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-20 01:49:38.467 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:49:38.467 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:49:38.468 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 01:49:38.469 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.470 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.470 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:49:38.470 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.470 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 01:49:38.472 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 01:49:38.472 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.472 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:49:38.472 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:49:38.472 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.473 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:49:38.474 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.474 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 01:49:38.475 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-20 01:49:38.475 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.475 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:49:38.475 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:49:38.475 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.476 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:49:38.477 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.477 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 01:49:38.478 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-20 01:49:38.478 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.478 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:49:38.478 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:49:38.478 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 01:49:38.479 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.480 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.480 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:49:38.483 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:49:38.483 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:49:38.484 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:49:38.484 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-01-20 01:49:38.484 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:49:38.484 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:49:38.484 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 01:49:38.485 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 01:49:38.485 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 01:49:38.485 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=1}
2022-01-20 01:49:38.488 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-20 01:49:38.491 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.491 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.491 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=1}
2022-01-20 01:49:38.493 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-20 01:49:38.496 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.496 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.496 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.496 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 01:49:38.501 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.501 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 01:49:38.503 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 5
2022-01-20 01:49:38.503 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.504 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.504 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 01:49:38.506 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:49:38.507 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.507 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.507 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 01:49:38.508 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 01:49:38.508 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.508 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.508 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 01:49:38.510 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:49:38.511 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.511 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.511 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 01:49:38.512 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 01:49:38.512 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.512 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 01:49:38.512 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-20 01:49:38.514 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 01:49:38.514 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 01:49:38.514 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 01:49:38.514 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 01:49:38.514 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#5], was: [<unreferenced>] (initialized)
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#5], was: [<unreferenced>] (initialized)
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=null, id=1}
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-20 01:49:38.516 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 01:49:38.517 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=5}
2022-01-20 01:49:38.517 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 01:49:38.517 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-20 01:49:38.517 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=120.0, client=ma.cigma.pfe.models.Client#5, description=ismail, id=1}
2022-01-20 01:49:38.517 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=12.0, client=ma.cigma.pfe.models.Client#5, description=ismail, id=2}
2022-01-20 01:49:38.517 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=1}
2022-01-20 01:49:38.518 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#5]
2022-01-20 01:49:38.518 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 01:49:38.520 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 01:49:38.521 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-20 01:49:38.522 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 01:49:38.522 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:29.245 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-20 02:02:29.307 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 02:02:29.323 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 02:02:29.323 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 02:02:29.323 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 02:02:29.354 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 02:02:29.401 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 02:02:29.401 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 02:02:29.401 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 02:02:29.401 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 02:02:29.401 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 02:02:29.401 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 02:02:29.416 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 02:02:29.432 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 02:02:29.432 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 02:02:29.526 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 02:02:29.541 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 02:02:29.541 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 02:02:29.557 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-20 02:02:29.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 02:02:29.614 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 02:02:29.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-20 02:02:29.646 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-20 02:02:29.646 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 02:02:29.677 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 02:02:29.693 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 02:02:29.693 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 02:02:29.693 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 02:02:29.693 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 02:02:29.693 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 02:02:29.693 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 02:02:29.899 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 02:02:29.899 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 02:02:29.899 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 02:02:29.914 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 02:02:29.914 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 02:02:29.914 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 02:02:29.930 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a48a7f3]
2022-01-20 02:02:29.946 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 02:02:29.961 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 02:02:29.977 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 02:02:29.977 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 02:02:29.977 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 02:02:29.993 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 02:02:30.008 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 02:02:30.024 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 02:02:30.039 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-20 02:02:30.055 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-20 02:02:30.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-20 02:02:30.086 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 02:02:30.086 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 02:02:30.102 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-20 02:02:30.102 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@c269425, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-20 02:02:30.102 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-20 02:02:30.102 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-20 02:02:30.102 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59ce792e]
2022-01-20 02:02:30.149 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 02:02:30.149 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 02:02:30.243 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.258 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_3_ from Promotion promotion_ where promotion_.id=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-20 02:02:30.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671d03bb]
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_3_0_, promotion0_.description as descript2_3_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_1_, facture_.client_id as client_i4_1_, facture_.description as descript3_1_ from facture facture_ where facture_.id=?
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b70f41]
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 02:02:30.289 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfae028]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e3df614]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e87ef9e]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6588b715]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_1_0_, facture0_.amount as amount2_1_0_, facture0_.client_id as client_i4_1_0_, facture0_.description as descript3_1_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_, cartefidel2_.id as id1_0_2_, cartefidel2_.client_id as client_i3_0_2_, cartefidel2_.code as code2_0_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_4_ from TClients client_ where client_.id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8cea24]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d318e91]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298b64f7]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@740b6628]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe059d]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766a52f5]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_4_0_, client0_.name as name2_4_0_, cartefidel1_.id as id1_0_1_, cartefidel1_.client_id as client_i3_0_1_, cartefidel1_.code as code2_0_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_0_, cartefidel_.code as code2_0_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba1209b]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fd1214]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f0bab7e]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a7b2e2]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@337a6d30]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2921a36a]
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_0_, cartefidel0_.client_id as client_i3_0_0_, cartefidel0_.code as code2_0_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-20 02:02:30.305 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_1_, cartefidel0_.client_id as client_i3_0_1_, cartefidel0_.code as code2_0_1_, client1_.id as id1_4_0_, client1_.name as name2_4_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@262a1fad]
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be6931f]
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_2_0_, promotions0_.promotion_fk as promotio2_2_0_, promotion1_.id as id1_3_1_, promotion1_.description as descript2_3_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c240cf2]
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b7f805]
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-20 02:02:30.321 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_1_0_, factures0_.id as id1_1_0_, factures0_.id as id1_1_1_, factures0_.amount as amount2_1_1_, factures0_.client_id as client_i4_1_1_, factures0_.description as descript3_1_1_ from facture factures0_ where factures0_.client_id=?
2022-01-20 02:02:30.336 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-20 02:02:30.352 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5e9bbd9d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 02:02:30.369 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-20 02:02:30.369 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-20 02:02:30.369 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-20 02:02:30.385 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-20 02:02:30.385 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 02:02:30.385 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@61149fa5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 02:02:30.385 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 02:02:30.400 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-20 02:02:30.400 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 02:02:30.400 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 02:02:30.416 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 02:02:30.432 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 02:02:30.447 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-20 02:02:30.449 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-20 02:02:30.464 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-20 02:02:30.464 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-20 02:02:30.480 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 02:02:30.480 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 02:02:30.480 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-20 02:02:30.480 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-20 02:02:30.480 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 02:02:30.480 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4315c28c
2022-01-20 02:02:30.480 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: e8b0147e-d033-4707-87a0-9bc6e654d98f (<unnamed>)
2022-01-20 02:02:30.480 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-20 02:02:30.511 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-20 02:02:30.527 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-20 02:02:30.527 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 02:02:30.543 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.543 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.558 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 02:02:30.574 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=1}
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=1}
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 5
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.589 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#5], was: [<unreferenced>] (initialized)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#5], was: [<unreferenced>] (initialized)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=ma.cigma.pfe.models.Client#5, id=1}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=5}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=120.0, client=ma.cigma.pfe.models.Client#5, description=ismail, id=1}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=12.0, client=ma.cigma.pfe.models.Client#5, description=ismail, id=2}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=1}
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#5]
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 02:02:30.605 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:17.382 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-20 13:20:17.466 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 13:20:17.488 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 13:20:17.496 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 13:20:17.497 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 13:20:17.518 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 13:20:17.587 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 13:20:17.587 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 13:20:17.588 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 13:20:17.592 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 13:20:17.597 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 13:20:17.598 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 13:20:17.602 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 13:20:17.631 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 13:20:17.632 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 13:20:17.747 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 13:20:17.757 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 13:20:17.758 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 13:20:17.773 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 13:20:17.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 13:20:17.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 13:20:17.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 13:20:17.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-20 13:20:17.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-20 13:20:17.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-20 13:20:17.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 13:20:17.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 13:20:17.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 13:20:17.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 13:20:17.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-20 13:20:17.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 13:20:17.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 13:20:17.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 13:20:17.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-20 13:20:17.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 13:20:17.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 13:20:17.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 13:20:17.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 13:20:17.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 13:20:17.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-20 13:20:17.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 13:20:17.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 13:20:17.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-20 13:20:17.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 13:20:17.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 13:20:17.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 13:20:17.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 13:20:17.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 13:20:17.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 13:20:17.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 13:20:17.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 13:20:17.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 13:20:17.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-20 13:20:17.835 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-20 13:20:17.835 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-20 13:20:17.835 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-20 13:20:17.836 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 13:20:17.836 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 13:20:17.839 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 13:20:17.839 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 13:20:17.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 13:20:17.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 13:20:17.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 13:20:17.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 13:20:17.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 13:20:17.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 13:20:17.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 13:20:17.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 13:20:17.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 13:20:17.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 13:20:17.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 13:20:17.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 13:20:17.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-20 13:20:17.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-20 13:20:17.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 13:20:17.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 13:20:17.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 13:20:17.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 13:20:17.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 13:20:17.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-20 13:20:17.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 13:20:17.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 13:20:17.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 13:20:17.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-20 13:20:17.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-20 13:20:17.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 13:20:17.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 13:20:17.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 13:20:17.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 13:20:17.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 13:20:17.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 13:20:17.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 13:20:17.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 13:20:17.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 13:20:17.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 13:20:17.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-20 13:20:17.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 13:20:17.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 13:20:17.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 13:20:17.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 13:20:17.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 13:20:17.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 13:20:17.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-20 13:20:17.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-20 13:20:17.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 13:20:17.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 13:20:17.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 13:20:17.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 13:20:17.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 13:20:17.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 13:20:17.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-20 13:20:17.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-20 13:20:17.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 13:20:17.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 13:20:17.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-20 13:20:17.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 13:20:17.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 13:20:17.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 13:20:17.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 13:20:17.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-20 13:20:17.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-20 13:20:17.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-20 13:20:17.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 13:20:17.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 13:20:17.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 13:20:17.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 13:20:17.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 13:20:17.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 13:20:17.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 13:20:17.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 13:20:17.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 13:20:17.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-20 13:20:17.879 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-20 13:20:17.879 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-20 13:20:17.917 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 13:20:17.918 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 13:20:17.926 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 13:20:17.926 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 13:20:17.927 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 13:20:17.927 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 13:20:17.927 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 13:20:17.928 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 13:20:17.928 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 13:20:17.929 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 13:20:17.929 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 13:20:17.930 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 13:20:17.930 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 13:20:17.930 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 13:20:17.931 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 13:20:17.931 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 13:20:17.934 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 13:20:17.935 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 13:20:17.935 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 13:20:17.935 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 13:20:17.936 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 13:20:17.937 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 13:20:17.938 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 13:20:18.240 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 13:20:18.240 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 13:20:18.240 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 13:20:18.249 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 13:20:18.257 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 13:20:18.258 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 13:20:18.268 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a48a7f3]
2022-01-20 13:20:18.297 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 13:20:18.305 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 13:20:18.314 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:20:18.317 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 13:20:18.320 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 13:20:18.331 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.332 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 13:20:18.333 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 13:20:18.333 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:20:18.334 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 13:20:18.336 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:20:18.337 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:20:18.339 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:20:18.339 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.339 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 13:20:18.339 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 13:20:18.340 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 13:20:18.340 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 13:20:18.343 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 13:20:18.343 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:20:18.343 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 13:20:18.343 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 13:20:18.346 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.346 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 13:20:18.346 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 13:20:18.346 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:20:18.346 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 13:20:18.347 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:20:18.347 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:20:18.347 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:20:18.347 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.347 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 13:20:18.347 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 13:20:18.347 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 13:20:18.348 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 13:20:18.348 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 13:20:18.348 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.350 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 13:20:18.351 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.351 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 13:20:18.351 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 13:20:18.351 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 13:20:18.352 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 13:20:18.352 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.352 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:20:18.352 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 13:20:18.352 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 13:20:18.357 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.357 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 13:20:18.357 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 13:20:18.357 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:20:18.357 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 13:20:18.357 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:20:18.358 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:20:18.358 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:20:18.358 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:20:18.358 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.360 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:20:18.360 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.361 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.365 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.365 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.366 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 13:20:18.366 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:20:18.366 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:20:18.366 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 13:20:18.367 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 13:20:18.368 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.368 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 13:20:18.368 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 13:20:18.368 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 13:20:18.368 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 13:20:18.369 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.369 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.369 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.369 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 13:20:18.369 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 13:20:18.369 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 13:20:18.369 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:20:18.370 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 13:20:18.370 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:20:18.370 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:20:18.370 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 13:20:18.370 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 13:20:18.371 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.371 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 13:20:18.371 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:20:18.371 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:20:18.371 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 13:20:18.371 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:20:18.372 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:20:18.372 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:20:18.372 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 13:20:18.372 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.372 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 13:20:18.372 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 13:20:18.373 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 13:20:18.373 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 13:20:18.373 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 13:20:18.373 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 13:20:18.374 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:20:18.374 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 13:20:18.374 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:20:18.374 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 13:20:18.375 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 13:20:18.375 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:20:18.375 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 13:20:18.375 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:20:18.375 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 13:20:18.377 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-20 13:20:18.377 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-20 13:20:18.377 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-20 13:20:18.377 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-20 13:20:18.377 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:20:18.378 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:20:18.379 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-20 13:20:18.380 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-20 13:20:18.380 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 13:20:18.381 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-20 13:20:18.381 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-20 13:20:18.381 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-20 13:20:18.381 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-20 13:20:18.381 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 13:20:18.381 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.382 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.383 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 13:20:18.383 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.384 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 13:20:18.384 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.384 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.384 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 13:20:18.384 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.409 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-20 13:20:18.409 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-20 13:20:18.410 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-20 13:20:18.411 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-20 13:20:18.412 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-20 13:20:18.413 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-20 13:20:18.414 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-20 13:20:18.444 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 13:20:18.444 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 13:20:18.458 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-20 13:20:18.458 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@c269425, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-20 13:20:18.467 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-20 13:20:18.468 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-20 13:20:18.469 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59ce792e]
2022-01-20 13:20:18.501 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 13:20:18.501 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 13:20:18.612 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.613 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.613 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 13:20:18.613 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 13:20:18.621 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.621 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.622 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.623 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.623 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 13:20:18.623 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 13:20:18.635 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.635 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.636 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.636 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.636 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 13:20:18.636 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:20:18.640 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.640 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:20:18.646 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:20:18.647 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-20 13:20:18.647 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-20 13:20:18.647 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-20 13:20:18.647 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-20 13:20:18.648 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 13:20:18.648 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-20 13:20:18.648 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-20 13:20:18.648 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-20 13:20:18.648 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-20 13:20:18.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-20 13:20:18.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-20 13:20:18.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_3_ from Promotion promotion_ where promotion_.id=?
2022-01-20 13:20:18.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-20 13:20:18.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-20 13:20:18.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-20 13:20:18.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-20 13:20:18.664 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671d03bb]
2022-01-20 13:20:18.665 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:20:18.665 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:20:18.671 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:20:18.673 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_3_0_, promotion0_.description as descript2_3_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_1_, facture_.client_id as client_i4_1_, facture_.description as descript3_1_ from facture facture_ where facture_.id=?
2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-20 13:20:18.675 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-20 13:20:18.676 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b70f41]
2022-01-20 13:20:18.676 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 13:20:18.676 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 13:20:18.678 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfae028]
2022-01-20 13:20:18.679 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 13:20:18.679 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-20 13:20:18.679 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 13:20:18.680 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 13:20:18.680 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e3df614]
2022-01-20 13:20:18.681 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e87ef9e]
2022-01-20 13:20:18.681 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 13:20:18.681 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6588b715]
2022-01-20 13:20:18.681 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-20 13:20:18.681 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-20 13:20:18.682 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-20 13:20:18.682 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:20:18.682 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:20:18.682 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_1_0_, facture0_.amount as amount2_1_0_, facture0_.client_id as client_i4_1_0_, facture0_.description as descript3_1_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_, cartefidel2_.id as id1_0_2_, cartefidel2_.client_id as client_i3_0_2_, cartefidel2_.code as code2_0_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_4_ from TClients client_ where client_.id=?
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-20 13:20:18.683 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8cea24]
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d318e91]
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298b64f7]
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@740b6628]
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe059d]
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766a52f5]
2022-01-20 13:20:18.684 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-20 13:20:18.685 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-20 13:20:18.685 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-20 13:20:18.685 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:20:18.685 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:20:18.685 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-20 13:20:18.685 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_4_0_, client0_.name as name2_4_0_, cartefidel1_.id as id1_0_1_, cartefidel1_.client_id as client_i3_0_1_, cartefidel1_.code as code2_0_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_0_, cartefidel_.code as code2_0_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba1209b]
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fd1214]
2022-01-20 13:20:18.686 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f0bab7e]
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a7b2e2]
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@337a6d30]
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2921a36a]
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:20:18.687 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:20:18.688 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

2022-01-20 13:20:18.688 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_0_, cartefidel0_.client_id as client_i3_0_0_, cartefidel0_.code as code2_0_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-20 13:20:18.693 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_1_, cartefidel0_.client_id as client_i3_0_1_, cartefidel0_.code as code2_0_1_, client1_.id as id1_4_0_, client1_.name as name2_4_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-20 13:20:18.695 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@262a1fad]
2022-01-20 13:20:18.695 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be6931f]
2022-01-20 13:20:18.696 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:20:18.696 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:20:18.698 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:20:18.698 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2022-01-20 13:20:18.698 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_2_0_, promotions0_.promotion_fk as promotio2_2_0_, promotion1_.id as id1_3_1_, promotion1_.description as descript2_3_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-20 13:20:18.698 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c240cf2]
2022-01-20 13:20:18.698 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b7f805]
2022-01-20 13:20:18.698 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 13:20:18.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 13:20:18.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-20 13:20:18.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:20:18.699 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:20:18.699 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:20:18.699 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-20 13:20:18.700 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_1_0_, factures0_.id as id1_1_0_, factures0_.id as id1_1_1_, factures0_.amount as amount2_1_1_, factures0_.client_id as client_i4_1_1_, factures0_.description as descript3_1_1_ from facture factures0_ where factures0_.client_id=?
2022-01-20 13:20:18.726 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-20 13:20:18.727 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5e9bbd9d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 13:20:18.748 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-20 13:20:18.756 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-20 13:20:18.764 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-20 13:20:18.772 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-20 13:20:18.781 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:20:18.781 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@61149fa5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 13:20:18.787 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:20:18.792 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-20 13:20:18.797 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:20:18.802 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:20:18.807 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 13:20:18.823 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 13:20:18.838 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-20 13:20:18.853 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-20 13:20:18.870 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-20 13:20:18.870 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-20 13:20:18.873 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 13:20:18.873 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 13:20:18.874 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-20 13:20:18.874 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-20 13:20:18.876 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 13:20:18.879 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4315c28c
2022-01-20 13:20:18.880 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: c769614a-fedf-4ade-81ab-585505cb916e (<unnamed>)
2022-01-20 13:20:18.880 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-20 13:20:18.911 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-20 13:20:18.940 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-20 13:20:18.940 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:20:18.949 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:18.951 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:20:18.966 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:20:18.966 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:18.968 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:20:18.968 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:20:18.969 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:20:18.971 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-20 13:20:18.971 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:20:18.972 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:20:18.972 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:20:18.973 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.974 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.974 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:20:18.974 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:18.974 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:20:18.976 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:20:18.977 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.977 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.977 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:20:18.977 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:18.977 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:20:18.979 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 13:20:18.980 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:20:18.980 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:20:18.980 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.980 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.980 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:20:18.981 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:18.981 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:20:18.982 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-20 13:20:18.982 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:18.982 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:20:18.983 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.984 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.984 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:20:18.987 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:20:18.987 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:20:18.987 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:20:18.988 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-01-20 13:20:18.988 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:20:18.988 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:20:18.988 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 13:20:18.988 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:20:18.988 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:20:18.988 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:20:18.991 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-20 13:20:18.994 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.994 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:18.994 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:20:18.996 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:20:18.997 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:20:18.997 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-20 13:20:19.000 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:19.000 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:19.000 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:19.000 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:20:19.004 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:19.004 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:20:19.005 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 5
2022-01-20 13:20:19.005 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:19.006 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:19.006 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 13:20:19.008 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:20:19.008 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:19.008 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:19.008 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 13:20:19.009 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 13:20:19.009 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:19.009 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:19.009 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 13:20:19.011 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:20:19.011 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:19.012 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:19.012 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 13:20:19.013 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 13:20:19.013 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:19.014 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:20:19.014 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-20 13:20:19.015 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:20:19.015 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:20:19.015 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:20:19.016 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:20:19.016 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:20:19.017 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#5], was: [<unreferenced>] (initialized)
2022-01-20 13:20:19.017 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#5], was: [<unreferenced>] (initialized)
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=ma.cigma.pfe.models.Client#5, id=1}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=5}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=120.0, client=ma.cigma.pfe.models.Client#5, description=xxl, id=1}
2022-01-20 13:20:19.018 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=12.0, client=ma.cigma.pfe.models.Client#5, description=free, id=2}
2022-01-20 13:20:19.019 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#5]
2022-01-20 13:20:19.020 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 13:20:19.021 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 13:20:19.022 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-20 13:20:19.023 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:20:19.023 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:12.116 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-20 13:24:12.171 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 13:24:12.189 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 13:24:12.197 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 13:24:12.197 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 13:24:12.218 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 13:24:12.268 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 13:24:12.268 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 13:24:12.269 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 13:24:12.272 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 13:24:12.275 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 13:24:12.276 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 13:24:12.278 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 13:24:12.301 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 13:24:12.302 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 13:24:12.392 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 13:24:12.402 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 13:24:12.403 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 13:24:12.415 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 13:24:12.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 13:24:12.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 13:24:12.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 13:24:12.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-20 13:24:12.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-20 13:24:12.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-20 13:24:12.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 13:24:12.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 13:24:12.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 13:24:12.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 13:24:12.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-20 13:24:12.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 13:24:12.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 13:24:12.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 13:24:12.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-20 13:24:12.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 13:24:12.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 13:24:12.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 13:24:12.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 13:24:12.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 13:24:12.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-20 13:24:12.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 13:24:12.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 13:24:12.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-20 13:24:12.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 13:24:12.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 13:24:12.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 13:24:12.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 13:24:12.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 13:24:12.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 13:24:12.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 13:24:12.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 13:24:12.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 13:24:12.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-20 13:24:12.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-20 13:24:12.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-20 13:24:12.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-20 13:24:12.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 13:24:12.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 13:24:12.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 13:24:12.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 13:24:12.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 13:24:12.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 13:24:12.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 13:24:12.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 13:24:12.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 13:24:12.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 13:24:12.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 13:24:12.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 13:24:12.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 13:24:12.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 13:24:12.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 13:24:12.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 13:24:12.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-20 13:24:12.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-20 13:24:12.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 13:24:12.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 13:24:12.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 13:24:12.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 13:24:12.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 13:24:12.483 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-20 13:24:12.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 13:24:12.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 13:24:12.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 13:24:12.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-20 13:24:12.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-20 13:24:12.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 13:24:12.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 13:24:12.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 13:24:12.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 13:24:12.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 13:24:12.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 13:24:12.488 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 13:24:12.488 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 13:24:12.488 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 13:24:12.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 13:24:12.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-20 13:24:12.490 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 13:24:12.490 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 13:24:12.490 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 13:24:12.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 13:24:12.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 13:24:12.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 13:24:12.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-20 13:24:12.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-20 13:24:12.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 13:24:12.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 13:24:12.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 13:24:12.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 13:24:12.494 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 13:24:12.494 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 13:24:12.494 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-20 13:24:12.494 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-20 13:24:12.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 13:24:12.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 13:24:12.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-20 13:24:12.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 13:24:12.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 13:24:12.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 13:24:12.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 13:24:12.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-20 13:24:12.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-20 13:24:12.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-20 13:24:12.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 13:24:12.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 13:24:12.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 13:24:12.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 13:24:12.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 13:24:12.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 13:24:12.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 13:24:12.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 13:24:12.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 13:24:12.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-20 13:24:12.509 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-20 13:24:12.509 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-20 13:24:12.539 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 13:24:12.539 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 13:24:12.545 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 13:24:12.545 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 13:24:12.546 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 13:24:12.546 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 13:24:12.546 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 13:24:12.547 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 13:24:12.547 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 13:24:12.548 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 13:24:12.548 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 13:24:12.549 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 13:24:12.549 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 13:24:12.549 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 13:24:12.549 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 13:24:12.550 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 13:24:12.552 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 13:24:12.553 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 13:24:12.553 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 13:24:12.553 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 13:24:12.554 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 13:24:12.555 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 13:24:12.555 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 13:24:12.766 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 13:24:12.767 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 13:24:12.767 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 13:24:12.773 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 13:24:12.782 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 13:24:12.783 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 13:24:12.793 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a48a7f3]
2022-01-20 13:24:12.817 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 13:24:12.825 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 13:24:12.834 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:24:12.836 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 13:24:12.839 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 13:24:12.849 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.851 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 13:24:12.851 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 13:24:12.851 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:24:12.852 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 13:24:12.853 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:24:12.854 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:24:12.856 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:24:12.856 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.856 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 13:24:12.856 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 13:24:12.857 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 13:24:12.857 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 13:24:12.860 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 13:24:12.860 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:24:12.860 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 13:24:12.860 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 13:24:12.863 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.863 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 13:24:12.863 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 13:24:12.863 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:24:12.863 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 13:24:12.863 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:24:12.864 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:24:12.864 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:24:12.864 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.864 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 13:24:12.864 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 13:24:12.864 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 13:24:12.864 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 13:24:12.865 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 13:24:12.865 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.867 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 13:24:12.867 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.868 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 13:24:12.868 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 13:24:12.868 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 13:24:12.868 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 13:24:12.868 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 13:24:12.868 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:24:12.869 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 13:24:12.869 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 13:24:12.873 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.873 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 13:24:12.873 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 13:24:12.873 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:24:12.873 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 13:24:12.873 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:24:12.874 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:24:12.874 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:24:12.874 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:24:12.874 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.875 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:24:12.875 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.876 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.880 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.881 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.881 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 13:24:12.881 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:24:12.881 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 13:24:12.882 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 13:24:12.882 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 13:24:12.883 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.883 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 13:24:12.883 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 13:24:12.883 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 13:24:12.883 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 13:24:12.883 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.884 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.884 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.884 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 13:24:12.884 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 13:24:12.884 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 13:24:12.884 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:24:12.884 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 13:24:12.885 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:24:12.885 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 13:24:12.885 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 13:24:12.885 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 13:24:12.886 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.886 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 13:24:12.886 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:24:12.886 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 13:24:12.886 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 13:24:12.886 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 13:24:12.886 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 13:24:12.887 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 13:24:12.887 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 13:24:12.887 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.887 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 13:24:12.887 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 13:24:12.888 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 13:24:12.888 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 13:24:12.888 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 13:24:12.888 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 13:24:12.889 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:24:12.889 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 13:24:12.889 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:24:12.889 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 13:24:12.889 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 13:24:12.890 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:24:12.890 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 13:24:12.890 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 13:24:12.890 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 13:24:12.892 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-20 13:24:12.892 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-20 13:24:12.892 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-20 13:24:12.892 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-20 13:24:12.892 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:24:12.892 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:24:12.894 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-20 13:24:12.895 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-20 13:24:12.895 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 13:24:12.895 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-20 13:24:12.895 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-20 13:24:12.895 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-20 13:24:12.896 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-20 13:24:12.896 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 13:24:12.896 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:24:12.897 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:24:12.897 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 13:24:12.897 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:24:12.898 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 13:24:12.898 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:24:12.898 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:24:12.898 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 13:24:12.899 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 13:24:12.918 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-20 13:24:12.919 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-20 13:24:12.919 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-20 13:24:12.919 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-20 13:24:12.919 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-20 13:24:12.919 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-20 13:24:12.920 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-20 13:24:12.921 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-20 13:24:12.922 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-20 13:24:12.923 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-20 13:24:12.952 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 13:24:12.953 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 13:24:12.960 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-20 13:24:12.960 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@c269425, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-20 13:24:12.967 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-20 13:24:12.968 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-20 13:24:12.969 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ca93621] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59ce792e]
2022-01-20 13:24:12.998 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 13:24:12.999 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 13:24:13.096 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.097 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.097 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 13:24:13.098 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 13:24:13.105 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.105 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.106 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.107 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.107 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 13:24:13.107 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 13:24:13.119 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.119 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.120 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.120 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.120 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 13:24:13.120 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:24:13.124 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.125 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 13:24:13.130 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 13:24:13.130 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-20 13:24:13.130 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-20 13:24:13.130 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-20 13:24:13.130 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-20 13:24:13.131 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 13:24:13.131 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-20 13:24:13.131 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-20 13:24:13.131 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-20 13:24:13.132 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-20 13:24:13.134 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-20 13:24:13.134 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-20 13:24:13.134 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_3_ from Promotion promotion_ where promotion_.id=?
2022-01-20 13:24:13.134 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-20 13:24:13.134 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-20 13:24:13.134 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-20 13:24:13.134 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-20 13:24:13.145 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671d03bb]
2022-01-20 13:24:13.146 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:24:13.146 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:24:13.151 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:24:13.153 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2022-01-20 13:24:13.154 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_3_0_, promotion0_.description as descript2_3_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-20 13:24:13.154 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-20 13:24:13.154 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-20 13:24:13.154 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_1_, facture_.client_id as client_i4_1_, facture_.description as descript3_1_ from facture facture_ where facture_.id=?
2022-01-20 13:24:13.154 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-20 13:24:13.154 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-20 13:24:13.154 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-20 13:24:13.155 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-20 13:24:13.155 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b70f41]
2022-01-20 13:24:13.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 13:24:13.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 13:24:13.156 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bfae028]
2022-01-20 13:24:13.157 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 13:24:13.157 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-20 13:24:13.157 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 13:24:13.158 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 13:24:13.158 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e3df614]
2022-01-20 13:24:13.159 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e87ef9e]
2022-01-20 13:24:13.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 13:24:13.159 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6588b715]
2022-01-20 13:24:13.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-20 13:24:13.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-20 13:24:13.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-20 13:24:13.160 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:24:13.160 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:24:13.160 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_1_0_, facture0_.amount as amount2_1_0_, facture0_.client_id as client_i4_1_0_, facture0_.description as descript3_1_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_, cartefidel2_.id as id1_0_2_, cartefidel2_.client_id as client_i3_0_2_, cartefidel2_.code as code2_0_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_4_ from TClients client_ where client_.id=?
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-20 13:24:13.161 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a8cea24]
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d318e91]
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298b64f7]
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@740b6628]
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe059d]
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-20 13:24:13.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766a52f5]
2022-01-20 13:24:13.163 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-20 13:24:13.163 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-20 13:24:13.163 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-20 13:24:13.163 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:24:13.163 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:24:13.163 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-20 13:24:13.163 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_4_0_, client0_.name as name2_4_0_, cartefidel1_.id as id1_0_1_, cartefidel1_.client_id as client_i3_0_1_, cartefidel1_.code as code2_0_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_0_, cartefidel_.code as code2_0_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba1209b]
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fd1214]
2022-01-20 13:24:13.164 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f0bab7e]
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a7b2e2]
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@337a6d30]
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2921a36a]
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-20 13:24:13.165 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-20 13:24:13.166 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:24:13.166 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:24:13.166 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

2022-01-20 13:24:13.166 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_0_, cartefidel0_.client_id as client_i3_0_0_, cartefidel0_.code as code2_0_0_, client1_.id as id1_4_1_, client1_.name as name2_4_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-20 13:24:13.171 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_1_, cartefidel0_.client_id as client_i3_0_1_, cartefidel0_.code as code2_0_1_, client1_.id as id1_4_0_, client1_.name as name2_4_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-20 13:24:13.175 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@262a1fad]
2022-01-20 13:24:13.175 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be6931f]
2022-01-20 13:24:13.176 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:24:13.176 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:24:13.178 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:24:13.179 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2022-01-20 13:24:13.181 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_2_0_, promotions0_.promotion_fk as promotio2_2_0_, promotion1_.id as id1_3_1_, promotion1_.description as descript2_3_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-20 13:24:13.181 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c240cf2]
2022-01-20 13:24:13.181 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b7f805]
2022-01-20 13:24:13.181 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 13:24:13.181 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 13:24:13.181 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-20 13:24:13.182 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 13:24:13.182 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 13:24:13.182 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 13:24:13.183 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-20 13:24:13.183 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_1_0_, factures0_.id as id1_1_0_, factures0_.id as id1_1_1_, factures0_.amount as amount2_1_1_, factures0_.client_id as client_i4_1_1_, factures0_.description as descript3_1_1_ from facture factures0_ where factures0_.client_id=?
2022-01-20 13:24:13.204 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-20 13:24:13.205 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5e9bbd9d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 13:24:13.225 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-20 13:24:13.229 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-20 13:24:13.233 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-20 13:24:13.236 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-20 13:24:13.243 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:24:13.243 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@61149fa5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 13:24:13.248 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:24:13.253 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-20 13:24:13.258 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:24:13.263 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 13:24:13.267 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 13:24:13.282 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 13:24:13.297 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-20 13:24:13.311 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-20 13:24:13.327 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-20 13:24:13.327 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-20 13:24:13.330 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 13:24:13.330 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 13:24:13.331 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-20 13:24:13.331 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-20 13:24:13.333 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 13:24:13.336 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4315c28c
2022-01-20 13:24:13.336 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: cbb37bf8-f847-4afc-af76-40b2f627bd98 (<unnamed>)
2022-01-20 13:24:13.337 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-20 13:24:13.365 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-20 13:24:13.392 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-20 13:24:13.392 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:24:13.401 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.403 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:24:13.417 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:24:13.417 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.419 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:24:13.419 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:24:13.420 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:24:13.422 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-20 13:24:13.422 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:24:13.423 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:24:13.423 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:24:13.425 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.425 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.425 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:24:13.426 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.426 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:24:13.427 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 13:24:13.427 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.427 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:24:13.427 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.428 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:24:13.429 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.429 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:24:13.430 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:24:13.431 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:24:13.432 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.432 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.432 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:24:13.432 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.432 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:24:13.434 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:24:13.435 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 13:24:13.435 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:24:13.435 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:24:13.435 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:24:13.435 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.435 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.435 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:24:13.439 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:24:13.439 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:24:13.439 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:24:13.440 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-01-20 13:24:13.440 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:24:13.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:24:13.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 13:24:13.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:24:13.440 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:24:13.441 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:24:13.443 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-20 13:24:13.446 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.447 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.447 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:24:13.448 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:24:13.448 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:24:13.448 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 13:24:13.449 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-20 13:24:13.451 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.452 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.452 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 13:24:13.455 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.455 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 13:24:13.457 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 5
2022-01-20 13:24:13.457 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.458 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.458 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 13:24:13.460 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:24:13.460 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.460 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.460 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 13:24:13.461 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 13:24:13.461 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.461 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.462 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 13:24:13.464 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:24:13.464 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.464 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.464 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 13:24:13.465 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 13:24:13.465 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.465 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 13:24:13.466 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-20 13:24:13.467 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 13:24:13.467 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 13:24:13.467 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 13:24:13.467 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 13:24:13.467 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#5], was: [<unreferenced>] (initialized)
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#5], was: [<unreferenced>] (initialized)
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 9 objects
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=ma.cigma.pfe.models.Client#5, id=1}
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-20 13:24:13.469 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 13:24:13.470 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 13:24:13.470 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=5}
2022-01-20 13:24:13.470 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 13:24:13.470 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-20 13:24:13.470 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=120.0, client=ma.cigma.pfe.models.Client#5, description=xxl, id=1}
2022-01-20 13:24:13.470 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{amount=12.0, client=ma.cigma.pfe.models.Client#5, description=free, id=2}
2022-01-20 13:24:13.471 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#5]
2022-01-20 13:24:13.471 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 13:24:13.473 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 13:24:13.475 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-20 13:24:13.475 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.476 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 13:24:13.476 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 22:35:15.801 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-20 22:35:15.858 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 22:35:15.877 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 22:35:15.884 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 22:35:15.885 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 22:35:15.910 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 22:35:15.964 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 22:35:15.965 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 22:35:15.965 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 22:35:15.969 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 22:35:15.972 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 22:35:15.974 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 22:35:15.977 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 22:35:16.002 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 22:35:16.003 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 22:35:16.107 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 22:35:16.119 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 22:35:16.120 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 22:35:16.131 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 22:35:16.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 22:35:16.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 22:35:16.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 22:35:16.188 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-20 22:35:16.188 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-20 22:35:16.189 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-20 22:35:16.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 22:35:16.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 22:35:16.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 22:35:16.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 22:35:16.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-20 22:35:16.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 22:35:16.192 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 22:35:16.192 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 22:35:16.192 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-20 22:35:16.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 22:35:16.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 22:35:16.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 22:35:16.194 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 22:35:16.194 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 22:35:16.194 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-20 22:35:16.195 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 22:35:16.195 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 22:35:16.195 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-20 22:35:16.196 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 22:35:16.196 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 22:35:16.196 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 22:35:16.197 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 22:35:16.197 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 22:35:16.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 22:35:16.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 22:35:16.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 22:35:16.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 22:35:16.200 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-20 22:35:16.200 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-20 22:35:16.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-20 22:35:16.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-20 22:35:16.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 22:35:16.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 22:35:16.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 22:35:16.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 22:35:16.205 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 22:35:16.205 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 22:35:16.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 22:35:16.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 22:35:16.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 22:35:16.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 22:35:16.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 22:35:16.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 22:35:16.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 22:35:16.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 22:35:16.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 22:35:16.211 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 22:35:16.211 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-20 22:35:16.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-20 22:35:16.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 22:35:16.213 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 22:35:16.213 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 22:35:16.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 22:35:16.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 22:35:16.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-20 22:35:16.215 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 22:35:16.216 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 22:35:16.216 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 22:35:16.216 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-20 22:35:16.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-20 22:35:16.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 22:35:16.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 22:35:16.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 22:35:16.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 22:35:16.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 22:35:16.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 22:35:16.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 22:35:16.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 22:35:16.221 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 22:35:16.221 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 22:35:16.221 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-20 22:35:16.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 22:35:16.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 22:35:16.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 22:35:16.223 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 22:35:16.223 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 22:35:16.223 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 22:35:16.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-20 22:35:16.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-20 22:35:16.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 22:35:16.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 22:35:16.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 22:35:16.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 22:35:16.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 22:35:16.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 22:35:16.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-20 22:35:16.227 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-20 22:35:16.227 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 22:35:16.228 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 22:35:16.228 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-20 22:35:16.229 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 22:35:16.229 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 22:35:16.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 22:35:16.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 22:35:16.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-20 22:35:16.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-20 22:35:16.231 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-20 22:35:16.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 22:35:16.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 22:35:16.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 22:35:16.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 22:35:16.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 22:35:16.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 22:35:16.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 22:35:16.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 22:35:16.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 22:35:16.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-20 22:35:16.241 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-20 22:35:16.241 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-20 22:35:16.276 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 22:35:16.277 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 22:35:16.284 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 22:35:16.284 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 22:35:16.285 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 22:35:16.285 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 22:35:16.285 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 22:35:16.286 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 22:35:16.286 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 22:35:16.287 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 22:35:16.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 22:35:16.288 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 22:35:16.289 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 22:35:16.289 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 22:35:16.289 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 22:35:16.290 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 22:35:16.292 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 22:35:16.293 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 22:35:16.293 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 22:35:16.293 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 22:35:16.293 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 22:35:16.295 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 22:35:16.295 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 22:35:16.522 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 22:35:16.522 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 22:35:16.523 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 22:35:16.529 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 22:35:16.537 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 22:35:16.538 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 22:35:16.548 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f985a86] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57a2ed35]
2022-01-20 22:35:16.569 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 22:35:16.577 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 22:35:16.586 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 22:35:16.589 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 22:35:16.592 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 22:35:16.603 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.604 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 22:35:16.605 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 22:35:16.605 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 22:35:16.607 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 22:35:16.608 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 22:35:16.610 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 22:35:16.611 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 22:35:16.611 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.612 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 22:35:16.612 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 22:35:16.612 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 22:35:16.612 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 22:35:16.616 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 22:35:16.616 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 22:35:16.616 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 22:35:16.616 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 22:35:16.620 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.620 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 22:35:16.620 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 22:35:16.620 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 22:35:16.620 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 22:35:16.621 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 22:35:16.621 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 22:35:16.621 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 22:35:16.621 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.621 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 22:35:16.621 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 22:35:16.622 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 22:35:16.622 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 22:35:16.622 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 22:35:16.623 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.624 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 22:35:16.625 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.625 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 22:35:16.625 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 22:35:16.625 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 22:35:16.630 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 22:35:16.631 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-01-20 22:35:16.631 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=produits, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.631 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property produits
2022-01-20 22:35:16.631 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 22:35:16.632 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 22:35:16.632 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 22:35:16.632 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 22:35:16.636 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.636 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 22:35:16.636 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 22:35:16.636 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 22:35:16.637 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 22:35:16.637 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 22:35:16.637 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 22:35:16.637 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 22:35:16.637 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 22:35:16.637 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.638 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 22:35:16.639 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.639 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.644 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.644 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.644 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 22:35:16.644 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 22:35:16.645 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 22:35:16.645 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 22:35:16.646 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 22:35:16.647 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.647 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 22:35:16.647 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 22:35:16.647 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 22:35:16.647 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 22:35:16.647 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 22:35:16.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 22:35:16.648 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 22:35:16.648 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 22:35:16.648 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 22:35:16.649 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 22:35:16.649 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 22:35:16.649 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 22:35:16.649 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 22:35:16.650 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.650 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 22:35:16.650 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 22:35:16.650 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 22:35:16.650 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 22:35:16.651 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 22:35:16.651 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 22:35:16.651 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 22:35:16.651 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 22:35:16.651 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.651 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 22:35:16.652 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.652 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 22:35:16.652 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 22:35:16.652 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 22:35:16.652 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 22:35:16.652 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Produit
2022-01-20 22:35:16.652 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 22:35:16.653 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Produit
2022-01-20 22:35:16.653 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Produit on table Produit
2022-01-20 22:35:16.653 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.653 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Produit] is safe
2022-01-20 22:35:16.653 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Produit
2022-01-20 22:35:16.653 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:id]
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:name]
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 22:35:16.654 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 22:35:16.655 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=price, insertable=true, updatable=true, unique=false}
2022-01-20 22:35:16.655 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property price with lazy=false
2022-01-20 22:35:16.655 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:price]
2022-01-20 22:35:16.655 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for price
2022-01-20 22:35:16.655 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property price
2022-01-20 22:35:16.656 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 22:35:16.656 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 22:35:16.656 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 22:35:16.656 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 22:35:16.657 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for price
2022-01-20 22:35:16.659 INFO [main][org.hibernate.orm.connections.pooling] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.stop(DriverManagerConnectionProviderImpl.java:502)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 22:35:16.671 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2022-01-20 22:35:16.672 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'idCtrl' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'idService' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'idService' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'idDao' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'idDao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.ClientDaoImpl]: Constructor threw exception; nested exception is org.hibernate.AnnotationException: @OneToOne or @ManyToOne on ma.cigma.pfe.models.facture.produits references an unknown entity: java.util.List
2022-01-20 23:32:19.276 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-20 23:32:19.337 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-20 23:32:19.356 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-20 23:32:19.364 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-20 23:32:19.364 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-20 23:32:19.388 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-20 23:32:19.447 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-20 23:32:19.447 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-20 23:32:19.448 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-20 23:32:19.451 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-20 23:32:19.454 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-20 23:32:19.455 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-20 23:32:19.458 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-20 23:32:19.483 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-20 23:32:19.484 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-20 23:32:19.584 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-20 23:32:19.596 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-20 23:32:19.597 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-20 23:32:19.610 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-20 23:32:19.656 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 23:32:19.657 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 23:32:19.657 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-20 23:32:19.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-20 23:32:19.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-20 23:32:19.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-20 23:32:19.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 23:32:19.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 23:32:19.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-20 23:32:19.661 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 23:32:19.661 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-20 23:32:19.661 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-20 23:32:19.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 23:32:19.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-20 23:32:19.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-20 23:32:19.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 23:32:19.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 23:32:19.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-20 23:32:19.664 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 23:32:19.664 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-20 23:32:19.664 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-20 23:32:19.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 23:32:19.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-20 23:32:19.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-20 23:32:19.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 23:32:19.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 23:32:19.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-20 23:32:19.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 23:32:19.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-20 23:32:19.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 23:32:19.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-20 23:32:19.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 23:32:19.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-20 23:32:19.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-20 23:32:19.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-20 23:32:19.671 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-20 23:32:19.671 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-20 23:32:19.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 23:32:19.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-20 23:32:19.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 23:32:19.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-20 23:32:19.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 23:32:19.676 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-20 23:32:19.676 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 23:32:19.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-20 23:32:19.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 23:32:19.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-20 23:32:19.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 23:32:19.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-20 23:32:19.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 23:32:19.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-20 23:32:19.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 23:32:19.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-20 23:32:19.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-20 23:32:19.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-20 23:32:19.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 23:32:19.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-20 23:32:19.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 23:32:19.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 23:32:19.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-20 23:32:19.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-20 23:32:19.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 23:32:19.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 23:32:19.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-20 23:32:19.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-20 23:32:19.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-20 23:32:19.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 23:32:19.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-20 23:32:19.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 23:32:19.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-20 23:32:19.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 23:32:19.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-20 23:32:19.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 23:32:19.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-20 23:32:19.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 23:32:19.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-20 23:32:19.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-20 23:32:19.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 23:32:19.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 23:32:19.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-20 23:32:19.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 23:32:19.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 23:32:19.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-20 23:32:19.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-20 23:32:19.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-20 23:32:19.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 23:32:19.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 23:32:19.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-20 23:32:19.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 23:32:19.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 23:32:19.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-20 23:32:19.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-20 23:32:19.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-20 23:32:19.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 23:32:19.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-20 23:32:19.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-20 23:32:19.698 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 23:32:19.698 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-20 23:32:19.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 23:32:19.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-20 23:32:19.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-20 23:32:19.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-20 23:32:19.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-20 23:32:19.702 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 23:32:19.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-20 23:32:19.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-20 23:32:19.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-20 23:32:19.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-20 23:32:19.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-20 23:32:19.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-20 23:32:19.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-20 23:32:19.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-20 23:32:19.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-20 23:32:19.712 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-20 23:32:19.712 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-20 23:32:19.748 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-20 23:32:19.749 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-20 23:32:19.756 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-20 23:32:19.756 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-20 23:32:19.757 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 23:32:19.757 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-20 23:32:19.758 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-20 23:32:19.758 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-20 23:32:19.759 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-20 23:32:19.759 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 23:32:19.760 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-20 23:32:19.760 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-20 23:32:19.761 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-20 23:32:19.761 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-20 23:32:19.761 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-20 23:32:19.762 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-20 23:32:19.765 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-20 23:32:19.765 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-20 23:32:19.766 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-20 23:32:19.766 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-20 23:32:19.766 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-20 23:32:19.768 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-20 23:32:19.768 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-20 23:32:20.001 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-20 23:32:20.001 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-20 23:32:20.002 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-20 23:32:20.009 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-20 23:32:20.017 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-20 23:32:20.018 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-20 23:32:20.029 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d278b4d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4096aa05]
2022-01-20 23:32:20.050 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-20 23:32:20.058 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-20 23:32:20.068 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 23:32:20.070 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-20 23:32:20.074 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-20 23:32:20.091 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.093 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 23:32:20.093 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 23:32:20.093 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 23:32:20.094 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-20 23:32:20.096 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 23:32:20.097 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 23:32:20.098 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 23:32:20.099 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.099 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 23:32:20.099 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-20 23:32:20.099 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 23:32:20.099 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 23:32:20.103 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-20 23:32:20.103 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 23:32:20.103 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-20 23:32:20.103 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-20 23:32:20.108 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.108 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 23:32:20.108 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 23:32:20.108 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 23:32:20.109 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-20 23:32:20.109 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 23:32:20.109 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 23:32:20.109 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 23:32:20.109 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.109 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-20 23:32:20.110 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-20 23:32:20.110 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-20 23:32:20.110 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-20 23:32:20.111 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 23:32:20.111 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.113 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 23:32:20.113 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.113 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-20 23:32:20.114 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-20 23:32:20.114 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-20 23:32:20.114 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-20 23:32:20.115 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.119 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.120 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=produits_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.120 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='produits_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 23:32:20.121 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-20 23:32:20.121 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-20 23:32:20.121 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.facture.produits
2022-01-20 23:32:20.122 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property produits
2022-01-20 23:32:20.123 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.123 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 23:32:20.123 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-20 23:32:20.123 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-20 23:32:20.126 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.126 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 23:32:20.126 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 23:32:20.127 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 23:32:20.127 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-20 23:32:20.127 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 23:32:20.127 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 23:32:20.127 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 23:32:20.127 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 23:32:20.127 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.128 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 23:32:20.128 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.128 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.129 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.129 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.129 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 23:32:20.129 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 23:32:20.129 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-20 23:32:20.129 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-20 23:32:20.129 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-20 23:32:20.130 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.130 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 23:32:20.130 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-20 23:32:20.130 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 23:32:20.130 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 23:32:20.130 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.131 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.131 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.131 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-20 23:32:20.131 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-20 23:32:20.131 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-20 23:32:20.131 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-20 23:32:20.131 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-20 23:32:20.132 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-20 23:32:20.132 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 23:32:20.132 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-20 23:32:20.132 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 23:32:20.133 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-20 23:32:20.134 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-20 23:32:20.135 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Produit
2022-01-20 23:32:20.135 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-20 23:32:20.135 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Produit
2022-01-20 23:32:20.135 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Produit on table Produit
2022-01-20 23:32:20.135 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.135 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Produit] is safe
2022-01-20 23:32:20.135 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Produit
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:id]
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:name]
2022-01-20 23:32:20.136 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-20 23:32:20.137 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-20 23:32:20.137 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=price, insertable=true, updatable=true, unique=false}
2022-01-20 23:32:20.137 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property price with lazy=false
2022-01-20 23:32:20.137 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:price]
2022-01-20 23:32:20.137 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for price
2022-01-20 23:32:20.137 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property price
2022-01-20 23:32:20.138 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 23:32:20.138 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-20 23:32:20.139 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for price
2022-01-20 23:32:20.141 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-20 23:32:20.142 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-20 23:32:20.142 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-20 23:32:20.142 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-20 23:32:20.142 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [produit]
2022-01-20 23:32:20.142 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 23:32:20.142 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-20 23:32:20.144 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-20 23:32:20.144 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.facture.produits
2022-01-20 23:32:20.144 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.facture.produits
2022-01-20 23:32:20.146 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: facture_id, element: produits_id
2022-01-20 23:32:20.147 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-20 23:32:20.147 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 23:32:20.147 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-20 23:32:20.147 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-20 23:32:20.147 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-20 23:32:20.148 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-20 23:32:20.148 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 23:32:20.148 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.149 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.149 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Produit
2022-01-20 23:32:20.149 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-20 23:32:20.150 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 23:32:20.150 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.151 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-20 23:32:20.151 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.151 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.151 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Produit
2022-01-20 23:32:20.151 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-20 23:32:20.151 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-20 23:32:20.151 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.172 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-20 23:32:20.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-20 23:32:20.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-20 23:32:20.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-20 23:32:20.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-20 23:32:20.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-20 23:32:20.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-20 23:32:20.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-20 23:32:20.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-20 23:32:20.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-20 23:32:20.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-20 23:32:20.204 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 23:32:20.205 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 23:32:20.215 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-20 23:32:20.215 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77f68df, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-20 23:32:20.224 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-20 23:32:20.225 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-20 23:32:20.225 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d278b4d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@642413d4]
2022-01-20 23:32:20.256 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-20 23:32:20.256 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-20 23:32:20.366 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.368 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.369 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-20 23:32:20.369 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-20 23:32:20.379 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.380 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.380 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.380 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.380 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-20 23:32:20.380 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-20 23:32:20.388 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.388 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.388 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.388 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.388 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-20 23:32:20.388 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-20 23:32:20.392 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.393 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-20 23:32:20.393 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Produit] is safe
2022-01-20 23:32:20.393 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Produit
2022-01-20 23:32:20.403 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-20 23:32:20.403 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-20 23:32:20.403 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-20 23:32:20.403 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-20 23:32:20.403 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-20 23:32:20.404 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-20 23:32:20.404 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-20 23:32:20.404 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-20 23:32:20.405 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-20 23:32:20.405 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-20 23:32:20.405 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.facture.produits
2022-01-20 23:32:20.405 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into facture_Produit (facture_id, produits_id) values (?, ?)
2022-01-20 23:32:20.405 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture_Produit set produits_id=? where facture_id=? and produits_id=?
2022-01-20 23:32:20.405 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from facture_Produit where facture_id=? and produits_id=?
2022-01-20 23:32:20.405 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from facture_Produit where facture_id=?
2022-01-20 23:32:20.408 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-20 23:32:20.408 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-20 23:32:20.409 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_5_ from Promotion promotion_ where promotion_.id=?
2022-01-20 23:32:20.409 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-20 23:32:20.409 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-20 23:32:20.409 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-20 23:32:20.409 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-20 23:32:20.424 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28157173]
2022-01-20 23:32:20.425 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 23:32:20.425 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.431 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.433 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_5_0_, promotion0_.description as descript2_5_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_1_, facture_.client_id as client_i4_1_, facture_.description as descript3_1_ from facture facture_ where facture_.id=?
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-20 23:32:20.434 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4998e74b]
2022-01-20 23:32:20.435 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 23:32:20.435 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 23:32:20.436 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e245739]
2022-01-20 23:32:20.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 23:32:20.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-20 23:32:20.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 23:32:20.437 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 23:32:20.438 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@691124ee]
2022-01-20 23:32:20.439 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de4bee0]
2022-01-20 23:32:20.439 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 23:32:20.439 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be6931f]
2022-01-20 23:32:20.440 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-20 23:32:20.440 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-20 23:32:20.440 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-20 23:32:20.440 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 23:32:20.440 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : produits
2022-01-20 23:32:20.440 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fecfaea]
2022-01-20 23:32:20.441 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4872669f]
2022-01-20 23:32:20.441 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.441 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.442 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.facture.produits, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.facture.produits)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:6>, path=ma.cigma.pfe.models.facture.produits.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

2022-01-20 23:32:20.442 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_1_0_, facture0_.amount as amount2_1_0_, facture0_.client_id as client_i4_1_0_, facture0_.description as descript3_1_0_, client1_.id as id1_6_1_, client1_.name as name2_6_1_, cartefidel2_.id as id1_0_2_, cartefidel2_.client_id as client_i3_0_2_, cartefidel2_.code as code2_0_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-20 23:32:20.442 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_6_ from TClients client_ where client_.id=?
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ef01a5]
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@186d8a71]
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dc40ab9]
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2db6d68d]
2022-01-20 23:32:20.443 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6518fdfd]
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d2dd2d]
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-20 23:32:20.444 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_6_0_, client0_.name as name2_6_0_, cartefidel1_.id as id1_0_1_, cartefidel1_.client_id as client_i3_0_1_, cartefidel1_.code as code2_0_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_0_, cartefidel_.code as code2_0_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@174721c4]
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322e49ee]
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@648c5fb3]
2022-01-20 23:32:20.445 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47b33e07]
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7126e26]
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@151ab2b9]
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.446 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.447 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

2022-01-20 23:32:20.447 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_0_, cartefidel0_.client_id as client_i3_0_0_, cartefidel0_.code as code2_0_0_, client1_.id as id1_6_1_, client1_.name as name2_6_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-20 23:32:20.451 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_0_1_, cartefidel0_.client_id as client_i3_0_1_, cartefidel0_.code as code2_0_1_, client1_.id as id1_6_0_, client1_.name as name2_6_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Produit
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Produit where id =?
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select produit_.id, produit_.name as name2_4_, produit_.price as price3_4_ from Produit produit_ where produit_.id=?
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Produit (name, price, id) values (?, ?, ?)
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Produit set name=?, price=? where id=?
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Produit where id=?
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Produit (name, price) values (?, ?)
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bc6da03]
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : price
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.452 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.453 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Produit)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Produit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Produit)
          - SQL table alias mapping - produit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

2022-01-20 23:32:20.453 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Produit [NONE]: select produit0_.id as id1_4_0_, produit0_.name as name2_4_0_, produit0_.price as price3_4_0_ from Produit produit0_ where produit0_.id=?
2022-01-20 23:32:20.455 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5232e3f1]
2022-01-20 23:32:20.455 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c8fe7a4]
2022-01-20 23:32:20.459 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 23:32:20.459 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.461 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.461 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_3_0_, promotions0_.promotion_fk as promotio2_3_0_, promotion1_.id as id1_5_1_, promotion1_.description as descript2_5_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4db77402]
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c48264]
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : produits
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2dafae61]
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2fce12]
2022-01-20 23:32:20.462 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.463 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.465 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.facture.produits, querySpaceUid=<gen:2>, path=[ma.cigma.pfe.models.Client.factures].<elements>.produits)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:3>, path=[ma.cigma.pfe.models.Client.factures].<elements>.produits.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-20 23:32:20.465 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_1_0_, factures0_.id as id1_1_0_, factures0_.id as id1_1_1_, factures0_.amount as amount2_1_1_, factures0_.client_id as client_i4_1_1_, factures0_.description as descript3_1_1_ from facture factures0_ where factures0_.client_id=?
2022-01-20 23:32:20.465 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f66d8e1]
2022-01-20 23:32:20.465 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@721d5b74]
2022-01-20 23:32:20.466 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-20 23:32:20.466 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : price
2022-01-20 23:32:20.466 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-20 23:32:20.466 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-20 23:32:20.466 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.facture.produits)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.facture.produits, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.facture.produits])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.facture.produits].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.facture.produits)
          - SQL table alias mapping - produits0_
          - alias suffix - 0_
          - suffixed key columns - {facture_1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Produit)
                - SQL table alias mapping - produit1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

2022-01-20 23:32:20.466 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.facture.produits: select produits0_.facture_id as facture_1_2_0_, produits0_.produits_id as produits2_2_0_, produit1_.id as id1_4_1_, produit1_.name as name2_4_1_, produit1_.price as price3_4_1_ from facture_Produit produits0_ inner join Produit produit1_ on produits0_.produits_id=produit1_.id where produits0_.facture_id=?
2022-01-20 23:32:20.489 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-20 23:32:20.490 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@72028a45] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 23:32:20.535 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-20 23:32:20.540 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture_Produit
2022-01-20 23:32:20.547 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-20 23:32:20.552 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Produit
2022-01-20 23:32:20.554 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-20 23:32:20.557 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-20 23:32:20.567 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 23:32:20.567 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@383cb5ce] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-20 23:32:20.573 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-20 23:32:20.579 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture_Produit (
       facture_id bigint not null,
        produits_id bigint not null
    ) engine=MyISAM
2022-01-20 23:32:20.583 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-20 23:32:20.588 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Produit (
       id bigint not null auto_increment,
        name varchar(255),
        price integer not null,
        primary key (id)
    ) engine=MyISAM
2022-01-20 23:32:20.592 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 23:32:20.596 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-20 23:32:20.601 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 23:32:20.620 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-20 23:32:20.637 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture_Produit 
       add constraint FK5yogsykm541fosesosbl2yixo 
       foreign key (produits_id) 
       references Produit (id)
2022-01-20 23:32:20.652 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture_Produit 
       add constraint FKmmc97h2urn92obgwojn82ko56 
       foreign key (facture_id) 
       references facture (id)
2022-01-20 23:32:20.670 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-20 23:32:20.683 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-20 23:32:20.698 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-20 23:32:20.698 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-20 23:32:20.701 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 23:32:20.701 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-20 23:32:20.702 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-20 23:32:20.702 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-20 23:32:20.704 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-20 23:32:20.708 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f7cec93
2022-01-20 23:32:20.709 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 4ae44aef-d3cc-41f4-ad73-51c0650cf393 (<unnamed>)
2022-01-20 23:32:20.709 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-20 23:32:20.740 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-20 23:32:20.766 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-20 23:32:20.766 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 23:32:20.776 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.777 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 23:32:20.790 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 23:32:20.790 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.792 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 23:32:20.792 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 23:32:20.793 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 23:32:20.795 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-20 23:32:20.795 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 23:32:20.796 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 23:32:20.796 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 23:32:20.797 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.798 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.798 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 23:32:20.798 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.798 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 23:32:20.799 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 23:32:20.800 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.800 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.800 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 23:32:20.800 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.801 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 23:32:20.802 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 23:32:20.803 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.803 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.803 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 23:32:20.803 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.803 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, factures=null, id=3}
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 23:32:20.805 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 23:32:20.806 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.806 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.806 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 23:32:20.810 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 23:32:20.810 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 23:32:20.810 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 23:32:20.811 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-01-20 23:32:20.811 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 23:32:20.811 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 23:32:20.811 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 23:32:20.811 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 23:32:20.811 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 23:32:20.811 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 23:32:20.814 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-20 23:32:20.817 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.817 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.817 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 23:32:20.819 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 23:32:20.820 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 23:32:20.820 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, factures=null, id=1}
2022-01-20 23:32:20.820 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-20 23:32:20.822 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.822 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.822 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-20 23:32:20.826 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.826 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-20 23:32:20.828 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 5
2022-01-20 23:32:20.828 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.829 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.829 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 23:32:20.832 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 23:32:20.832 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.832 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.833 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Produit
        (name, price) 
    values
        (?, ?)
2022-01-20 23:32:20.835 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 23:32:20.835 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.835 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.835 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-20 23:32:20.837 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 23:32:20.837 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.837 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.837 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 23:32:20.839 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 23:32:20.839 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.840 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.840 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-20 23:32:20.841 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-20 23:32:20.841 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.841 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-20 23:32:20.841 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-20 23:32:20.843 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-20 23:32:20.843 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-20 23:32:20.843 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-20 23:32:20.843 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-20 23:32:20.844 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-20 23:32:20.845 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#5], was: [<unreferenced>] (initialized)
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#5], was: [<unreferenced>] (initialized)
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.facture.produits#1], was: [<unreferenced>] (initialized)
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.facture.produits#2], was: [<unreferenced>] (initialized)
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 10 objects
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 4 (re)creations, 0 updates, 0 removals to 4 collections
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Produit{price=45, name=is, id=1}
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=ma.cigma.pfe.models.Client#5, id=1}
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, factures=null, id=3}
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, factures=null, id=2}
2022-01-20 23:32:20.846 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=5}
2022-01-20 23:32:20.847 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, factures=null, id=4}
2022-01-20 23:32:20.847 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-20 23:32:20.847 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{produits=[ma.cigma.pfe.models.Produit#1], amount=120.0, client=ma.cigma.pfe.models.Client#5, description=xxl, id=1}
2022-01-20 23:32:20.847 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{produits=[ma.cigma.pfe.models.Produit#1], amount=12.0, client=ma.cigma.pfe.models.Client#5, description=free, id=2}
2022-01-20 23:32:20.848 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#5]
2022-01-20 23:32:20.848 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 23:32:20.849 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-20 23:32:20.850 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-20 23:32:20.851 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.facture.produits#1]
2022-01-20 23:32:20.851 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture_Produit
        (facture_id, produits_id) 
    values
        (?, ?)
2022-01-20 23:32:20.852 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 1 rows inserted
2022-01-20 23:32:20.852 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.facture.produits#2]
2022-01-20 23:32:20.852 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture_Produit
        (facture_id, produits_id) 
    values
        (?, ?)
2022-01-20 23:32:20.853 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 1 rows inserted
2022-01-20 23:32:20.854 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.854 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-20 23:32:20.854 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:45.973 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ab9e72c
2022-01-21 00:20:46.031 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-21 00:20:46.050 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idCtrl'
2022-01-21 00:20:46.058 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idService'
2022-01-21 00:20:46.058 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'idDao'
2022-01-21 00:20:46.082 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-21 00:20:46.132 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-01-21 00:20:46.133 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-01-21 00:20:46.133 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-21 00:20:46.137 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Ismai/Desktop/tp8_client/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.password: ismail
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		javax.persistence.cj.jdbc.driver: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-01-21 00:20:46.140 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-21 00:20:46.141 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-21 00:20:46.144 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-21 00:20:46.168 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.3.Final
2022-01-21 00:20:46.169 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-01-21 00:20:46.266 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-21 00:20:46.276 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-01-21 00:20:46.277 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-21 00:20:46.289 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-01-21 00:20:46.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-21 00:20:46.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-21 00:20:46.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2555fff0
2022-01-21 00:20:46.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@702ed190
2022-01-21 00:20:46.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70e29e14
2022-01-21 00:20:46.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2449cff7
2022-01-21 00:20:46.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-21 00:20:46.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@6b9267b
2022-01-21 00:20:46.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b9267b
2022-01-21 00:20:46.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@726386ed
2022-01-21 00:20:46.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@726386ed
2022-01-21 00:20:46.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@726386ed
2022-01-21 00:20:46.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-21 00:20:46.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@51650883
2022-01-21 00:20:46.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51650883
2022-01-21 00:20:46.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-21 00:20:46.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@241a53ef
2022-01-21 00:20:46.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@241a53ef
2022-01-21 00:20:46.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-21 00:20:46.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@31500940
2022-01-21 00:20:46.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31500940
2022-01-21 00:20:46.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-21 00:20:46.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@200606de
2022-01-21 00:20:46.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200606de
2022-01-21 00:20:46.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-21 00:20:46.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-21 00:20:46.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e11bc55
2022-01-21 00:20:46.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-21 00:20:46.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@82c57b3
2022-01-21 00:20:46.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1734f68
2022-01-21 00:20:46.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1734f68
2022-01-21 00:20:46.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7dac3fd8
2022-01-21 00:20:46.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7dac3fd8
2022-01-21 00:20:46.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d4d3fe7
2022-01-21 00:20:46.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38875e7d
2022-01-21 00:20:46.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@47747fb9
2022-01-21 00:20:46.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47747fb9
2022-01-21 00:20:46.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@c41709a
2022-01-21 00:20:46.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c41709a
2022-01-21 00:20:46.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-21 00:20:46.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dddbe65
2022-01-21 00:20:46.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-21 00:20:46.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@251f7d26
2022-01-21 00:20:46.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-21 00:20:46.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60d84f61
2022-01-21 00:20:46.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-21 00:20:46.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2575f671
2022-01-21 00:20:46.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-21 00:20:46.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30c0ccff
2022-01-21 00:20:46.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-21 00:20:46.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5851bd4f
2022-01-21 00:20:46.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-21 00:20:46.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@547e29a4
2022-01-21 00:20:46.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@7048f722
2022-01-21 00:20:46.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7048f722
2022-01-21 00:20:46.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@2d0566ba
2022-01-21 00:20:46.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d0566ba
2022-01-21 00:20:46.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-21 00:20:46.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1af7f54a
2022-01-21 00:20:46.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1af7f54a
2022-01-21 00:20:46.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68ed96ca
2022-01-21 00:20:46.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-21 00:20:46.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-21 00:20:46.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29d2d081
2022-01-21 00:20:46.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62c5bbdc
2022-01-21 00:20:46.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@160c3ec1
2022-01-21 00:20:46.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-21 00:20:46.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60afd40d
2022-01-21 00:20:46.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-21 00:20:46.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33c2bd
2022-01-21 00:20:46.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-21 00:20:46.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f0628de
2022-01-21 00:20:46.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@74d7184a
2022-01-21 00:20:46.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74d7184a
2022-01-21 00:20:46.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-21 00:20:46.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18e8473e
2022-01-21 00:20:46.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6058e535
2022-01-21 00:20:46.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@79f227a9
2022-01-21 00:20:46.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@79f227a9
2022-01-21 00:20:46.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@79f227a9
2022-01-21 00:20:46.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-21 00:20:46.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-21 00:20:46.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@619bd14c
2022-01-21 00:20:46.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@15deb1dc
2022-01-21 00:20:46.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@3a45c42a
2022-01-21 00:20:46.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@32c0915e
2022-01-21 00:20:46.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@32c0915e
2022-01-21 00:20:46.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@32c0915e
2022-01-21 00:20:46.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-21 00:20:46.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-21 00:20:46.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@22ee2d0
2022-01-21 00:20:46.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@26f143ed
2022-01-21 00:20:46.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@54a3ab8f
2022-01-21 00:20:46.372 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@41de5768
2022-01-21 00:20:46.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@41de5768
2022-01-21 00:20:46.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e041f0c
2022-01-21 00:20:46.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@437e951d
2022-01-21 00:20:46.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@437e951d
2022-01-21 00:20:46.375 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-21 00:20:46.375 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d4d48a6
2022-01-21 00:20:46.375 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7b02e036
2022-01-21 00:20:46.375 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4201a617
2022-01-21 00:20:46.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b31700
2022-01-21 00:20:46.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-21 00:20:46.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49bd54f7
2022-01-21 00:20:46.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ab3a71
2022-01-21 00:20:46.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e5bfdfc
2022-01-21 00:20:46.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d829787
2022-01-21 00:20:46.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71652c98
2022-01-21 00:20:46.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51bde877
2022-01-21 00:20:46.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60b85ba1
2022-01-21 00:20:46.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@492fc69e
2022-01-21 00:20:46.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117632cf
2022-01-21 00:20:46.386 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6650813a] into BootstrapContext; was [null]
2022-01-21 00:20:46.386 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@44ea608c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50cf5a23]
2022-01-21 00:20:46.417 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-01-21 00:20:46.418 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-01-21 00:20:46.424 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-21 00:20:46.424 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-21 00:20:46.424 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-21 00:20:46.425 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-21 00:20:46.425 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-21 00:20:46.425 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-21 00:20:46.426 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-21 00:20:46.426 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-21 00:20:46.427 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-21 00:20:46.427 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-21 00:20:46.428 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-21 00:20:46.428 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-21 00:20:46.428 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-21 00:20:46.429 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-21 00:20:46.433 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-21 00:20:46.434 DEBUG [main][org.hibernate.orm.connections.pooling] [loadDriverIfPossible] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.loadDriverIfPossible(DriverManagerConnectionProviderImpl.java:143)] - No driver class specified
2022-01-21 00:20:46.434 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true]
2022-01-21 00:20:46.434 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=ismail, user=root}
2022-01-21 00:20:46.434 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-01-21 00:20:46.436 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-21 00:20:46.436 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-21 00:20:46.658 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-21 00:20:46.658 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-01-21 00:20:46.658 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-21 00:20:46.664 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-21 00:20:46.672 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-21 00:20:46.673 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-21 00:20:46.684 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c806c8b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6dfcffb5]
2022-01-21 00:20:46.705 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-21 00:20:46.712 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Promotion
2022-01-21 00:20:46.722 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-21 00:20:46.725 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Promotion
2022-01-21 00:20:46.729 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Promotion on table Promotion
2022-01-21 00:20:46.740 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.741 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-21 00:20:46.742 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-21 00:20:46.742 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-21 00:20:46.743 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:id]
2022-01-21 00:20:46.744 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-21 00:20:46.746 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-21 00:20:46.747 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-21 00:20:46.747 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Promotion), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.748 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-21 00:20:46.748 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Promotion:description]
2022-01-21 00:20:46.748 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-21 00:20:46.748 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-21 00:20:46.752 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.facture
2022-01-21 00:20:46.752 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-21 00:20:46.752 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name facture
2022-01-21 00:20:46.753 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.facture on table facture
2022-01-21 00:20:46.757 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.757 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-21 00:20:46.757 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-21 00:20:46.757 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-21 00:20:46.757 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:id]
2022-01-21 00:20:46.757 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-21 00:20:46.757 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-21 00:20:46.758 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-21 00:20:46.758 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.758 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property amount with lazy=false
2022-01-21 00:20:46.758 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:amount]
2022-01-21 00:20:46.758 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for amount
2022-01-21 00:20:46.758 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property amount
2022-01-21 00:20:46.759 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-21 00:20:46.759 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.761 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-21 00:20:46.762 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.762 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property description with lazy=false
2022-01-21 00:20:46.762 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.facture:description]
2022-01-21 00:20:46.762 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for description
2022-01-21 00:20:46.762 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property description
2022-01-21 00:20:46.763 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.767 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.768 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(facture), mappingColumn=produits_KEY, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.768 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='produits_KEY', referencedColumn='null', mappedBy='null'}
2022-01-21 00:20:46.769 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-21 00:20:46.769 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-01-21 00:20:46.769 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.facture.produits
2022-01-21 00:20:46.770 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property produits
2022-01-21 00:20:46.771 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.771 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-21 00:20:46.771 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-01-21 00:20:46.771 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Client on table TClients
2022-01-21 00:20:46.774 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.775 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-21 00:20:46.775 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-21 00:20:46.775 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-21 00:20:46.775 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:id]
2022-01-21 00:20:46.775 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-21 00:20:46.775 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-21 00:20:46.775 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=adresses, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=adresses_KEY, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='adresses_KEY', referencedColumn='null', mappedBy='null'}
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-21 00:20:46.776 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-21 00:20:46.777 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.adresses
2022-01-21 00:20:46.777 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property adresses
2022-01-21 00:20:46.777 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-21 00:20:46.777 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=carteFidelio, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.778 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-21 00:20:46.778 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.778 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.778 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.779 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=factures_KEY, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.779 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='factures_KEY', referencedColumn='null', mappedBy='null'}
2022-01-21 00:20:46.779 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-21 00:20:46.779 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
2022-01-21 00:20:46.779 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.factures
2022-01-21 00:20:46.779 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property factures
2022-01-21 00:20:46.779 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.780 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-21 00:20:46.780 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Client:name]
2022-01-21 00:20:46.780 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-21 00:20:46.780 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-21 00:20:46.780 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=null, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.780 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.781 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=promotions_KEY, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.781 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotions_KEY', referencedColumn='null', mappedBy='null'}
2022-01-21 00:20:46.781 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_fk', referencedColumn='id', mappedBy=''}
2022-01-21 00:20:46.781 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='promotion_fk', referencedColumn='id', mappedBy=''}
2022-01-21 00:20:46.781 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bind] [org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:449)] - Collection role: ma.cigma.pfe.models.Client.promotions
2022-01-21 00:20:46.781 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property promotions
2022-01-21 00:20:46.782 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.CarteFidelio
2022-01-21 00:20:46.782 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-21 00:20:46.782 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name CarteFidelio
2022-01-21 00:20:46.782 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.CarteFidelio on table CarteFidelio
2022-01-21 00:20:46.782 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:id]
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-21 00:20:46.783 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-21 00:20:46.784 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.784 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-21 00:20:46.784 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CarteFidelio), mappingColumn=code, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.784 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property code with lazy=false
2022-01-21 00:20:46.784 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.CarteFidelio:code]
2022-01-21 00:20:46.784 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for code
2022-01-21 00:20:46.784 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property code
2022-01-21 00:20:46.785 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Adresse
2022-01-21 00:20:46.785 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-21 00:20:46.785 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Adresse
2022-01-21 00:20:46.785 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Adresse on table Adresse
2022-01-21 00:20:46.785 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Adresse), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.785 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Adresse] is safe
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Adresse
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Adresse:id]
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Adresse), mappingColumn=Ville, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.786 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property Ville with lazy=false
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Adresse:Ville]
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for Ville
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property Ville
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Adresse), mappingColumn=avenue, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property avenue with lazy=false
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Adresse:avenue]
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for avenue
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property avenue
2022-01-21 00:20:46.787 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3JoinColumn{logicalColumnName='client_id', referencedColumn='', mappedBy=''}
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Adresse), mappingColumn=client, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property client
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Adresse), mappingColumn=pays, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property pays with lazy=false
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Adresse:pays]
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for pays
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property pays
2022-01-21 00:20:46.788 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: ma.cigma.pfe.models.Produit
2022-01-21 00:20:46.789 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-21 00:20:46.789 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name Produit
2022-01-21 00:20:46.789 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity ma.cigma.pfe.models.Produit on table Produit
2022-01-21 00:20:46.789 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.789 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Produit] is safe
2022-01-21 00:20:46.789 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Produit
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:id]
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-01-21 00:20:46.790 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:name]
2022-01-21 00:20:46.791 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-01-21 00:20:46.791 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-01-21 00:20:46.791 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Produit), mappingColumn=price, insertable=true, updatable=true, unique=false}
2022-01-21 00:20:46.791 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property price with lazy=false
2022-01-21 00:20:46.791 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Produit:price]
2022-01-21 00:20:46.791 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for price
2022-01-21 00:20:46.791 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property price
2022-01-21 00:20:46.792 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for amount
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for description
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for code
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-21 00:20:46.793 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for Ville
2022-01-21 00:20:46.794 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for avenue
2022-01-21 00:20:46.794 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for pays
2022-01-21 00:20:46.794 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-01-21 00:20:46.794 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-01-21 00:20:46.794 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for price
2022-01-21 00:20:46.796 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [promotion]
2022-01-21 00:20:46.796 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [facture]
2022-01-21 00:20:46.796 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-01-21 00:20:46.801 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [cartefidelio]
2022-01-21 00:20:46.801 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [adresse]
2022-01-21 00:20:46.801 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [produit]
2022-01-21 00:20:46.802 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.promotions
2022-01-21 00:20:46.802 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.Client.promotions
2022-01-21 00:20:46.803 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_fk, element: promotion_fk
2022-01-21 00:20:46.803 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.facture.produits
2022-01-21 00:20:46.803 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindManyToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1338)] - Binding as ManyToMany: ma.cigma.pfe.models.facture.produits
2022-01-21 00:20:46.806 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: facture_id, element: produits_id
2022-01-21 00:20:46.806 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.adresses
2022-01-21 00:20:46.806 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.adresses through a foreign key
2022-01-21 00:20:46.807 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.adresses -> Adresse
2022-01-21 00:20:46.807 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.Adresse.client
2022-01-21 00:20:46.807 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.Adresse
2022-01-21 00:20:46.808 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property carteFidelio
2022-01-21 00:20:46.808 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:50)] - Second pass for collection: ma.cigma.pfe.models.Client.factures
2022-01-21 00:20:46.808 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:903)] - Binding a OneToMany: ma.cigma.pfe.models.Client.factures through a foreign key
2022-01-21 00:20:46.808 DEBUG [main][org.hibernate.cfg.annotations.CollectionBinder] [bindOneToManySecondPass] [org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:941)] - Mapping collection: ma.cigma.pfe.models.Client.factures -> facture
2022-01-21 00:20:46.808 DEBUG [main][org.hibernate.cfg.annotations.TableBinder] [bindFk] [org.hibernate.cfg.annotations.TableBinder.bindFk(TableBinder.java:554)] - Retrieving property ma.cigma.pfe.models.facture.client
2022-01-21 00:20:46.808 DEBUG [main][org.hibernate.cfg.CollectionSecondPass] [doSecondPass] [org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:67)] - Mapped collection key: client_id, one-to-many: ma.cigma.pfe.models.facture
2022-01-21 00:20:46.809 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-21 00:20:46.809 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.810 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.810 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.810 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Produit
2022-01-21 00:20:46.811 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-21 00:20:46.811 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-21 00:20:46.811 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.812 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [processPropertyReferences] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processPropertyReferences(InFlightMetadataCollectorImpl.java:1891)] - Processing association property references
2022-01-21 00:20:46.812 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.812 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.812 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.813 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Produit
2022-01-21 00:20:46.813 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.facture
2022-01-21 00:20:46.813 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Promotion
2022-01-21 00:20:46.813 DEBUG [main][org.hibernate.boot.internal.InFlightMetadataCollectorImpl] [secondPassCompileForeignKeys] [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1796)] - Resolving reference to class: ma.cigma.pfe.models.Client
2022-01-21 00:20:46.833 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-01-21 00:20:46.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-01-21 00:20:46.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-01-21 00:20:46.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-01-21 00:20:46.837 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-01-21 00:20:46.837 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-01-21 00:20:46.837 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-01-21 00:20:46.837 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-01-21 00:20:46.863 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-21 00:20:46.864 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-21 00:20:46.871 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-01-21 00:20:46.872 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\Ismai\Desktop\tp8_client\target\classes;C:\Users\Ismai\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-context\5.3.14\spring-context-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-aop\5.3.14\spring-aop-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-expression\5.3.14\spring-expression-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-core\5.3.14\spring-core-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jcl\5.3.14\spring-jcl-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-tx\5.3.14\spring-tx-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-orm\5.3.14\spring-orm-5.3.14.jar;C:\Users\Ismai\.m2\repository\org\springframework\spring-jdbc\5.3.14\spring-jdbc-5.3.14.jar;C:\Users\Ismai\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\Ismai\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\Ismai\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-core\5.6.3.Final\hibernate-core-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\Ismai\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ismai\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\Ismai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ismai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ismai\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Ismai\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ismai\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ismai\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ismai\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ismai\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ismai\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.3.Final\hibernate-entitymanager-5.6.3.Final.jar;C:\Users\Ismai\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\Ismai\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka_2.10\0.8.2.0\kafka_2.10-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\org\apache\kafka\kafka-clients\0.8.2.0\kafka-clients-0.8.2.0.jar;C:\Users\Ismai\.m2\repository\net\jpountz\lz4\lz4\1.2.0\lz4-1.2.0.jar;C:\Users\Ismai\.m2\repository\org\xerial\snappy\snappy-java\1.1.1.6\snappy-java-1.1.1.6.jar;C:\Users\Ismai\.m2\repository\com\yammer\metrics\metrics-core\2.2.0\metrics-core-2.2.0.jar;C:\Users\Ismai\.m2\repository\org\scala-lang\scala-library\2.10.4\scala-library-2.10.4.jar;C:\Users\Ismai\.m2\repository\org\apache\zookeeper\zookeeper\3.4.6\zookeeper-3.4.6.jar;C:\Users\Ismai\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Ismai\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Ismai\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Ismai\.m2\repository\net\sf\jopt-simple\jopt-simple\3.2\jopt-simple-3.2.jar;C:\Users\Ismai\.m2\repository\com\101tec\zkclient\0.3\zkclient-0.3.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.1\jackson-databind-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.1\jackson-annotations-2.13.1.jar;C:\Users\Ismai\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.1\jackson-core-2.13.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, user.country.format=FR, java.vm.specification.version=14, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-14.0.2\bin, sun.java.command=ma.cigma.pfe.ApplicationRunner, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ismai, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Program Files\Java\jdk-14.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.cj.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=Ismai, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ismai\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\Ismai\Desktop\tp8_client, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=fr, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/tp8_client?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6242ae3b, java.library.path=C:\Program Files\Java\jdk-14.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\Ismai\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Ismai\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.1\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\Ismai\.dotnet\tools;C:\Users\Ismai\AppData\Roaming\npm;C:\Users\Ismai\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=58.0}
2022-01-21 00:20:46.879 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-01-21 00:20:46.880 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-01-21 00:20:46.880 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c806c8b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@63538bb4]
2022-01-21 00:20:46.908 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Promotion] is safe
2022-01-21 00:20:46.908 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Promotion
2022-01-21 00:20:47.011 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.012 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.013 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.facture] is safe
2022-01-21 00:20:47.013 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.facture
2022-01-21 00:20:47.024 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.024 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.facture#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.024 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.024 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.025 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Client] is safe
2022-01-21 00:20:47.025 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Client
2022-01-21 00:20:47.033 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.034 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Client#carteFidelio` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.034 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.034 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.034 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.CarteFidelio] is safe
2022-01-21 00:20:47.035 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.CarteFidelio
2022-01-21 00:20:47.039 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.039 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.CarteFidelio#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.039 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Adresse#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.039 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Adresse#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.039 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Adresse] is safe
2022-01-21 00:20:47.039 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Adresse
2022-01-21 00:20:47.043 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Adresse#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.043 DEBUG [main][org.hibernate.orm.bytecode.interceptor] [includeInBaseFetchGroup] [org.hibernate.bytecode.enhance.spi.interceptor.EnhancementHelper.includeInBaseFetchGroup(EnhancementHelper.java:46)] - To-one property `ma.cigma.pfe.models.Adresse#client` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-01-21 00:20:47.043 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [ma.cigma.pfe.models.Produit] is safe
2022-01-21 00:20:47.043 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Produit
2022-01-21 00:20:47.053 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.adresses
2022-01-21 00:20:47.053 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update Adresse set client_id=? where id=?
2022-01-21 00:20:47.053 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update Adresse set  where id=?
2022-01-21 00:20:47.053 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update Adresse set client_id=null where client_id=? and id=?
2022-01-21 00:20:47.054 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update Adresse set client_id=null where client_id=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.promotions
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into my_join_table_client_promotion (client_fk, promotion_fk) values (?, ?)
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update my_join_table_client_promotion set promotion_fk=? where client_fk=? and promotion_fk=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from my_join_table_client_promotion where client_fk=? and promotion_fk=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from my_join_table_client_promotion where client_fk=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.Client.factures
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: update facture set client_id=? where id=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture set  where id=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: update facture set client_id=null where client_id=? and id=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: update facture set client_id=null where client_id=?
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:687)] - Static SQL for collection: ma.cigma.pfe.models.facture.produits
2022-01-21 00:20:47.055 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:689)] -  Row insert: insert into facture_Produit (facture_id, produits_id) values (?, ?)
2022-01-21 00:20:47.056 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:692)] -  Row update: update facture_Produit set produits_id=? where facture_id=? and produits_id=?
2022-01-21 00:20:47.056 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:695)] -  Row delete: delete from facture_Produit where facture_id=? and produits_id=?
2022-01-21 00:20:47.056 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [logStaticSQL] [org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:698)] -  One-shot delete: delete from facture_Produit where facture_id=?
2022-01-21 00:20:47.058 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Promotion
2022-01-21 00:20:47.058 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Promotion where id =?
2022-01-21 00:20:47.058 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select promotion_.id, promotion_.description as descript2_6_ from Promotion promotion_ where promotion_.id=?
2022-01-21 00:20:47.058 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Promotion (description, id) values (?, ?)
2022-01-21 00:20:47.058 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Promotion set description=? where id=?
2022-01-21 00:20:47.058 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Promotion where id=?
2022-01-21 00:20:47.058 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Promotion (description) values (?)
2022-01-21 00:20:47.070 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ca610a0]
2022-01-21 00:20:47.071 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-21 00:20:47.071 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.077 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Promotion)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Promotion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Promotion)
          - SQL table alias mapping - promotion0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}

2022-01-21 00:20:47.080 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Promotion [NONE]: select promotion0_.id as id1_6_0_, promotion0_.description as descript2_6_0_ from Promotion promotion0_ where promotion0_.id=?
2022-01-21 00:20:47.080 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.facture
2022-01-21 00:20:47.080 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from facture where id =?
2022-01-21 00:20:47.080 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select facture_.id, facture_.amount as amount2_2_, facture_.client_id as client_i4_2_, facture_.description as descript3_2_ from facture facture_ where facture_.id=?
2022-01-21 00:20:47.081 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into facture (amount, client_id, description, id) values (?, ?, ?, ?)
2022-01-21 00:20:47.081 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update facture set amount=?, client_id=?, description=? where id=?
2022-01-21 00:20:47.081 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from facture where id=?
2022-01-21 00:20:47.081 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into facture (amount, client_id, description) values (?, ?, ?)
2022-01-21 00:20:47.081 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d80d65]
2022-01-21 00:20:47.081 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-21 00:20:47.081 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-21 00:20:47.084 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ef01a5]
2022-01-21 00:20:47.085 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.adresses
2022-01-21 00:20:47.085 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@125d47c4]
2022-01-21 00:20:47.086 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b53840a]
2022-01-21 00:20:47.086 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-21 00:20:47.086 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.factures
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f2276c9]
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d2ddde]
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b475e2]
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-21 00:20:47.087 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-21 00:20:47.088 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-21 00:20:47.088 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-21 00:20:47.088 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : produits
2022-01-21 00:20:47.088 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ae15]
2022-01-21 00:20:47.088 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577536e0]
2022-01-21 00:20:47.088 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.088 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.089 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.facture)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.facture.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.adresses, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.facture.client.adresses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Adresse, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.facture.client.adresses.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.facture.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.facture.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:6>, path=ma.cigma.pfe.models.facture.client.carteFidelio)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.facture.produits, querySpaceUid=<gen:7>, path=ma.cigma.pfe.models.facture.produits)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:8>, path=ma.cigma.pfe.models.facture.produits.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

2022-01-21 00:20:47.089 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.facture [NONE]: select facture0_.id as id1_2_0_, facture0_.amount as amount2_2_0_, facture0_.client_id as client_i4_2_0_, facture0_.description as descript3_2_0_, client1_.id as id1_7_1_, client1_.name as name2_7_1_, cartefidel2_.id as id1_1_2_, cartefidel2_.client_id as client_i3_1_2_, cartefidel2_.code as code2_1_2_ from facture facture0_ left outer join TClients client1_ on facture0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where facture0_.id=?
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Client
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_7_ from TClients client_ where client_.id=?
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1376883]
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : adresses
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@523a7801]
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@718fd7c1]
2022-01-21 00:20:47.090 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : factures
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bc6da03]
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f59a516]
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : promotions
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e22368c]
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@411cd156]
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c770db4]
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.client
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : carteFidelio.client
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : carteFidelio.code
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.091 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Client)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.adresses, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Client.adresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Adresse, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Client.adresses.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Client.factures)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Client.factures.<elements>)
          - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Client.promotions)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:6>, path=ma.cigma.pfe.models.Client.promotions.<elements>)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:7>, path=ma.cigma.pfe.models.Client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_7_0_}
          - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=ma.cigma.pfe.models.CarteFidelio)
                - SQL table alias mapping - cartefidel1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Client [NONE]: select client0_.id as id1_7_0_, client0_.name as name2_7_0_, cartefidel1_.id as id1_1_1_, cartefidel1_.client_id as client_i3_1_1_, cartefidel1_.code as code2_1_1_ from TClients client0_ left outer join CarteFidelio cartefidel1_ on client0_.id=cartefidel1_.client_id where client0_.id=?
2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.CarteFidelio
2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from CarteFidelio where id =?
2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select cartefidel_.id, cartefidel_.client_id as client_i3_1_, cartefidel_.code as code2_1_ from CarteFidelio cartefidel_ where cartefidel_.id=?
2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into CarteFidelio (client_id, code, id) values (?, ?, ?)
2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update CarteFidelio set client_id=?, code=? where id=?
2022-01-21 00:20:47.092 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from CarteFidelio where id=?
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into CarteFidelio (client_id, code) values (?, ?)
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61cda923]
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4262fdeb]
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.adresses
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5382184b]
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cb452c]
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2213639b]
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c26ba07]
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-21 00:20:47.093 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f25bf88]
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ea7565]
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : code
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.094 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.CarteFidelio)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.CarteFidelio)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.CarteFidelio.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.adresses, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.CarteFidelio.client.adresses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Adresse, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.CarteFidelio.client.adresses.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.CarteFidelio.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.CarteFidelio.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:6>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:7>, path=ma.cigma.pfe.models.CarteFidelio.client.promotions.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.CarteFidelio)
          - SQL table alias mapping - cartefidel0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}

2022-01-21 00:20:47.095 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_1_0_, cartefidel0_.client_id as client_i3_1_0_, cartefidel0_.code as code2_1_0_, client1_.id as id1_7_1_, client1_.name as name2_7_1_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.id=?
2022-01-21 00:20:47.101 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:106)] - Static select for entity ma.cigma.pfe.models.CarteFidelio [NONE]: select cartefidel0_.id as id1_1_1_, cartefidel0_.client_id as client_i3_1_1_, cartefidel0_.code as code2_1_1_, client1_.id as id1_7_0_, client1_.name as name2_7_0_ from CarteFidelio cartefidel0_ left outer join TClients client1_ on cartefidel0_.client_id=client1_.id where cartefidel0_.client_id=?
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Adresse
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Adresse where id =?
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select adresse_.id, adresse_.Ville as ville2_0_, adresse_.avenue as avenue3_0_, adresse_.client_id as client_i5_0_, adresse_.pays as pays4_0_ from Adresse adresse_ where adresse_.id=?
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Adresse (Ville, avenue, client_id, pays, id) values (?, ?, ?, ?, ?)
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Adresse set Ville=?, avenue=?, client_id=?, pays=? where id=?
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Adresse where id=?
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Adresse (Ville, avenue, client_id, pays) values (?, ?, ?, ?)
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e739bf]
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : Ville
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : avenue
2022-01-21 00:20:47.104 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7743ec]
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.adresses
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.adresses
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.factures
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f42e06e]
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad179b4]
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.name
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.promotions
2022-01-21 00:20:47.105 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2efd2f21]
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59c500f7]
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@316cda31]
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.client
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client.carteFidelio.client
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client.carteFidelio.code
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : pays
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.106 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Adresse)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Adresse, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Adresse)
          - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.Client, querySpaceUid=<gen:1>, path=ma.cigma.pfe.models.Adresse.client)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:2>, path=ma.cigma.pfe.models.Adresse.client.factures)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:3>, path=ma.cigma.pfe.models.Adresse.client.factures.<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:4>, path=ma.cigma.pfe.models.Adresse.client.promotions)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:5>, path=ma.cigma.pfe.models.Adresse.client.promotions.<elements>)
             - EntityAttributeFetchImpl(entity=ma.cigma.pfe.models.CarteFidelio, querySpaceUid=<gen:6>, path=ma.cigma.pfe.models.Adresse.client.carteFidelio)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Adresse)
          - SQL table alias mapping - adresse0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_7_1_}
                - JOIN (JoinDefinedByMetadata(carteFidelio)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=ma.cigma.pfe.models.CarteFidelio)
                      - SQL table alias mapping - cartefidel2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Adresse [NONE]: select adresse0_.id as id1_0_0_, adresse0_.Ville as ville2_0_0_, adresse0_.avenue as avenue3_0_0_, adresse0_.client_id as client_i5_0_0_, adresse0_.pays as pays4_0_0_, client1_.id as id1_7_1_, client1_.name as name2_7_1_, cartefidel2_.id as id1_1_2_, cartefidel2_.client_id as client_i3_1_2_, cartefidel2_.code as code2_1_2_ from Adresse adresse0_ left outer join TClients client1_ on adresse0_.client_id=client1_.id left outer join CarteFidelio cartefidel2_ on client1_.id=cartefidel2_.client_id where adresse0_.id=?
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: ma.cigma.pfe.models.Produit
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from Produit where id =?
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select produit_.id, produit_.name as name2_5_, produit_.price as price3_5_ from Produit produit_ where produit_.id=?
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into Produit (name, price, id) values (?, ?, ?)
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update Produit set name=?, price=? where id=?
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from Produit where id=?
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into Produit (name, price) values (?, ?)
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d2b075]
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-21 00:20:47.107 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : price
2022-01-21 00:20:47.108 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.108 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.108 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Produit)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Produit)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Produit)
          - SQL table alias mapping - produit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

2022-01-21 00:20:47.108 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity ma.cigma.pfe.models.Produit [NONE]: select produit0_.id as id1_5_0_, produit0_.name as name2_5_0_, produit0_.price as price3_5_0_ from Produit produit0_ where produit0_.id=?
2022-01-21 00:20:47.110 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62aeddc8]
2022-01-21 00:20:47.110 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11787b64]
2022-01-21 00:20:47.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : Ville
2022-01-21 00:20:47.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : avenue
2022-01-21 00:20:47.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-21 00:20:47.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-21 00:20:47.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : pays
2022-01-21 00:20:47.111 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.113 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.113 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.adresses)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.adresses, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.adresses])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Adresse, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.adresses].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.adresses)
          - SQL table alias mapping - adresses0_
          - alias suffix - 0_
          - suffixed key columns - {client_i5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Adresse)
                - SQL table alias mapping - adresses0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2022-01-21 00:20:47.114 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.adresses: select adresses0_.client_id as client_i5_0_0_, adresses0_.id as id1_0_0_, adresses0_.id as id1_0_1_, adresses0_.Ville as ville2_0_1_, adresses0_.avenue as avenue3_0_1_, adresses0_.client_id as client_i5_0_1_, adresses0_.pays as pays4_0_1_ from Adresse adresses0_ where adresses0_.client_id=?
2022-01-21 00:20:47.114 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@697d6ded]
2022-01-21 00:20:47.114 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d05f453]
2022-01-21 00:20:47.114 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-21 00:20:47.114 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.115 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.115 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.promotions)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.promotions, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.promotions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Promotion, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.promotions].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.promotions)
          - SQL table alias mapping - promotions0_
          - alias suffix - 0_
          - suffixed key columns - {client_f1_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Promotion)
                - SQL table alias mapping - promotion1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

2022-01-21 00:20:47.115 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.promotions: select promotions0_.client_fk as client_f1_4_0_, promotions0_.promotion_fk as promotio2_4_0_, promotion1_.id as id1_6_1_, promotion1_.description as descript2_6_1_ from my_join_table_client_promotion promotions0_ inner join Promotion promotion1_ on promotions0_.promotion_fk=promotion1_.id where promotions0_.client_fk=?
2022-01-21 00:20:47.115 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f2b90fc]
2022-01-21 00:20:47.115 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb41f5c]
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : amount
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : client
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:154)] - Property path deemed to be circular : client
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : description
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : produits
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed9f6f8]
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@251c4280]
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.116 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.Client.factures)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.Client.factures, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.Client.factures])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.facture, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.Client.factures].<elements>)
             - CollectionAttributeFetchImpl(collection=ma.cigma.pfe.models.facture.produits, querySpaceUid=<gen:2>, path=[ma.cigma.pfe.models.Client.factures].<elements>.produits)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:3>, path=[ma.cigma.pfe.models.Client.factures].<elements>.produits.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.Client.factures)
          - SQL table alias mapping - factures0_
          - alias suffix - 0_
          - suffixed key columns - {client_i4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.facture)
                - SQL table alias mapping - factures0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.Client.factures: select factures0_.client_id as client_i4_2_0_, factures0_.id as id1_2_0_, factures0_.id as id1_2_1_, factures0_.amount as amount2_2_1_, factures0_.client_id as client_i4_2_1_, factures0_.description as descript3_2_1_ from facture factures0_ where factures0_.client_id=?
2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35650279]
2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79a13920]
2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : price
2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(collection=ma.cigma.pfe.models.facture.produits)
    - Returns
       - CollectionReturnImpl(collection=ma.cigma.pfe.models.facture.produits, querySpaceUid=<gen:0>, path=[ma.cigma.pfe.models.facture.produits])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ma.cigma.pfe.models.Produit, querySpaceUid=<gen:1>, path=[ma.cigma.pfe.models.facture.produits].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ma.cigma.pfe.models.facture.produits)
          - SQL table alias mapping - produits0_
          - alias suffix - 0_
          - suffixed key columns - {facture_1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ma.cigma.pfe.models.Produit)
                - SQL table alias mapping - produit1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

2022-01-21 00:20:47.117 DEBUG [main][org.hibernate.loader.collection.plan.CollectionLoader] [<init>] [org.hibernate.loader.collection.plan.CollectionLoader.<init>(CollectionLoader.java:83)] - Static select for collection ma.cigma.pfe.models.facture.produits: select produits0_.facture_id as facture_1_3_0_, produits0_.produits_id as produits2_3_0_, produit1_.id as id1_5_1_, produit1_.name as name2_5_1_, produit1_.price as price3_5_1_ from facture_Produit produits0_ inner join Produit produit1_ on produits0_.produits_id=produit1_.id where produits0_.facture_id=?
2022-01-21 00:20:47.140 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Adresse
2022-01-21 00:20:47.141 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4b325930] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-21 00:20:47.164 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists CarteFidelio
2022-01-21 00:20:47.169 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture
2022-01-21 00:20:47.173 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists facture_Produit
2022-01-21 00:20:47.177 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists my_join_table_client_promotion
2022-01-21 00:20:47.181 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Produit
2022-01-21 00:20:47.185 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists Promotion
2022-01-21 00:20:47.188 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-01-21 00:20:47.194 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Adresse (
       id bigint not null auto_increment,
        Ville varchar(255),
        avenue varchar(255),
        pays varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-21 00:20:47.194 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@413d2cd1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-01-21 00:20:47.199 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table CarteFidelio (
       id bigint not null auto_increment,
        code varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-21 00:20:47.205 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture (
       id bigint not null auto_increment,
        amount double precision not null,
        description varchar(255),
        client_id bigint,
        primary key (id)
    ) engine=MyISAM
2022-01-21 00:20:47.209 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table facture_Produit (
       facture_id bigint not null,
        produits_id bigint not null
    ) engine=MyISAM
2022-01-21 00:20:47.213 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table my_join_table_client_promotion (
       client_fk bigint not null,
        promotion_fk bigint not null
    ) engine=MyISAM
2022-01-21 00:20:47.217 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Produit (
       id bigint not null auto_increment,
        name varchar(255),
        price integer not null,
        primary key (id)
    ) engine=MyISAM
2022-01-21 00:20:47.222 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table Promotion (
       id bigint not null auto_increment,
        description varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-21 00:20:47.226 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-01-21 00:20:47.231 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table Adresse 
       add constraint FKhimt1jntpx3beixpvm4d63ejb 
       foreign key (client_id) 
       references TClients (id)
2022-01-21 00:20:47.247 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table CarteFidelio 
       add constraint FK42sqa1jyguigkgd7pk9727ugw 
       foreign key (client_id) 
       references TClients (id)
2022-01-21 00:20:47.263 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture 
       add constraint FKt2r4g12bji310252ofda0r89i 
       foreign key (client_id) 
       references TClients (id)
2022-01-21 00:20:47.278 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture_Produit 
       add constraint FK5yogsykm541fosesosbl2yixo 
       foreign key (produits_id) 
       references Produit (id)
2022-01-21 00:20:47.295 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table facture_Produit 
       add constraint FKmmc97h2urn92obgwojn82ko56 
       foreign key (facture_id) 
       references facture (id)
2022-01-21 00:20:47.310 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKpt1xtwrw2mhdj2vdb6ne2ltp9 
       foreign key (promotion_fk) 
       references Promotion (id)
2022-01-21 00:20:47.323 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    alter table my_join_table_client_promotion 
       add constraint FKnphjchwvym5a1nqxah6wk76bj 
       foreign key (client_fk) 
       references TClients (id)
2022-01-21 00:20:47.338 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-01-21 00:20:47.338 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-21 00:20:47.341 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-21 00:20:47.342 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-21 00:20:47.342 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-01-21 00:20:47.342 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-01-21 00:20:47.344 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-01-21 00:20:47.347 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a1691c0
2022-01-21 00:20:47.348 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 42bf82a1-540c-4db4-9e3d-2789d1f3bca3 (<unnamed>)
2022-01-21 00:20:47.348 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-21 00:20:47.379 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-01-21 00:20:47.405 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-01-21 00:20:47.405 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-21 00:20:47.414 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.416 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-21 00:20:47.429 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-21 00:20:47.429 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.431 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-21 00:20:47.431 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-21 00:20:47.431 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-21 00:20:47.433 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-21 00:20:47.434 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-21 00:20:47.434 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-21 00:20:47.434 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, adresses=null, factures=null, id=1}
2022-01-21 00:20:47.436 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.436 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.436 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-21 00:20:47.437 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.437 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-21 00:20:47.438 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-21 00:20:47.439 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, adresses=null, factures=null, id=2}
2022-01-21 00:20:47.439 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, adresses=null, factures=null, id=1}
2022-01-21 00:20:47.439 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.439 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.439 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-21 00:20:47.440 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.440 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, adresses=null, factures=null, id=3}
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, adresses=null, factures=null, id=2}
2022-01-21 00:20:47.441 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, adresses=null, factures=null, id=1}
2022-01-21 00:20:47.442 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.442 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.442 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-21 00:20:47.442 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.442 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=AHMED, adresses=null, factures=null, id=3}
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, adresses=null, factures=null, id=2}
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, adresses=null, factures=null, id=4}
2022-01-21 00:20:47.444 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, adresses=null, factures=null, id=1}
2022-01-21 00:20:47.445 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.445 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.445 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-21 00:20:47.449 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-21 00:20:47.450 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-21 00:20:47.450 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-21 00:20:47.451 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-01-21 00:20:47.451 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-21 00:20:47.451 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-21 00:20:47.451 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, adresses=null, factures=null, id=3}
2022-01-21 00:20:47.451 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, adresses=null, factures=null, id=2}
2022-01-21 00:20:47.451 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, adresses=null, factures=null, id=4}
2022-01-21 00:20:47.451 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, adresses=null, factures=null, id=1}
2022-01-21 00:20:47.454 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-01-21 00:20:47.457 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.457 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.457 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-21 00:20:47.458 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-21 00:20:47.458 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-21 00:20:47.458 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, adresses=null, factures=null, id=3}
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, adresses=null, factures=null, id=2}
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, adresses=null, factures=null, id=4}
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=OMAR, adresses=null, factures=null, id=1}
2022-01-21 00:20:47.459 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    delete 
    from
        TClients 
    where
        id=?
2022-01-21 00:20:47.461 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.461 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.461 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-01-21 00:20:47.464 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.464 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-01-21 00:20:47.466 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 5
2022-01-21 00:20:47.466 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.466 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.466 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Adresse
        (Ville, avenue, client_id, pays) 
    values
        (?, ?, ?, ?)
2022-01-21 00:20:47.468 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-21 00:20:47.468 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.469 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.469 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-21 00:20:47.471 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-21 00:20:47.472 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.472 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.472 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Produit
        (name, price) 
    values
        (?, ?)
2022-01-21 00:20:47.474 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-21 00:20:47.474 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.474 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.474 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture
        (amount, client_id, description) 
    values
        (?, ?, ?)
2022-01-21 00:20:47.475 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-21 00:20:47.475 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.475 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.475 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-21 00:20:47.476 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-21 00:20:47.477 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.477 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.477 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        Promotion
        (description) 
    values
        (?)
2022-01-21 00:20:47.478 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-01-21 00:20:47.478 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.478 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-01-21 00:20:47.478 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        CarteFidelio
        (client_id, code) 
    values
        (?, ?)
2022-01-21 00:20:47.479 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-01-21 00:20:47.479 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-01-21 00:20:47.479 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-01-21 00:20:47.480 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-01-21 00:20:47.480 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-01-21 00:20:47.481 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.adresses#5], was: [<unreferenced>] (initialized)
2022-01-21 00:20:47.481 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.factures#5], was: [<unreferenced>] (initialized)
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.Client.promotions#5], was: [<unreferenced>] (initialized)
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.facture.produits#1], was: [<unreferenced>] (initialized)
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.engine.internal.Collections] [processReachableCollection] [org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:196)] - Collection found: [ma.cigma.pfe.models.facture.produits#2], was: [<unreferenced>] (initialized)
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 11 objects
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 5 (re)creations, 0 updates, 0 removals to 5 collections
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Produit{price=45, name=is, id=1}
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.CarteFidelio{code=zerz, client=ma.cigma.pfe.models.Client#5, id=1}
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=remise 10%, id=1}
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=IBTIHAL, adresses=null, factures=null, id=3}
2022-01-21 00:20:47.482 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=ismail, adresses=null, factures=null, id=2}
2022-01-21 00:20:47.483 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=ma.cigma.pfe.models.CarteFidelio#1, promotions=[ma.cigma.pfe.models.Promotion#1, ma.cigma.pfe.models.Promotion#2], name=ismail, adresses=[ma.cigma.pfe.models.Adresse#1], factures=[ma.cigma.pfe.models.facture#1, ma.cigma.pfe.models.facture#2], id=5}
2022-01-21 00:20:47.483 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Client{carteFidelio=null, promotions=null, name=FARAH, adresses=null, factures=null, id=4}
2022-01-21 00:20:47.483 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Promotion{description=solde 40%, id=2}
2022-01-21 00:20:47.483 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.Adresse{client=ma.cigma.pfe.models.Client#5, avenue=ze, id=1, Ville=sd, pays=dsd}
2022-01-21 00:20:47.483 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{produits=[ma.cigma.pfe.models.Produit#1], amount=120.0, client=ma.cigma.pfe.models.Client#5, description=xxl, id=1}
2022-01-21 00:20:47.483 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - ma.cigma.pfe.models.facture{produits=[ma.cigma.pfe.models.Produit#1], amount=12.0, client=ma.cigma.pfe.models.Client#5, description=free, id=2}
2022-01-21 00:20:47.484 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.Client.promotions#5]
2022-01-21 00:20:47.484 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-21 00:20:47.485 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        my_join_table_client_promotion
        (client_fk, promotion_fk) 
    values
        (?, ?)
2022-01-21 00:20:47.487 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 2 rows inserted
2022-01-21 00:20:47.487 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.facture.produits#1]
2022-01-21 00:20:47.487 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture_Produit
        (facture_id, produits_id) 
    values
        (?, ?)
2022-01-21 00:20:47.488 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 1 rows inserted
2022-01-21 00:20:47.488 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [recreate] [org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1294)] - Inserting collection: [ma.cigma.pfe.models.facture.produits#2]
2022-01-21 00:20:47.488 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        facture_Produit
        (facture_id, produits_id) 
    values
        (?, ?)
2022-01-21 00:20:47.489 DEBUG [main][org.hibernate.persister.collection.AbstractCollectionPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Done inserting collection: 1 rows inserted
2022-01-21 00:20:47.490 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.490 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-01-21 00:20:47.490 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
